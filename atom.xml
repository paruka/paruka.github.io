<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eloquent Programmer</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://paruka.me/"/>
  <updated>2017-08-06T14:04:55.841Z</updated>
  <id>http://paruka.me/</id>
  
  <author>
    <name>Paruka</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Lab 0：环境搭建</title>
    <link href="http://paruka.me/study_notes/ocw/mit/6.828/lab_0.html"/>
    <id>http://paruka.me/study_notes/ocw/mit/6.828/lab_0.html</id>
    <published>2017-07-20T10:03:00.000Z</published>
    <updated>2017-08-06T14:04:55.841Z</updated>
    
    <content type="html"><![CDATA[<div id="content">

<div id="outline-container-orgc070b10" class="outline-2">
<h2 id="&#x7B80;&#x4ECB;"><a id="orgc070b10"></a>&#x7B80;&#x4ECB;</h2>
<div class="outline-text-2" id="text-&#x7B80;&#x4ECB;">
<p>
<a href="https://pdos.csail.mit.edu/6.828/2016/schedule.html" target="_blank" rel="external">mit 6.828</a>&#x662F;&#x4E00;&#x95E8;&#x5E7F;&#x53D7;&#x597D;&#x8BC4;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8BFE;&#x7A0B;&#xFF0C;&#x5B83;&#x79C9;&#x627F;&#x5B9E;&#x8DF5;&#x4E3A;&#x4E3B;&#x7684;&#x7406;&#x5FF5;&#xFF0C;&#x901A;&#x8FC7;&#x8BBE;&#x8BA1;&#x5E76;&#x5B9E;&#x73B0;&#x4E00;unix-like&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF0C;&#x52A0;&#x6DF1;&#x5B66;&#x4E60;&#x8005;&#x5BF9;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x7406;&#x89E3;&#x3002;&#x672C;&#x6587;&#x5C06;&#x9075;&#x5FAA;<a href="https://pdos.csail.mit.edu/6.828/2016/labs/lab1/" target="_blank" rel="external">Lab 1: Booting a PC</a>&#x7684;&#x6307;&#x5F15;&#xFF0C;&#x5B8C;&#x6210;&#x5B66;&#x4E60;&#x73AF;&#x5883;&#x7684;&#x642D;&#x5EFA;&#xFF0C;&#x4E3A;&#x540E;&#x7EED;&#x5B66;&#x4E60;&#x505A;&#x597D;&#x51C6;&#x5907;&#x3002;
</p>

<p>
&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x672C;&#x6587;&#x5185;&#x5BB9;&#x6E90;&#x4E8E;<a href="https://pdos.csail.mit.edu/6.828/2016/labs/lab1/" target="_blank" rel="external">Lab 1: Booting a PC</a>&#xFF0C;&#x672C;&#x5E94;&#x4E0E;&#x4E0B;&#x4E00;&#x7BC7;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x4E00;&#x8D77;&#xFF0C;&#x63A2;&#x8BA8;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#xFF0C;&#x4F46;&#x56E0;&#x672C;&#x4EBA;&#x592A;&#x61D2;&#xFF0C;&#x8FD8;&#x662F;&#x5206;&#x6210;&#x4E24;&#x7BC7;&#x535A;&#x6587;&#x8BB2;&#x89E3;&#x5427;&#x3002;
</p>

<p>
Lab 1&#x662F;&#x8BE5;&#x8BFE;&#x7A0B;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x7EC3;&#x4E60;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x4ECB;&#x7ECD;x86&#x6C47;&#x7F16;&#x4EE5;&#x53CA;PC&#x7684;&#x542F;&#x52A8;&#x6D41;&#x7A0B;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x9700;&#x8981;QEMU&#x53CA;QEMU/GDB&#x8FDB;&#x884C;&#x534F;&#x8C03;&#x8C03;&#x8BD5;&#x3002;&#x5173;&#x4E8E;x86&#x6C47;&#x7F16;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#xFF0C;<a href="https://pdos.csail.mit.edu/6.828/2016/labs/lab1/" target="_blank" rel="external">Lab 1: Booting a PC</a>&#x4E2D;&#x7ED9;&#x4E88;&#x4E86;&#x5F88;&#x591A;&#x5B66;&#x4E60;&#x8D44;&#x6599;&#xFF0C;&#x5728;&#x6B64;&#x4FBF;&#x4E0D;&#x518D;&#x5E9F;&#x8BDD;&#x4E86;&#xFF0C;&#x672C;&#x6587;&#x53EA;&#x4F1A;&#x8BB0;&#x5F55;&#x5B66;&#x4E60;&#x73AF;&#x5883;&#x7684;&#x642D;&#x5EFA;&#x8FC7;&#x7A0B;&#x3002;
</p>
<a id="more"></a>
</div>
</div>

<div id="outline-container-orgd60aaa7" class="outline-2">
<h2 id="&#x601D;&#x8DEF;"><a id="orgd60aaa7"></a>&#x601D;&#x8DEF;</h2>
<div class="outline-text-2" id="text-&#x601D;&#x8DEF;">
<p>
&#x6B64;&#x8BFE;&#x7A0B;&#x4F7F;&#x7528;<a href="http://www.qemu.org/" target="_blank" rel="external">QEMU</a>&#x6A21;&#x62DF;x86&#x8BA1;&#x7B97;&#x673A;&#xFF0C;&#x5E76;&#x7528;GDB&#x5BF9;&#x7CFB;&#x7EDF;&#x8FDB;&#x884C;&#x8DDF;&#x8E2A;&#x8C03;&#x8BD5;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x521B;&#x5EFA;&#x4E86;&#x4E00;docker&#x955C;&#x50CF;&#xFF0C;&#x4E8E;&#x955C;&#x50CF;&#x4E2D;&#x5B89;&#x88C5;QEMU&#x53CA;GDB&#xFF0C;&#x5E76;&#x5F00;&#x653E;22&#x7AEF;&#x53E3;&#xFF0C;&#x65B9;&#x4FBF;&#x901A;&#x8FC7;ssh&#x8FDB;&#x5165;&#x5BB9;&#x5668;&#x5F00;&#x59CB;&#x8C03;&#x8BD5;&#x3002;
</p>
</div>
</div>

<div id="outline-container-orgac77472" class="outline-2">
<h2 id="dockerfiles"><a id="orgac77472"></a>Dockerfiles</h2>
<div class="outline-text-2" id="text-dockerfiles">
<p>
&#x9996;&#x5148;&#x5F53;&#x7136;&#x662F;&#x8981;&#x4E0B;&#x8F7D;QEMU&#x53CA;JOS&#x6E90;&#x7801;&#x4E86;&#xFF08;&#x6CE8;&#x610F;&#xFF0C;&#x4E0B;&#x8F7D;&#x901F;&#x5EA6;*&#x8D85;&#x6162;*&#xFF0C;&#x5EFA;&#x8BAE;&#x7FFB;&#x5899;&#x3002;&#xFF09;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://git.qemu-project.org/qemu.git <span class="built_in">source</span></span><br><span class="line">git <span class="built_in">clone</span> https://pdos.csail.mit.edu/<span class="number">6.828</span>/<span class="number">2016</span>/jos.git lab</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x56E0;&#x5BF9;debian&#x7CFB;&#x8F83;&#x4E3A;&#x719F;&#x6089;&#xFF0C;&#x6211;&#x4F7F;&#x7528;&#x4E86;ubuntu&#x4F5C;&#x4E3A;&#x955C;&#x50CF;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x56FD;&#x5916;&#x6E90;&#x90A3;*&#x8D85;&#x6162;*&#x7684;&#x4E0B;&#x8F7D;&#x901F;&#x5EA6;&#x662F;&#x4E0D;&#x53EF;&#x5FCD;&#x53D7;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x57FA;&#x4E8E;ubuntu&#x5B98;&#x65B9;&#x955C;&#x50CF;&#x5236;&#x4F5C;&#x4E86;&#x4E00;&#x81EA;&#x5DF1;&#x7684;ubuntu&#x955C;&#x50CF;&#xFF0C;&#x955C;&#x50CF;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x4EC5;&#x662F;&#x66F4;&#x6362;&#x4E86;&#x56FD;&#x5185;<a href="http://wiki.ubuntu.org.cn/%E6%BA%90%E5%88%97%E8%A1%A8" target="_blank" rel="external">&#x5B98;&#x65B9;&#x6E90;</a>&#x5E76;&#x5B89;&#x88C5;&#x4E86;supervisor&#x800C;&#x5DF2;&#xFF0C;Dockerfile&#x5982;&#x4E0B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># image: haruka/ubuntu</span></span><br><span class="line"></span><br><span class="line">FROM ubuntu</span><br><span class="line">MAINTAINER haruka <span class="string">&quot;paruka.me@gmail.com&quot;</span></span><br><span class="line"></span><br><span class="line">ADD sources.list /etc/apt/</span><br><span class="line"></span><br><span class="line">RUN apt-get update</span><br><span class="line">RUN apt-get upgrade -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># supervisor</span></span><br><span class="line">RUN apt-get install -y supervisor</span><br><span class="line">RUN mkdir -p /var/<span class="built_in">log</span>/supervisor</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x9700;&#x8981;&#x5728;&#x8FD0;&#x884C;&#x7CFB;&#x7EDF;&#x65F6;&#xFF0C;&#x901A;&#x8FC7;GDB&#x9644;&#x52A0;&#x8FDB;&#x7A0B;&#x8C03;&#x8BD5;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5BB9;&#x5668;&#x9700;&#x8981;&#x8FD0;&#x884C;sshd&#xFF08;&#x4E3A;&#x65B9;&#x4FBF;&#x4F7F;&#x7528;&#xFF0C;&#x5BC6;&#x7801;&#x8BBE;&#x4E3A;111&#xFF09;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># image: haruka/sshd</span></span><br><span class="line"></span><br><span class="line">FROM haruka/ubuntu</span><br><span class="line">MAINTAINER haruka <span class="string">&quot;paruka.me@gmail.com&quot;</span></span><br><span class="line"></span><br><span class="line">RUN apt-get update</span><br><span class="line">RUN apt-get upgrade -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># SSHD</span></span><br><span class="line">RUN apt-get install -y openssh-server openssh-client</span><br><span class="line">RUN mkdir /var/run/sshd</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">&apos;root:111&apos;</span> | chpasswd</span><br><span class="line">RUN sed -i <span class="string">&apos;s/PermitRootLogin prohibit-password/PermitRootLogin yes/&apos;</span> /etc/ssh/sshd_config</span><br><span class="line">RUN sed <span class="string">&apos;s@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g&apos;</span> -i /etc/pam.d/sshd</span><br><span class="line">ENV NOTVISIBLE <span class="string">&quot;in users profile&quot;</span></span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">&quot;export VISIBLE=now&quot;</span> &gt;&gt; /etc/profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXPOSE <span class="number">22</span></span><br><span class="line">CMD [<span class="string">&quot;/usr/sbin/sshd&quot;</span>, <span class="string">&quot;-D&quot;</span>]</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x63A5;&#x4E0B;&#x6765;&#x4FBF;&#x662F;&#x5B89;&#x88C5;QEMU&#x4E86;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># image: haruka/qemu</span></span><br><span class="line"></span><br><span class="line">FROM haruka/sshd</span><br><span class="line">MAINTAINER haruka <span class="string">&quot;paruka.me@gmail.com&quot;</span></span><br><span class="line"></span><br><span class="line">RUN apt-get update</span><br><span class="line">RUN apt-get upgrade -y</span><br><span class="line">RUN apt-get install -y build-essential libtool libglib2.<span class="number">0</span>-dev libpixman-<span class="number">1</span>-dev zlib1g-dev git libfdt-dev gcc-multilib gdb</span><br><span class="line"></span><br><span class="line">RUN mkdir -p /root/qemu</span><br><span class="line"></span><br><span class="line"><span class="comment">#source&#x4E3A;qemu&#x6E90;&#x7801;</span></span><br><span class="line">ADD <span class="built_in">source</span> /root/qemu</span><br><span class="line"></span><br><span class="line">WORKDIR /root/qemu</span><br><span class="line">RUN ./configure</span><br><span class="line">RUN make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x4F9D;&#x6B21;&#x8FDB;&#x5165;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;&#x955C;&#x50CF;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker build -t haruka/ubuntu --rm=<span class="literal">true</span> .</span><br><span class="line">sudo docker build -t haruka/sshd --rm=<span class="literal">true</span> .</span><br><span class="line">sudo docker build -t haruka/qemu --rm=<span class="literal">true</span> .</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6F2B;&#x957F;&#x7684;&#x7B49;&#x5F85;&#x8FC7;&#x540E;&#xFF0C;&#x955C;&#x50CF;&#x4FBF;&#x521B;&#x5EFA;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x5B9E;&#x9A8C;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /dir/to/lab/source&#x4E3A;lab&#x6240;&#x5904;&#x4F4D;&#x7F6E;</span></span><br><span class="line"><span class="comment"># git clone https://pdos.csail.mit.edu/6.828/2016/jos.git lab</span></span><br><span class="line">sudo docker run <span class="operator">-d</span> -p <span class="number">10000</span>:<span class="number">22</span> -v/dir/to/lab/<span class="built_in">source</span>:/root/lab haruka/qemu</span><br><span class="line">ssh root@localhost -p <span class="number">10000</span></span><br></pre></td></tr></table></figure>
</div>
</div>
</div>

<div id="outline-container-orgffbbdc7" class="outline-2">
<h2 id="&#x5BB9;&#x5668;&#x542F;&#x52A8;&#x811A;&#x672C;"><a id="orgffbbdc7"></a>&#x5BB9;&#x5668;&#x542F;&#x52A8;&#x811A;&#x672C;</h2>
<div class="outline-text-2" id="text-&#x5BB9;&#x5668;&#x542F;&#x52A8;&#x811A;&#x672C;">
<p>
&#x5BB9;&#x5668;&#x867D;&#x5DF2;&#x642D;&#x5EFA;&#x5B8C;&#x6210;&#xFF0C;&#x4F46;&#x6BCF;&#x6B21;&#x5F00;&#x59CB;&#x5B9E;&#x9A8C;&#x90FD;&#x9700;&#x8981;&#x624B;&#x52A8;&#x5F00;&#x542F;&#x5BB9;&#x5668;&#x3001;&#x8FDE;&#x63A5;ssh&#xFF0C;&#x663E;&#x5F97;&#x975E;&#x5E38;&#x7E41;&#x7410;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x7F16;&#x5199;&#x4E86;&#x4E00;&#x4E2A;&#x811A;&#x672C;&#xFF1A;*jos*&#xFF0C;&#x7B80;&#x5316;&#x8FD9;&#x4E00;&#x6D41;&#x7A0B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line"><span class="comment">#set -eu</span></span><br><span class="line"></span><br><span class="line">LAB_DIR=/home/haruka/Documents/OS/lab</span><br><span class="line">LAB_MOUNT_TO=/root/lab</span><br><span class="line">USING_IMAGE=<span class="string">&quot;haruka/qemu&quot;</span></span><br><span class="line">CONTAINER_NAME=<span class="string">&quot;jos&quot;</span></span><br><span class="line">DEFAULT_PORT=<span class="number">20000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> process_options</span><br><span class="line">{</span><br><span class="line">    i=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> [ <span class="variable">$i</span> -le <span class="variable">$#</span> ]; <span class="keyword">do</span></span><br><span class="line">	<span class="keyword">case</span> <span class="string">&quot;<span class="variable">${!i}</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">	    <span class="operator">-s</span>|--startup) startup=<span class="number">1</span>;;</span><br><span class="line">	    -p|--poweroff) poweroff=<span class="number">1</span>;;</span><br><span class="line">	    -P|--port)</span><br><span class="line">		(( i++ ))</span><br><span class="line">		port=<span class="variable">${!i}</span></span><br><span class="line">		;;</span><br><span class="line">	    <span class="operator">-l</span>|--list) desp=<span class="number">1</span>;;</span><br><span class="line">	<span class="keyword">esac</span></span><br><span class="line">	(( i++ ))</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="keyword">do</span>_startup</span><br><span class="line">{</span><br><span class="line">    docker run <span class="operator">-d</span> -p <span class="variable">${1}</span>:<span class="number">22</span> -v <span class="variable">${LAB_DIR}</span>:<span class="variable">${LAB_MOUNT_TO}</span> --name <span class="variable">${CONTAINER_NAME}</span> <span class="variable">${USING_IMAGE}</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="keyword">do</span>_poweroff</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">${1}</span> ]; <span class="keyword">then</span></span><br><span class="line">	docker <span class="built_in">kill</span> <span class="variable">${1}</span></span><br><span class="line">	docker rm <span class="variable">${1}</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> rm_container</span><br><span class="line">{</span><br><span class="line">    ids=$(docker ps -q <span class="operator">-f</span> <span class="string">&quot;status=<span class="variable">${1}</span>&quot;</span> <span class="operator">-f</span> <span class="string">&quot;name=<span class="variable">${CONTAINER_NAME}</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">${ids}</span> ]; <span class="keyword">then</span></span><br><span class="line">       docker rm <span class="variable">${ids}</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="keyword">do</span>_cleanup</span><br><span class="line">{</span><br><span class="line">    rm_container <span class="string">&quot;exited&quot;</span></span><br><span class="line">    rm_container <span class="string">&quot;created&quot;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="keyword">do</span>_connect</span><br><span class="line">{</span><br><span class="line">    ssh_port=$(docker port <span class="variable">${CONTAINER_NAME}</span> | grep <span class="string">&quot;22/tcp&quot;</span> | awk -F: <span class="string">&apos;{print $2}&apos;</span>)</span><br><span class="line">    ssh root@localhost -p <span class="variable">${ssh_port}</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">startup=</span><br><span class="line">poweroff=</span><br><span class="line">port=</span><br><span class="line">desp=</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">${EUID}</span> != <span class="number">0</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Please run as root&quot;</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">process_options <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line">container_id=$(docker ps -q <span class="operator">-f</span> <span class="string">&quot;name=<span class="variable">${CONTAINER_NAME}</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">${poweroff}</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">${container_id}</span> ]; <span class="keyword">then</span></span><br><span class="line">	<span class="keyword">do</span>_poweroff <span class="variable">${container_id}</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span>_cleanup</span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">${desp}</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">${container_id}</span> ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;container is running!&quot;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;container id: <span class="variable">${container_id}</span>&quot;</span></span><br><span class="line">	docker port <span class="variable">${CONTAINER_NAME}</span></span><br><span class="line">	<span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ $(docker ps -q <span class="operator">-f</span> <span class="string">&quot;status=exited&quot;</span> <span class="operator">-f</span> <span class="string">&quot;name=<span class="variable">${CONTAINER_NAME}</span>&quot;</span>) ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;container exited, run: \&quot;sudo jos -p\&quot; to cleanup&quot;</span></span><br><span class="line">	<span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ $(docker ps -q <span class="operator">-f</span> <span class="string">&quot;status=created&quot;</span> <span class="operator">-f</span> <span class="string">&quot;name=<span class="variable">${CONTAINER_NAME}</span>&quot;</span>) ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;container created, run: \&quot;sudo jos -p\&quot; to cleanup&quot;</span></span><br><span class="line">	<span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;no container is running&quot;</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! <span class="variable">${container_id}</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">do</span>_cleanup</span><br><span class="line">    <span class="keyword">do</span>_startup <span class="variable">${port:-$DEFAULT_PORT}</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">${startup}</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>_connect</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6267;&#x884C;&#x811A;&#x672C;&#x65F6;&#xFF0C;&#x9ED8;&#x8BA4;&#x884C;&#x4E3A;&#x4E3A;&#xFF1A;
</p>

<ul class="org-ul">
<li>&#x82E5;&#x5BB9;&#x5668;&#x672A;&#x8FD0;&#x884C;&#xFF0C;&#x5219;&#x8FD0;&#x884C;&#x5BB9;&#x5668;</li>
<li>&#x4F7F;&#x7528;ssh&#x8FDE;&#x63A5;&#x5BB9;&#x5668;</li>
</ul>

<p>
&#x56E0;&#x6B64;&#xFF0C;&#x5C06;&#x811A;&#x672C;&#x76EE;&#x5F55;&#x52A0;&#x5165;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF0C;&#x5F00;&#x59CB;&#x5B9E;&#x9A8C;&#x5C31;&#x53D8;&#x5F97;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x4E86;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x6253;&#x5F00;&#x4E00;&#x7EC8;&#x7AEF;&#xFF0C;&#x5F00;&#x59CB;&#x5B9E;&#x9A8C;</span></span><br><span class="line">sudo jos</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x4EE5;&#x8C03;&#x8BD5;&#x6A21;&#x5F0F;&#x8FD0;&#x884C;jos</span></span><br><span class="line">make qemu-gdb</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x5F00;&#x542F;&#x53E6;&#x4E00;&#x7EC8;&#x7AEF;&#xFF0C;&#x8FDE;&#x5165;&#x5BB9;&#x5668;</span></span><br><span class="line">sudo jos</span><br><span class="line"></span><br><span class="line"><span class="comment">#gdb&#x9644;&#x52A0;jos&#xFF0C;&#x5F00;&#x59CB;&#x5355;&#x6B65;&#x8C03;&#x8BD5;</span></span><br><span class="line">make gdb</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x5173;&#x95ED;&#x5BB9;&#x5668;</span></span><br><span class="line">sudo jos -p</span><br></pre></td></tr></table></figure>
</div>
</div>
</div>
</div>
<div id="postamble" class="status">
<div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;">Last Updated 2017-08-07 Mon 04:18. <br><a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 9.0.9)</div>
</div>
]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;content&quot;&gt;

&lt;div id=&quot;outline-container-orgc070b10&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;&amp;#x7B80;&amp;#x4ECB;&quot;&gt;&lt;a id=&quot;orgc070b10&quot;&gt;&lt;/a&gt;&amp;#x7B80;&amp;#x4ECB;&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-&amp;#x7B80;&amp;#x4ECB;&quot;&gt;
&lt;p&gt;
&lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2016/schedule.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mit 6.828&lt;/a&gt;&amp;#x662F;&amp;#x4E00;&amp;#x95E8;&amp;#x5E7F;&amp;#x53D7;&amp;#x597D;&amp;#x8BC4;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8BFE;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5B83;&amp;#x79C9;&amp;#x627F;&amp;#x5B9E;&amp;#x8DF5;&amp;#x4E3A;&amp;#x4E3B;&amp;#x7684;&amp;#x7406;&amp;#x5FF5;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x8BBE;&amp;#x8BA1;&amp;#x5E76;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E00;unix-like&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#xFF0C;&amp;#x52A0;&amp;#x6DF1;&amp;#x5B66;&amp;#x4E60;&amp;#x8005;&amp;#x5BF9;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&amp;#x672C;&amp;#x6587;&amp;#x5C06;&amp;#x9075;&amp;#x5FAA;&lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2016/labs/lab1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lab 1: Booting a PC&lt;/a&gt;&amp;#x7684;&amp;#x6307;&amp;#x5F15;&amp;#xFF0C;&amp;#x5B8C;&amp;#x6210;&amp;#x5B66;&amp;#x4E60;&amp;#x73AF;&amp;#x5883;&amp;#x7684;&amp;#x642D;&amp;#x5EFA;&amp;#xFF0C;&amp;#x4E3A;&amp;#x540E;&amp;#x7EED;&amp;#x5B66;&amp;#x4E60;&amp;#x505A;&amp;#x597D;&amp;#x51C6;&amp;#x5907;&amp;#x3002;
&lt;/p&gt;

&lt;p&gt;
&amp;#x4E8B;&amp;#x5B9E;&amp;#x4E0A;&amp;#xFF0C;&amp;#x672C;&amp;#x6587;&amp;#x5185;&amp;#x5BB9;&amp;#x6E90;&amp;#x4E8E;&lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2016/labs/lab1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lab 1: Booting a PC&lt;/a&gt;&amp;#xFF0C;&amp;#x672C;&amp;#x5E94;&amp;#x4E0E;&amp;#x4E0B;&amp;#x4E00;&amp;#x7BC7;&amp;#x5B66;&amp;#x4E60;&amp;#x7B14;&amp;#x8BB0;&amp;#x4E00;&amp;#x8D77;&amp;#xFF0C;&amp;#x63A2;&amp;#x8BA8;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x7684;&amp;#x542F;&amp;#x52A8;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4F46;&amp;#x56E0;&amp;#x672C;&amp;#x4EBA;&amp;#x592A;&amp;#x61D2;&amp;#xFF0C;&amp;#x8FD8;&amp;#x662F;&amp;#x5206;&amp;#x6210;&amp;#x4E24;&amp;#x7BC7;&amp;#x535A;&amp;#x6587;&amp;#x8BB2;&amp;#x89E3;&amp;#x5427;&amp;#x3002;
&lt;/p&gt;

&lt;p&gt;
Lab 1&amp;#x662F;&amp;#x8BE5;&amp;#x8BFE;&amp;#x7A0B;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EC3;&amp;#x4E60;&amp;#xFF0C;&amp;#x76EE;&amp;#x7684;&amp;#x662F;&amp;#x4ECB;&amp;#x7ECD;x86&amp;#x6C47;&amp;#x7F16;&amp;#x4EE5;&amp;#x53CA;PC&amp;#x7684;&amp;#x542F;&amp;#x52A8;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;QEMU&amp;#x53CA;QEMU/GDB&amp;#x8FDB;&amp;#x884C;&amp;#x534F;&amp;#x8C03;&amp;#x8C03;&amp;#x8BD5;&amp;#x3002;&amp;#x5173;&amp;#x4E8E;x86&amp;#x6C47;&amp;#x7F16;&amp;#x76F8;&amp;#x5173;&amp;#x77E5;&amp;#x8BC6;&amp;#xFF0C;&lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2016/labs/lab1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lab 1: Booting a PC&lt;/a&gt;&amp;#x4E2D;&amp;#x7ED9;&amp;#x4E88;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;&amp;#x5B66;&amp;#x4E60;&amp;#x8D44;&amp;#x6599;&amp;#xFF0C;&amp;#x5728;&amp;#x6B64;&amp;#x4FBF;&amp;#x4E0D;&amp;#x518D;&amp;#x5E9F;&amp;#x8BDD;&amp;#x4E86;&amp;#xFF0C;&amp;#x672C;&amp;#x6587;&amp;#x53EA;&amp;#x4F1A;&amp;#x8BB0;&amp;#x5F55;&amp;#x5B66;&amp;#x4E60;&amp;#x73AF;&amp;#x5883;&amp;#x7684;&amp;#x642D;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;
&lt;/p&gt;
    
    </summary>
    
      <category term="Study Notes" scheme="http://paruka.me/categories/Study-Notes/"/>
    
      <category term="OS" scheme="http://paruka.me/categories/Study-Notes/OS/"/>
    
    
      <category term="mit 6.828" scheme="http://paruka.me/tags/mit-6-828/"/>
    
  </entry>
  
  <entry>
    <title>条款24：区别通用引用与右值引用</title>
    <link href="http://paruka.me/translation/effective_modern_cpp/item24.html"/>
    <id>http://paruka.me/translation/effective_modern_cpp/item24.html</id>
    <published>2017-07-10T07:22:00.000Z</published>
    <updated>2017-08-06T18:39:43.695Z</updated>
    
    <content type="html"><![CDATA[<div id="content">
<p>
&#x90FD;&#x8BF4;&#x771F;&#x7406;&#x8BA9;&#x4EBA;&#x5982;&#x83B7;&#x81EA;&#x7531;&#xFF0C;&#x4F46;&#x5728;&#x6B63;&#x786E;&#x7684;&#x60C5;&#x5F62;&#x4E0B;&#xFF0C;&#x4E00;&#x4E2A;&#x6070;&#x5F53;&#x7684;&#x8C0E;&#x8A00;&#x5374;&#x80FD;&#x4EA7;&#x751F;&#x540C;&#x6837;&#x7684;&#x6548;&#x679C;&#x3002;&#x6B64;&#x6761;&#x6B3E;&#x4FBF;&#x662F;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x8C0E;&#x8A00;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x6211;&#x4EEC;&#x662F;&#x5728;&#x4E0E;&#x8F6F;&#x4EF6;&#x6253;&#x4EA4;&#x9053;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5E94;&#x907F;&#x514D;&#x4F7F;&#x7528;&quot;&#x8C0E;&#x8A00;&quot;&#x8FD9;&#x6837;&#x7684;&#x654F;&#x611F;&#x8BCD;&#x6C47;&#xFF0C;&#x6545;&#x7528;&quot;&#x62BD;&#x8C61;&quot;&#x4E00;&#x8BCD;&#x53D6;&#x800C;&#x4EE3;&#x4E4B;&#x3002;
</p>

<p>
&#x4F60;&#x4F7F;&#x7528; <b>T&amp;&amp;</b> &#x7684;&#x65B9;&#x5F0F;&#x6765;&#x58F0;&#x660E;&#x4E00;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5047;&#x5B9A;&#x4EE3;&#x7801;&#x4E2D;&#x770B;&#x5230;&#x7684;&quot;T&amp;&amp;&quot;&#x4E3A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x4F3C;&#x4E4E;&#x5408;&#x4E4E;&#x60C5;&#x7406;&#x3002;&#x54CE;&#xFF0C;&#x53EF;&#x60DC;&#x5B83;&#x5E76;&#x975E;&#x5982;&#x6B64;&#x7B80;&#x5355;&#x3002;
</p>

<a id="more"></a>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(Widget&amp;&amp; param)</span></span>;           <span class="comment">// rvalue reference</span></span><br><span class="line"></span><br><span class="line">Widget&amp;&amp; val1 = Widget();         <span class="comment">// rvalue reference</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span>&amp;&amp; var2 = val1;               <span class="comment">// not rvalue reference</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;T&gt;&amp;&amp; param)</span></span>;   <span class="comment">// rvalue reference</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T&amp;&amp; param)</span></span>;                <span class="comment">// not rvalue reference</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&quot;T&amp;&amp;&quot;&#x6709;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x542B;&#x4E49;&#x3002;&#x5176;&#x4E00;&#x5F53;&#x7136;&#x5C31;&#x662F;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x3002;&#x8FD9;&#x79CD;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x8868;&#x73B0;&#x7684;&#x4E0E;&#x4F60;&#x671F;&#x671B;&#x7684;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#xFF1A;&#x5B83;&#x4EEC;&#x53EA;&#x80FD;&#x7ED1;&#x5B9A;&#x81F3;&#x53F3;&#x503C;&#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x5B58;&#x5728;&#x76EE;&#x7684;<sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup>&#x4E3A;&#x6807;&#x8BC6;&#x90A3;&#x4E9B;&#x80FD;&#x79FB;&#x52A8;&#x7684;&#x5BF9;&#x8C61;&#x3002;
</p>

<p>
&quot;T&amp;&amp;&quot;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x542B;&#x4E49;&#x65E2;&#x4E0D;&#x662F;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x8FD9;&#x79CD;&#x5F15;&#x7528;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x770B;&#x8D77;&#x6765;&#x50CF;&#x662F;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF08;&quot;T&amp;&amp;&quot;&#xFF09;&#xFF0C;&#x5374;&#x53EF;&#x4EE5;&#x8868;&#x73B0;&#x51FA;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x7684;&#x884C;&#x4E3A;&#xFF08;&quot;T&amp;&quot;&#xFF09;&#x3002;&#x8FD9;&#x79CD;&#x53CC;&#x91CD;&#x6027;&#x5141;&#x8BB8;&#x5B83;&#x4EEC;&#x65E2;&#x80FD;&#x7ED1;&#x5B9A;&#x53F3;&#x503C;&#xFF08;&#x50CF;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF09;&#x4E5F;&#x80FD;&#x7ED1;&#x5B9A;&#x5DE6;&#x503C;&#xFF08;&#x50CF;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#xFF09;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x80FD;&#x7ED1;&#x5B9A;&#x81F3; <b>const</b> &#x3001; <b>non-const</b> &#x3001; <b>volatile</b> &#x3001; <b>non-volatile</b> &#x5C5E;&#x6027;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5373;&#x4F7F;&#x5B83;&#x4EEC;&#x540C;&#x65F6;&#x62E5;&#x6709; <b>const</b> &#x548C; <b>volatile</b> &#x5C5E;&#x6027;&#x4E5F;&#x6BEB;&#x4E0D;&#x4F8B;&#x5916;&#xFF08;&#x53EF;&#x4EE5;&#x7ED1;&#x5B9A;&#xFF09;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5B83;&#x4EEC;&#x53EF;&#x4EE5;&#x7ED1;&#x5B9A;&#x81F3;&#x4EFB;&#x4F55;&#x5BF9;&#x8C61;&#x3002;&#x8FD9;&#x79CD;&#x7A7A;&#x524D;&#x590D;&#x6742;&#x7684;&#x5F15;&#x7528;&#x5E94;&#x5F53;&#x88AB;&#x8D4B;&#x4E88;&#x4E00;&#x4E13;&#x5C5E;&#x540D;&#x5B57;&#x3002;&#x6211;&#x79F0;&#x4E4B;&#x4E3A; <b>&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;universal references&#xFF09;<sup><a id="fnr.2" class="footref" href="#fn.2">2</a></sup></b> &#x3002;
</p>

<p>
&#x901A;&#x7528;&#x5F15;&#x7528;&#x4E8E;&#x4E24;&#x79CD;&#x60C5;&#x5883;&#x4E2D;&#x51FA;&#x73B0;&#x3002;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x60C5;&#x5883;&#x4E3A;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x3002;&#x6B63;&#x5982;&#x4E4B;&#x524D;&#x6240;&#x5217;&#x4F8B;&#x5B50;&#x4E2D;&#x5F15;&#x51FA;&#x7684;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T&amp;&amp; param)</span></span>;                 <span class="comment">// param is a universal reference</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x7B2C;&#x4E8C;&#x79CD;&#x60C5;&#x5883;&#x4FBF;&#x662F; <b>auto</b> &#x58F0;&#x660E;&#xFF0C;&#x4EE5;&#x4E0B;&#x4F8B;&#x5B50;&#x540C;&#x6837;&#x5F15;&#x7528;&#x81EA;&#x4E4B;&#x524D;&#x6240;&#x5217;&#x793A;&#x4F8B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span>&amp;&amp; var2 = var1;                <span class="comment">// var2 is a universal reference</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x8FD9;&#x4E9B;&#x60C5;&#x5883;&#x7684;&#x5171;&#x901A;&#x70B9;&#x4FBF;&#x662F; <b>&#x7C7B;&#x578B;&#x63A8;&#x5BFC;</b> &#x3002;&#x5BF9;&#x4E8E;&#x6A21;&#x677F;&#x51FD;&#x6570;f&#xFF0C; <b>param</b> &#x7684;&#x7C7B;&#x578B;&#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#xFF0C;var2&#x7684;&#x58F0;&#x660E;&#x540C;&#x6837;&#x5982;&#x6B64;&#xFF0C;&#x4ED6;&#x7684;&#x7C7B;&#x578B;&#x4E00;&#x6837;&#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#x3002;&#x4E0E;&#x5982;&#x4E0B;&#x4F8B;&#x5B50;&#x5BF9;&#x6BD4;&#xFF08;&#x540C;&#x6837;&#x5F15;&#x81EA;&#x4E4B;&#x524D;&#x6240;&#x5217;&#x793A;&#x4F8B;&#xFF09;&#xFF0C;&#x5B83;&#x4EEC;&#x7F3A;&#x4E4F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5F53;&#x4F60;&#x53D1;&#x73B0;&quot;T&amp;&amp;&quot;&#x6CA1;&#x6709;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#xFF0C;&#x5B83;&#x4FBF;&#x662F;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(Widget&amp;&amp; param)</span></span>;             <span class="comment">// no type deduction;</span></span><br><span class="line">				    <span class="comment">// param is an rvalue reference</span></span><br><span class="line"></span><br><span class="line">Widget&amp;&amp; var1 = Widget();           <span class="comment">// no type deduction;</span></span><br><span class="line">				    <span class="comment">// var1 is an rvalue reference</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x901A;&#x7528;&#x5F15;&#x7528;&#x4E5F;&#x662F;&#x5F15;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5B83;&#x4EEC;&#x5FC5;&#x987B;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x3002;&#x901A;&#x7528;&#x5F15;&#x7528;&#x7684;&#x521D;&#x59CB;&#x503C;&#x51B3;&#x5B9A;&#x4E86;&#x5B83;&#x5E94;&#x8868;&#x73B0;&#x4E3A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x6216;&#x662F;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x3002;&#x5982;&#x679C;&#x521D;&#x59CB;&#x503C;&#x4E3A;&#x53F3;&#x503C;&#xFF0C;&#x901A;&#x7528;&#x5F15;&#x7528;&#x76F8;&#x5F53;&#x4E0E;&#x4E00;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x3002;&#x5982;&#x679C;&#x521D;&#x59CB;&#x503C;&#x4E3A;&#x5DE6;&#x503C;&#xFF0C;&#x5B83;&#x4FBF;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x3002;&#x5BF9;&#x4E8E;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x4E2D;&#x7684;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF0C;&#x5B83;&#x7684;&#x521D;&#x59CB;&#x5316;&#x7531;&#x8C03;&#x7528;&#x7AEF;&#x63D0;&#x4F9B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T&amp;&amp; param)</span></span>;                   <span class="comment">// param is a universal reference</span></span><br><span class="line"></span><br><span class="line">Widget w;</span><br><span class="line">f(w);                                <span class="comment">// lvalue passed to f; param&apos;s type is</span></span><br><span class="line">				     <span class="comment">// Widget&amp; (i.e., an lvalue reference)</span></span><br><span class="line"></span><br><span class="line">f(<span class="built_in">std</span>::move(w));                     <span class="comment">// rvalue passed to f; param&apos;s type is</span></span><br><span class="line">				     <span class="comment">// Widget&amp;&amp; (i.e., an rvalue reference)</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5BF9;&#x4E8E;&#xFF08;&#x6210;&#x4E3A;&#xFF09;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF0C;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x5374;&#x5E76;&#x4E0D;&#x8DB3;&#x591F;&#x3002;&#x5176;&#x5F15;&#x7528;&#x58F0;&#x660E;&#x5F62;&#x5F0F;&#x5FC5;&#x987B;&#x6B63;&#x786E;&#xFF0C;&#x58F0;&#x660E;&#x6837;&#x5F0F;&#x975E;&#x5E38;&#x56FA;&#x5B9A;&#xFF0C;&#x5FC5;&#x987B;&#x4E3A;&#x7CBE;&#x786E;&#x7684;&quot;T&amp;&amp;&quot;&#x6837;&#x5F0F;&#x3002;&#x53C2;&#x770B;&#x5F15;&#x81EA;&#x4E4B;&#x524D;&#x4F8B;&#x5B50;&#x7684;&#x4EE3;&#x7801;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;T&gt;&amp;&amp; param)</span></span>;      <span class="comment">// param is an rvalue reference</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5F53;f&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x7C7B;&#x578B; <b>T</b> &#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#xFF08;&#x9664;&#x975E;&#x8C03;&#x7528;&#x8005;&#x76F4;&#x63A5;&#x6307;&#x5B9A;&#xFF0C;&#x8FD9;&#x79CD;&#x8FB9;&#x7F18;&#x60C5;&#x51B5;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x5173;&#x5FC3;&#xFF09;&#x3002;&#x4F46; <b>param</b> &#x7684;&#x7C7B;&#x578B;&#x58F0;&#x660E;&#x5E76;&#x4E0D;&#x662F;&quot;T&amp;&amp;&quot;&#xFF0C;&#x800C;&#x662F;&quot;std::vector&lt;T&gt;&amp;&amp;&quot;&#xFF0C;&#x5B83;&#x5E76;&#x4E0D;&#x6EE1;&#x8DB3;&#x901A;&#x7528;&#x5F15;&#x7528;&#x7684;&#x58F0;&#x660E;&#x89C4;&#x5219;&#x3002;&#x56E0;&#x6B64;&#xFF0C; <b>param</b> &#x4E3A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x8BD5;&#x56FE;&#x5411; <b>f</b> &#x4F20;&#x5165;&#x4E00;&#x5DE6;&#x503C;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x5C06;&#x5F88;&#x4E50;&#x4E8E;&#x5411;&#x4F60;&#x8BC1;&#x660E;&#x8FD9;&#x70B9;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">f(v);                                <span class="comment">// error! can&apos;t bind lvalue to</span></span><br><span class="line">				     <span class="comment">// rvalue reference</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x54EA;&#x6015;&#x662F;&#x4E00;&#x5C0F;&#x5C0F;&#x7684; <b>const</b> &#x4FEE;&#x9970;&#x7B26;&#xFF0C;&#x4E5F;&#x8DB3;&#x4EE5;&#x8BA9;&#x5B83;&#x5931;&#x53BB;&#x6210;&#x4E3A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x7684;&#x8D44;&#x683C;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">const</span> T&amp;&amp; param)</span></span>;             <span class="comment">// param is an rvalue reference</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x4E8E;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x4E2D;&#x770B;&#x5230; <b>T&amp;&amp;</b> &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x65F6;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x8BA4;&#x4E3A;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x3002;&#x4F46;&#x8FD9;&#x5E76;&#x4E0D;&#x603B;&#x662F;&#x6B63;&#x786E;&#xFF0C;&#x56E0;&#x4E3A;&#x6A21;&#x677F;&#x5E76;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x7684;&#x53D1;&#x751F;&#x3002;&#x8003;&#x8651; <b>std::vector</b> &#x7684; <b>push_back</b> &#x6210;&#x5458;&#x51FD;&#x6570;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> Allocator = allocator&lt;T&gt;&gt;    <span class="comment">// from C++</span></span><br><span class="line"><span class="keyword">class</span> <span class="built_in">vector</span>{                                         <span class="comment">// Standards</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push_back</span><span class="params">(T&amp;&amp; x)</span></span>;</span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>

<p>
<b>push_back</b> &#x7684;&#x53C2;&#x6570;&#x5B8C;&#x5168;&#x7B26;&#x5408;&#x901A;&#x7528;&#x5F15;&#x7528;&#x7684;&#x58F0;&#x660E;&#x6837;&#x5F0F;&#xFF0C;&#x4F46;&#x5374;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A; <b>push_back</b> &#x662F;&#x4F5C;&#x4E3A; <b>vector</b> &#x5B9E;&#x4F8B;&#x5316;&#x540E;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x5B58;&#x5728;&#x7684;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x5B9E;&#x4F8B;&#x5316;&#x5DF2;&#x7ECF;&#x5B8C;&#x5168;&#x786E;&#x5B9A;&#x4E86; <b>push_back</b> &#x7684;&#x58F0;&#x660E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Widget&gt; v;</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x4F1A;&#x4F7F; <b>std::vector</b> &#x5B9E;&#x4F8B;&#x5316;&#x4E3A;&#x5982;&#x4E0B;&#x6837;&#x5F0F;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Vector&lt;Widget, allocator&lt;Widget&gt;&gt;</span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push_back</span><span class="params">(Widget&amp;&amp; x)</span></span>;                       <span class="comment">// rvalue reference</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x73B0;&#x5728;&#x4F60;&#x53EF;&#x4EE5;&#x5F88;&#x6E05;&#x695A;&#x7684;&#x770B;&#x5230;&#xFF0C; <b>push_back</b> &#x5E76;&#x6CA1;&#x6709;&#x89E6;&#x53D1;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x3002; <b>std::vector</b> &#x7684; <b>push_back</b> &#x65B9;&#x6CD5;&#xFF08;&#x6709;&#x4E24;&#x4E2A;&#x2500;&#x2500;&#x51FD;&#x6570;&#x91CD;&#x8F7D;&#xFF09;&#x603B;&#x662F;&#x58F0;&#x660E;&#x4E86;&#x4E00;&#x4E2A; <b>T</b> &#x7C7B;&#x578B;&#x7684;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002;&#x76F8;&#x53CD;&#xFF0C;&#x4E0E;&#x5176;&#x529F;&#x80FD;&#x7C7B;&#x4F3C;&#x7684;&#x53E6;&#x4E00;&#x6210;&#x5458;&#x51FD;&#x6570; <b>emplace_back</b> &#x5219;&#x89E6;&#x53D1;&#x4E86;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> Allocator = allocator&lt;T&gt;&gt;    <span class="comment">// still from</span></span><br><span class="line"><span class="keyword">class</span> <span class="built_in">vector</span> {                                        <span class="comment">// C++</span></span><br><span class="line"><span class="keyword">public</span>:                                               <span class="comment">// Standards</span></span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">class</span>... Args&gt;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">emplace_back</span><span class="params">(Args&amp;&amp;... args)</span></span>;</span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x8FD9;&#x91CC;&#x7684;&#x7C7B;&#x578B;&#x53C2;&#x6570; <b>Args</b> &#x4E0E; <b>vector</b> &#x7684;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x72EC;&#x7ACB;&#xFF0C;&#x56E0;&#x6B64;&#x6BCF;&#x6B21; <b>emplace_back</b> &#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x4F1A;&#x53D1;&#x751F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x3002;&#xFF08;&#x597D;&#x5427;&#xFF0C;&#x5176;&#x5B9E; <b>Args</b> &#x662F;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5305;&#xFF0C;&#x4E0D;&#x662F;&#x4E00;&#x5177;&#x4F53;&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x8BA8;&#x8BBA;&#x8FD9;&#x4E00;&#x8BDD;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x89C6;&#x5176;&#x4E3A;&#x4E00;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#xFF09;&#x3002;
</p>

<p>
&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C; <b>emplace_back</b> &#x7684;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x4E3A; <b>Args</b> &#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF0C;&#x8FD9;&#x4E00;&#x4E8B;&#x5B9E;&#x5DE9;&#x56FA;&#x4E86;&#x6211;&#x4E4B;&#x524D;&#x6240;&#x8FF0;&#x7684;&#x89C2;&#x70B9;&#xFF1A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x7684;&#x58F0;&#x660E;&#x6837;&#x5F0F;&#x5FC5;&#x987B;&#x4E3A;&quot;T&amp;&amp;&quot;&#xFF0C;&#x4F46;&#x5E76;&#x6CA1;&#x6709;&#x5BF9;&#x540D;&#x5B57; <b>T</b> &#x7684;&#x4F7F;&#x7528;&#x6709;&#x8981;&#x6C42;&#x3002;&#x4F8B;&#x5982;&#x5982;&#x4E0B;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x4FBF;&#x63A5;&#x6536;&#x4E00;&#x901A;&#x7528;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5B83;&#x7684;&#x58F0;&#x660E;&#x6837;&#x5F0F;&#xFF08;&quot;type&amp;&amp;&quot;&#xFF09;&#x6B63;&#x786E;&#xFF0C;&#x4E14;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x9700;&#x8981;&#x63A8;&#x5BFC;&#xFF08;&#x518D;&#x6B21;&#x5F3A;&#x8C03;&#xFF1A;&#x9700;&#x6392;&#x9664;&#x8C03;&#x7528;&#x8005;&#x663E;&#x793A;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x7684;&#x6781;&#x7AEF;&#x60C5;&#x51B5;&#xFF09;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> MyTemplateType&gt;          <span class="comment">// param is a</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">someFunc</span><span class="params">(MyTemplateType&amp;&amp; param)</span></span>;      <span class="comment">// universal reference</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6211;&#x4E4B;&#x524D;&#x8BB2;&#x8FC7;&#xFF0C; <b>auto</b> &#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x901A;&#x7528;&#x5F15;&#x7528;&#x3002;&#x66F4;&#x7CBE;&#x786E;&#x7684;&#x8BF4;&#xFF0C;&#x58F0;&#x660E;&#x4E3A; <b>auto&amp;&amp;</b> &#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x5C31;&#x662F;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x6EE1;&#x8DB3;&#x901A;&#x7528;&#x5F15;&#x7528;&#x6837;&#x5F0F;&#xFF08;&quot;T&amp;&amp;&quot;&#xFF09;&#x4E14;&#x89E6;&#x53D1;&#x4E86;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x3002; <b>auto</b> &#x901A;&#x7528;&#x5F15;&#x7528;&#x5E76;&#x4E0D;&#x50CF;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x4E2D;&#x7684;&#x901A;&#x7528;&#x5F15;&#x7528;&#x90A3;&#x4E48;&#x5E38;&#x89C1;&#xFF0C;&#x5B83;&#x4EEC;&#x5728; <b>C++11</b> &#x4E2D;&#x5076;&#x6709;&#x51FA;&#x73B0;&#xFF0C;&#x4E8E; <b>C++14</b> &#x4E2D;&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x9891;&#x7E41;&#xFF0C;&#x56E0;&#x4E3A; <b>C++14</b> &#x5141;&#x8BB8;&#x5728; <b>lambda</b> &#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x4F7F;&#x7528; <b>auto&amp;&amp;</b> &#x58F0;&#x660E;&#x53C2;&#x6570;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5728; <b>C++14</b> &#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x7F16;&#x5199;&#x4E00; <b>lambda</b> &#x8868;&#x8FBE;&#x5F0F;&#x4EE5;&#x8BB0;&#x5F55;&#x4EFB;&#x4E00;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x8017;&#x65F6;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x7F16;&#x5199;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> timeFuncInvocation =</span><br><span class="line">    [](<span class="keyword">auto</span>&amp;&amp; func, <span class="keyword">auto</span>&amp;&amp;... params)                  <span class="comment">// C++14</span></span><br><span class="line">    {</span><br><span class="line">	start timer;</span><br><span class="line">	<span class="built_in">std</span>::forward&lt;<span class="keyword">decltype</span>(func)&gt;(func)(            <span class="comment">// invoke func</span></span><br><span class="line">	    <span class="built_in">std</span>::forward&lt;<span class="keyword">decltype</span>(params)&gt;(params)...  <span class="comment">// on params</span></span><br><span class="line">	);</span><br><span class="line">	stop timer and record elapsed time;</span><br><span class="line">    };</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5982;&#x679C;&#x4F60;&#x5BF9;&quot;<b>std::forward&lt;decltype(blah blah blah)&gt;</b>&quot;&#x7684;&#x53CD;&#x5E94;&#x662F;&quot;&#x8A92;&#xFF1F;&#xFF01;&quot;&#xFF0C;&#x90A3;&#x5C31;&#x8BF4;&#x660E;&#x4F60;&#x5C1A;&#x672A;&#x9605;&#x8BFB;<a href="./item33.html">&#x6761;&#x6B3E;33</a>&#xFF0C;&#x4E0D;&#x8FC7;&#x4E0D;&#x7528;&#x62C5;&#x5FC3;&#x3002;&#x8FD9;&#x91CC;&#x5173;&#x6CE8;&#x7684;&#x91CD;&#x70B9;&#x662F; <b>lambda</b> &#x4E2D;&#x7684; <b>auto&amp;&amp;</b> &#x58F0;&#x660E;&#x7684;&#x53C2;&#x6570;&#x3002; <b>func</b> &#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x7ED1;&#x5B9A;&#x81F3;&#x4EFB;&#x4E00;&#x53EF;&#x8C03;&#x7528;&#x5BF9;&#x8C61;&#x7684;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF0C;&#x4E0D;&#x8BBA;&#x5DE6;&#x503C;&#x6216;&#x53F3;&#x503C;&#x3002; <b>args</b> &#x662F;&#x96F6;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x53C2;&#x6570;&#x5305;&#xFF09;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x7ED1;&#x5B9A;&#x4EFB;&#x610F;&#x4E2A;&#x6570;&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#xFF0C;&#x62DC; <b>auto</b> &#x901A;&#x7528;&#x5F15;&#x7528;&#x6240;&#x8D50;&#xFF0C; <b>timeFuncInvocation</b> &#x53EF;&#x4EE5;&#x8BA1;&#x7B97;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x8017;&#x65F6;&#x3002;&#xFF08;&#x5173;&#x4E8E;&quot;&#x4EFB;&#x610F;&quot;&#x548C;&quot;&#x51E0;&#x4E4E;&#x6240;&#x6709;&quot;&#x7684;&#x533A;&#x522B;&#xFF0C;&#x8BF7;&#x53C2;&#x770B;<a href="./item30.html">&#x6761;&#x6B3E;30</a>&#x3002;&#xFF09;
</p>

<p>
&#x8BB0;&#x4F4F;&#xFF0C;&#x6B64;&#x6761;&#x6B3E; &#x2500;&#x2500;&#x901A;&#x7528;&#x5F15;&#x7528;&#x7684;&#x57FA;&#x7840;&#x2500;&#x2500; &#x662F;&#x4E2A;&#x8C0E;&#x8A00;&#x2026;&#x5443;&#xFF0C;&#x5E94;&#x8BE5;&#x53EB;&quot;&#x62BD;&#x8C61;&quot;&#x3002;&#x9690;&#x542B;&#x5176;&#x4E2D;&#x7684;&#x771F;&#x76F8;&#x662F;&#x5F15;&#x7528;&#x6298;&#x53E0;&#xFF0C;&#x65E2;<a href="./item28.html">&#x6761;&#x6B3E;28</a>&#x7684;&#x4E3B;&#x9898;&#x3002;&#x4F46;&#x8FD9;&#x4E00;&#x771F;&#x76F8;&#x5E76;&#x6CA1;&#x6709;&#x51CF;&#x5C11;&#x6B64;&#x62BD;&#x8C61;&#x7684;&#x7528;&#x5904;&#x3002;&#x533A;&#x5206;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x4E0E;&#x901A;&#x7528;&#x5F15;&#x7528;&#x80FD;&#x5E2E;&#x52A9;&#x4F60;&#x66F4;&#x7CBE;&#x786E;&#x7684;&#x9605;&#x8BFB;&#x4EE3;&#x7801;&#xFF08;&quot;&#x8FD9;&#x91CC;&#x7684; <b>T&amp;&amp;</b> &#x53EA;&#x80FD;&#x7ED1;&#x5B9A;&#x5230;&#x53F3;&#x503C;&#xFF1F;&#x8FD8;&#x662F;&#x90FD;&#x80FD;&#x7ED1;&#x5B9A;&#xFF1F;&quot;&#xFF09;&#xFF0C;&#x4E5F;&#x80FD;&#x8BA9;&#x4F60;&#x4E0E;&#x540C;&#x4E8B;&#x7684;&#x4EA4;&#x6D41;&#x66F4;&#x52A0;&#x987A;&#x7545;&#xFF08;&quot;&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF0C;&#x4E0D;&#x662F;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x2026;&#x2026;&quot;&#xFF09;&#x3002;&#x4E5F;&#x5C06;&#x4F7F;&#x4F60;&#x66F4;&#x6613;&#x7406;&#x89E3;<a href="./item25.html">&#x6761;&#x6B3E;25</a>&#x4E0E;<a href="./item26.html">&#x6761;&#x6B3E;26</a>&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x4F9D;&#x8D56;&#x4E8E;&#x8FD9;&#x4E00;&#x533A;&#x5206;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x62E5;&#x62B1;&#x5B83;&#x5427;&#x3002;&#x5E76;&#x9676;&#x9189;&#x5176;&#x4E2D;&#x3002;&#x6B63;&#x5982;&#x725B;&#x987F;&#x8FD0;&#x52A8;&#x5B9A;&#x5F8B;&#xFF08;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4E0D;&#x6B63;&#x786E;&#x7684;&#xFF09;&#xFF0C;&#x5B83;&#x901A;&#x5E38;&#x6BD4;&#x7231;&#x56E0;&#x65AF;&#x5766;&#x7684;&#x5E7F;&#x4E49;&#x76F8;&#x5BF9;&#x8BBA;&#xFF08;&quot;&#x771F;&#x76F8;&quot;&#xFF09;&#x66F4;&#x4E3A;&#x6709;&#x7528;&#x3001;&#x7B80;&#x5355;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x901A;&#x7528;&#x5F15;&#x7528;&#x7684;&#x6982;&#x5FF5;&#x901A;&#x5E38;&#x6BD4;&#x5B83;&#x7684;&#x7EC6;&#x8282;&#x2500;&#x2500;&#x5F15;&#x7528;&#x6298;&#x53E0;&#x66F4;&#x4E3A;&#x53EF;&#x53D6;&#x3002;
</p>

<div id="outline-container-orgd7575dc" class="outline-2">
<h2 id="&#x8BB0;&#x4F4F;"><a id="orgd7575dc"></a>&#x8BB0;&#x4F4F;</h2>
<div class="outline-text-2" id="text-&#x8BB0;&#x4F4F;">
<ul class="org-ul">
<li>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x662F; <b>T&amp;&amp;</b> &#xFF0C;&#x4E14; <b>T</b> &#x9700;&#x8981;&#x88AB;&#x63A8;&#x5BFC;&#xFF0C;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x88AB;&#x58F0;&#x660E;&#x4E3A; <b>auto&amp;&amp;</b> &#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x53C2;&#x6570;&#x6216;&#x6B64;&#x5BF9;&#x8C61;&#x4E3A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x3002;</li>
<li>&#x5982;&#x679C;&#x7C7B;&#x578B;&#x58F0;&#x660E;&#x5E76;&#x672A;&#x6EE1;&#x8DB3;&#x4E25;&#x683C;&#x7684; <b>type&amp;&amp;</b> &#x6837;&#x5F0F;&#xFF0C;&#x6216;&#x8005;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#xFF0C; <b>type&amp;&amp;</b> &#x8868;&#x793A;&#x4E00;&#x4E2A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x3002;</li>
<li>&#x901A;&#x7528;&#x5F15;&#x7528;&#x5728;&#x4F7F;&#x7528;&#x53F3;&#x503C;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x3002;&#x5728;&#x4F7F;&#x7528;&#x5DE6;&#x503C;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x3002;</li>
</ul>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
&#x6CD5;&#x8BED;&#xFF1A;raison d&apos;&#xEA;tre
</p></div></div>

<div class="footdef"><sup><a id="fn.2" class="footnum" href="#fnr.2">2</a></sup> <div class="footpara"><p class="footpara">
<a href="./item25.html">&#x6761;&#x6B3E;25</a>&#x4F1A;&#x544A;&#x8BC9;&#x4F60;&#xFF1A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x51E0;&#x4E4E;&#x90FD;&#x8981;&#x914D;&#x5408;*std::forward*&#x4F7F;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#x6B64;&#x4E66;&#x5373;&#x5C06;&#x51FA;&#x7248;&#x65F6;&#xFF0C;&#x8BB8;&#x591A;C++&#x6807;&#x51C6;&#x59D4;&#x5458;&#x4F1A;&#x7684;&#x6210;&#x5458;&#x5F00;&#x59CB;&#x79F0; <b>universal references</b> &#x4E3A; <b>forwarding references</b> &#x3002;
</p></div></div>


</div>
</div></div>
<div id="postamble" class="status">
<div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;">Last Updated 2017-08-07 Mon 04:12. <br><a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 9.0.9)</div>
</div>
]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
&amp;#x90FD;&amp;#x8BF4;&amp;#x771F;&amp;#x7406;&amp;#x8BA9;&amp;#x4EBA;&amp;#x5982;&amp;#x83B7;&amp;#x81EA;&amp;#x7531;&amp;#xFF0C;&amp;#x4F46;&amp;#x5728;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x60C5;&amp;#x5F62;&amp;#x4E0B;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6070;&amp;#x5F53;&amp;#x7684;&amp;#x8C0E;&amp;#x8A00;&amp;#x5374;&amp;#x80FD;&amp;#x4EA7;&amp;#x751F;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x6548;&amp;#x679C;&amp;#x3002;&amp;#x6B64;&amp;#x6761;&amp;#x6B3E;&amp;#x4FBF;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x8C0E;&amp;#x8A00;&amp;#x3002;&amp;#x4E0D;&amp;#x8FC7;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x662F;&amp;#x5728;&amp;#x4E0E;&amp;#x8F6F;&amp;#x4EF6;&amp;#x6253;&amp;#x4EA4;&amp;#x9053;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x5E94;&amp;#x907F;&amp;#x514D;&amp;#x4F7F;&amp;#x7528;&amp;quot;&amp;#x8C0E;&amp;#x8A00;&amp;quot;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x654F;&amp;#x611F;&amp;#x8BCD;&amp;#x6C47;&amp;#xFF0C;&amp;#x6545;&amp;#x7528;&amp;quot;&amp;#x62BD;&amp;#x8C61;&amp;quot;&amp;#x4E00;&amp;#x8BCD;&amp;#x53D6;&amp;#x800C;&amp;#x4EE3;&amp;#x4E4B;&amp;#x3002;
&lt;/p&gt;

&lt;p&gt;
&amp;#x4F60;&amp;#x4F7F;&amp;#x7528; &lt;b&gt;T&amp;amp;&amp;amp;&lt;/b&gt; &amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x6765;&amp;#x58F0;&amp;#x660E;&amp;#x4E00;&amp;#x53F3;&amp;#x503C;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x5047;&amp;#x5B9A;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x770B;&amp;#x5230;&amp;#x7684;&amp;quot;T&amp;amp;&amp;amp;&amp;quot;&amp;#x4E3A;&amp;#x53F3;&amp;#x503C;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F3C;&amp;#x4E4E;&amp;#x5408;&amp;#x4E4E;&amp;#x60C5;&amp;#x7406;&amp;#x3002;&amp;#x54CE;&amp;#xFF0C;&amp;#x53EF;&amp;#x60DC;&amp;#x5B83;&amp;#x5E76;&amp;#x975E;&amp;#x5982;&amp;#x6B64;&amp;#x7B80;&amp;#x5355;&amp;#x3002;
&lt;/p&gt;
    
    </summary>
    
      <category term="Translation" scheme="http://paruka.me/categories/Translation/"/>
    
      <category term="Effective Modern C++" scheme="http://paruka.me/categories/Translation/Effective-Modern-C/"/>
    
    
      <category term="Effective Modern C++" scheme="http://paruka.me/tags/Effective-Modern-C/"/>
    
      <category term="Press Ban" scheme="http://paruka.me/tags/Press-Ban/"/>
    
      <category term="禁止转载" scheme="http://paruka.me/tags/%E7%A6%81%E6%AD%A2%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Copy elision</title>
    <link href="http://paruka.me/translation/cppreference/copy_elision.html"/>
    <id>http://paruka.me/translation/cppreference/copy_elision.html</id>
    <published>2017-07-10T04:38:00.000Z</published>
    <updated>2017-08-06T18:37:33.365Z</updated>
    
    <content type="html"><![CDATA[<div id="content">
<p>
&#x7FFB;&#x8BD1;&#x81F3;<a href="http://en.cppreference.com/w/cpp/language/copy_elision" target="_blank" rel="external">cppreference</a>&#x3002;
</p>

<p>
&#x4F18;&#x5316;&#x4E86;&#x62F7;&#x8D1D;&#x53CA;&#x79FB;&#x52A8;(since C++11)&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x63D0;&#x4F9B;&#x503C;&#x4F20;&#x9012;&#x7684;&#x96F6;&#x62F7;&#x8D1D;&#x8BED;&#x4E49;&#x3002;
</p>

<div id="outline-container-org3d5e3eb" class="outline-2">
<h2 id="&#x89E3;&#x91CA;"><a id="org3d5e3eb"></a>&#x89E3;&#x91CA;</h2>
<div class="outline-text-2" id="text-&#x89E3;&#x91CA;">
<p>
&#x5728;&#x4EE5;&#x4E0B;&#x60C5;&#x51B5;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x5FC5;&#x987B;&#x7701;&#x7565;&#x62F7;&#x8D1D;&#x53CA;&#x590D;&#x5236;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x5373;&#x4FBF;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x62F7;&#x8D1D;/&#x590D;&#x5236;&#x6784;&#x9020;&#x51FD;&#x6570;&#x548C;&#x6790;&#x6784;&#x51FD;&#x6570;&#x6709;&#x660E;&#x663E;&#x7684;&#x526F;&#x4F5C;&#x7528;&#x3002;
</p>
<a id="more"></a>

<ul class="org-ul">
<li>&#x521D;&#x59CB;&#x5316;&#x65F6;&#xFF0C;&#x82E5;&#x521D;&#x59CB;&#x5316;&#x8BED;&#x53E5;&#x662F;&#x4E00;&#x4E2A;prvalue&#x4E14;&#x5B83;&#x7684;cv-unqualified&#x7C7B;&#x578B;&#x4E0E;&#x76EE;&#x6807;&#x7684;&#x7C7B;&#x578B;&#x76F8;&#x540C;&#xFF0C;&#x8BE5;&#x521D;&#x59CB;&#x5316;&#x8BED;&#x53E5;&#x5C06;&#x76F4;&#x63A5;&#x7528;&#x4E8E;&#x521D;&#x59CB;&#x5316;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x3002;</li>
</ul>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T x = T(T(T())); <span class="comment">// &#x53EA;&#x4F1A;&#x8C03;&#x7528;&#x4E00;&#x6B21;T&#x7684;&#x9ED8;&#x8BA4;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br></pre></td></tr></table></figure>
</div>

<ul class="org-ul">
<li>&#x5728;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x4E2D;&#xFF0C;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x8BED;&#x53E5;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x662F;&#x4E00;&#x4E2A;prvalue&#xFF0C;&#x4E14;&#x4E0E;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x76F8;&#x540C;&#x3002;</li>
</ul>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">T <span class="title">f</span><span class="params">()</span> </span>{ <span class="keyword">return</span> T{}; }</span><br><span class="line">T x = f();           <span class="comment">// &#x53EA;&#x4F1A;&#x8C03;&#x7528;&#x4E00;&#x6B21;T&#x7684;&#x9ED8;&#x8BA4;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">T* p = <span class="keyword">new</span> T(f());   <span class="comment">// &#x53EA;&#x4F1A;&#x8C03;&#x7528;&#x4E00;&#x6B21;T&#x7684;&#x9ED8;&#x8BA4;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5728;&#x4EE5;&#x4E0B;&#x60C5;&#x51B5;&#xFF0C;&#x5141;&#x8BB8;&#x7F16;&#x8BD1;&#x5668;&#x7701;&#x7565;&#x62F7;&#x8D1D;&#x53CA;&#x590D;&#x5236;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x5373;&#x4FBF;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x62F7;&#x8D1D;/&#x590D;&#x5236;&#x6784;&#x9020;&#x51FD;&#x6570;&#x548C;&#x6790;&#x6784;&#x51FD;&#x6570;&#x6709;&#x660E;&#x663E;&#x7684;&#x526F;&#x4F5C;&#x7528;&#x3002;
</p>

<ul class="org-ul">
<li>&#x51FD;&#x6570;&#x4EE5;&#x503C;&#x65B9;&#x5F0F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x4E14;&#x8FD4;&#x56DE;&#x8BED;&#x53E5;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x662F;&#x4E00;&#x4E2A;&#x62E5;&#x6709;&#x81EA;&#x52A8;&#x5B58;&#x50A8;&#x671F;<sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup>&#x7684;non-volatile&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x4E0D;&#x80FD;&#x662F;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x6216;catch&#x8BED;&#x53E5;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x7C7B;&#x578B;&#xFF08;&#x5FFD;&#x7565;&#x6700;&#x9AD8;&#x5C42;&#x7684;cv-qualification&#xFF09;&#x5FC5;&#x987B;&#x4E0E;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x4E00;&#x81F4;&#xFF0C;&#x6B64;&#x65F6;&#x62F7;&#x8D1D;/&#x590D;&#x5236;&#x51FD;&#x6570;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#xFF08;since C++11&#xFF09;&#x3002;&#x8BE5;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x5C06;&#x76F4;&#x63A5;&#x4E8E;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5904;&#x6784;&#x9020;&#xFF08;&#x62F7;&#x8D1D;&#x6216;&#x79FB;&#x52A8;&#xFF09;&#x3002;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x7981;&#x6B62;&#x62F7;&#x8D1D;&#x884C;&#x4E3A;&#xFF0C;&#x6211;&#x4EEC;&#x79F0;&#x5176;&#x4E3A;NRVO&#xFF0C;&quot;named return value optimization&quot;&#x3002;</li>
<li>&#x4E00;&#x4E2A;&#x672A;&#x7ED1;&#x5B9A;&#x81F3;&#x4EFB;&#x4F55;&#x5F15;&#x7528;&#x7684;&#x65E0;&#x540D;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#xFF0C;&#x4F1A;&#x88AB;&#x79FB;&#x52A8;&#xFF08;Since C++11&#xFF09;&#x6216;&#x62F7;&#x8D1D;&#x81F3;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x5176;&#x4ED6;&#x5BF9;&#x8C61;(&#x5FFD;&#x7565;&#x6700;&#x9AD8;&#x5C42;&#x7684;cv-qualification)&#xFF0C;&#x6B64;&#x65F6;&#x590D;&#x5236;/&#x79FB;&#x52A8;&#xFF08;Since C++11&#xFF09;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#x3002;&#x6B64;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#x4F1A;&#x5728;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5904;&#x6784;&#x9020;&#xFF08;&#x62F7;&#x8D1D;&#x6216;&#x79FB;&#x52A8;&#xFF09;&#x3002;&#x5F53;&#x8BE5;&#x65E0;&#x540D;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x662F;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x65F6;&#xFF0C;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x62F7;&#x8D1D;&#x7981;&#x6B62;&#x884C;&#x4E3A;&#x88AB;&#x79F0;&#x4E3A;RVO&#xFF0C;&quot;return value optimization&quot;&#x3002;(until C++17)</li>
</ul>

<p>
<b>&#x4EE5;&#x4E0A;&#x4F18;&#x5316;&#x6240;&#x6709;&#x7F16;&#x8BD1;&#x5668;&#x5FC5;&#x987B;&#x5B9E;&#x73B0;&#x3002;(since C++17)</b>
</p>

<ul class="org-ul">
<li>&#xFF08;since C++11&#xFF09;&#x5728;&#x4E00;&#x4E2A;&#x5F02;&#x5E38;&#x629B;&#x51FA;&#x8BED;&#x53E5;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x64CD;&#x4F5C;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x62E5;&#x6709;&#x81EA;&#x52A8;&#x5B58;&#x50A8;&#x671F;&#x7684;non-volatile&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x4E0D;&#x80FD;&#x662F;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x6216;catch&#x8BED;&#x53E5;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4E14;&#x751F;&#x547D;&#x671F;&#x6CA1;&#x6709;&#x8DE8;&#x8D8A;&#x6700;&#x91CC;&#x5C42;&#x7684;try&#x8BED;&#x53E5;&#x5757;&#xFF08;&#x5982;&#x679C;&#x6709;&#xFF09;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x62F7;&#x8D1D;/&#x79FB;&#x52A8;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#x3002;&#x8BE5;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#x5C06;&#x76F4;&#x63A5;&#x4E8E;&#x5F02;&#x5E38;&#x5BF9;&#x8C61;&#x6355;&#x83B7;&#x5904;&#x6784;&#x9020;&#xFF08;&#x62F7;&#x8D1D;&#x6216;&#x79FB;&#x52A8;&#xFF09;&#x3002;</li>
<li>&#xFF08;since C++11&#xFF09;&#x5904;&#x7406;&#x5F02;&#x5E38;&#x65F6;&#xFF0C;&#x5982;&#x679C;catch&#x8BED;&#x53E5;&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E0E;&#x629B;&#x51FA;&#x7684;&#x5F02;&#x5E38;&#x5BF9;&#x8C61;&#x7684;&#x7C7B;&#x578B;&#x4E00;&#x81F4;&#xFF08;&#x5FFD;&#x7565;&#x6700;&#x9AD8;&#x5C42;&#x7684;cv-qualification&#xFF09;&#xFF0C;&#x62F7;&#x8D1D;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#xFF0C;catch&#x5B50;&#x53E5;&#x5C06;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x8BE5;&#x5F02;&#x5E38;&#x5BF9;&#x8C61;&#xFF0C;&#x6B63;&#x5982;&#x88AB;&#x5F15;&#x7528;&#x4E00;&#x822C;&#x3002;&#x5728;&#x53EF;&#x80FD;&#x6539;&#x53D8;&#x7A0B;&#x5E8F;&#x884C;&#x4E3A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF08;&#x975E;&#x5FFD;&#x7565;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#x53CA;&#x6790;&#x6784;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#xFF09;&#xFF0C;&#x8BE5;&#x4F18;&#x5316;&#x4E0D;&#x4F1A;&#x751F;&#x6548;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;catch&#x5B50;&#x53E5;&#x7684;&#x53C2;&#x6570;&#x88AB;&#x4FEE;&#x6539;&#xFF0C;&#x5E76;&#x5C06;&#x8BE5;&#x5F02;&#x5E38;&#x5BF9;&#x8C61;&#x901A;&#x8FC7;*throw*&#x8BED;&#x53E5;&#x91CD;&#x65B0;&#x629B;&#x51FA;&#xFF09;&#x3002;</li>
</ul>

<p>
&#x5F53; <b>copy elision</b> &#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x62F7;&#x8D1D;/ <b>&#x79FB;&#x52A8;&#xFF08;since C++11&#xFF09;</b> &#x64CD;&#x4F5C;&#x7684;&#x7701;&#x7565;&#xFF0C;&#x662F;&#x901A;&#x8FC7;&#x5C06;&#x76EE;&#x6807;&#x53CA;&#x6E90;&#x5BF9;&#x8C61;&#x89C6;&#x4E3A;&#x540C;&#x4E00;&#x5BF9;&#x8C61;&#x7684;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x5F15;&#x7528;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x5B83;&#x7684;&#x6790;&#x6784;&#x5E76;&#x4E0D;&#x4F1A;&#x88AB;&#x7701;&#x7565;&#xFF0C;&#x53EA;&#x4F1A;&#x63A8;&#x8FDF;&#x81F3;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x5747;&#x5DF2;&#x9500;&#x6BC1;&#x65F6;&#x53D1;&#x751F; <b>&#xFF08;&#x9664;&#x975E;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x662F;&#x901A;&#x8FC7;&#x5176;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7248;&#x672C;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6790;&#x6784;&#x5C06;&#x53D1;&#x751F;&#x5728;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x9500;&#x6BC1;&#x65F6;&#xFF09;(since C++17)</b> &#x3002;
</p>

<p>
<b>copy elision</b> &#x53EF;&#x4EE5;&#x5D4C;&#x5957;&#x89E6;&#x53D1;&#x4EE5;&#x6D88;&#x9664;&#x591A;&#x91CD;&#x62F7;&#x8D1D;&#x3002;
</p>

<ul class="org-ul">
<li>&#x5728;<a href="http://en.cppreference.com/w/cpp/language/constant_expression" target="_blank" rel="external">&#x5E38;&#x91CF;&#x8868;&#x8FBE;&#x5F0F;</a>&#x53CA;<a href="http://en.cppreference.com/w/cpp/language/constant_initialization" target="_blank" rel="external">&#x5E38;&#x91CF;&#x521D;&#x59CB;&#x5316;&#x8BED;&#x53E5;</a>&#x4E2D;&#xFF0C;&#x6240;&#x6709;&#x6EE1;&#x8DB3; <b>copy elision</b> &#x7684;&#x5730;&#x65B9;&#x90FD;&#x4F1A;&#x89E6;&#x53D1;(graranteed)&#xFF08;by post-C++14 defect report CWG 2022&#xFF09;:</li>
</ul>

<div class="org-src-container">
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// since c++14</span><br><span class="line"></span><br><span class="line">struct A {</span><br><span class="line">    void *p;</span><br><span class="line">    constexpr A(): p(this) {}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">constexpr A g() {</span><br><span class="line">  A a;</span><br><span class="line">  return a;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">constexpr A a;        // a.p points to a</span><br><span class="line">constexpr A b = g();  // b.p points to b (NRVO guaranteed)</span><br><span class="line"></span><br><span class="line">void g() {</span><br><span class="line">  A c = g();          // c.p may point to c or to an ephemeral temporary</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>
</div>
</div>

<div id="outline-container-org93fca82" class="outline-2">
<h2 id="&#x6CE8;&#x610F;"><a id="org93fca82"></a>&#x6CE8;&#x610F;</h2>
<div class="outline-text-2" id="text-&#x6CE8;&#x610F;">
<p>
<b>Copy elision</b> &#x662F; <b>&#x552F;&#x4E00;&#x4E00;&#x79CD;&#x6807;&#x51C6;&#x5141;&#x8BB8;&#x7684;&#x4F18;&#x5316;&#x7B56;&#x7565;(until C++14)</b> &#xFF0C; <b>C++14&#x8FD8;&#x5F15;&#x5165;&#x4E86;&#x53E6;&#x4E00;&#x79CD;&#x4F18;&#x5316;&#xFF1A;<a href="http://en.cppreference.com/w/cpp/language/new#Allocation" target="_blank" rel="external">allocation elision and extension</a></b> &#xFF0C;&#x5B83;&#x53EF;&#x80FD;&#x89E6;&#x53D1;&#x663E;&#x8457;&#x7684;&#x526F;&#x4F5C;&#x7528;&#x3002;&#x56E0;&#x4E3A;&#x4E00;&#x4E9B;&#x7F16;&#x8BD1;&#x5668;&#x5E76;&#x4E0D;&#x4F1A;&#x5728;&#x6240;&#x6709;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x5730;&#x65B9;&#x89E6;&#x53D1;copy elision(&#x4F8B;&#x5982;&#xFF1A;&#x8C03;&#x8BD5;&#x6A21;&#x5F0F;)&#xFF0C;&#x90A3;&#x4E9B;&#x4F9D;&#x8D56;&#x4E8E;&#x62F7;&#x8D1D;&#xFF0F;&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#x53CA;&#x6790;&#x6784;&#x51FD;&#x6570;&#x526F;&#x4F5C;&#x7528;&#x7684;&#x7A0B;&#x5E8F;&#x5C06;&#x4E0D;&#x53EF;&#x79FB;&#x690D;&#x3002;
</p>

<p>
&#x5728; <b>return&#x8BED;&#x53E5;</b> &#x6216; <b>throw&#x8BED;&#x53E5;</b> &#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x7F16;&#x8BD1;&#x5668;&#x65E0;&#x6CD5;&#x5BF9;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x5730;&#x65B9;&#x6267;&#x884C;copy elision&#xFF0C;&#x4E14;&#x6E90;&#x76EE;&#x6807;&#x4E0D;&#x662F;&#x51FD;&#x6570;&#x53C2;&#x6570;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x5C06;&#x8BD5;&#x56FE;&#x4F7F;&#x7528;&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x5373;&#x4FBF;&#x8BE5;&#x5BF9;&#x8C61;&#x662F;&#x5DE6;&#x503C;&#xFF1B;&#x8BE6;&#x60C5;&#x8BF7;&#x770B;<a href="http://en.cppreference.com/w/cpp/language/return#Notes" target="_blank" rel="external">return statement</a>&#x3002;
</p>
</div>
</div>

<div id="outline-container-orge3aa80f" class="outline-2">
<h2 id="&#x4F8B;&#x5B50;"><a id="orge3aa80f"></a>&#x4F8B;&#x5B50;</h2>
<div class="outline-text-2" id="text-&#x4F8B;&#x5B50;">
<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> Noisy</span><br><span class="line">{</span><br><span class="line">    Noisy() { <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;constructed\n&quot;</span>; }</span><br><span class="line">    Noisy(<span class="keyword">const</span> Noisy&amp;) { <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;copy-constructed\n&quot;</span>; }</span><br><span class="line">    Noisy(Noisy&amp;&amp;) { <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;move-constructed\n&quot;</span>; }</span><br><span class="line">    ~Noisy() { <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;destructed\n&quot;</span>; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Noisy&gt; f()</span><br><span class="line">{</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Noisy&gt; v = <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Noisy&gt;(<span class="number">3</span>); <span class="comment">// copy elision when initializing v</span></span><br><span class="line">						  <span class="comment">// from a temporary (until C++17)</span></span><br><span class="line">						  <span class="comment">// from a prvalue (since C++17)</span></span><br><span class="line">    <span class="keyword">return</span> v; <span class="comment">// NRVO from v to the result object (not guaranteed in C++17)</span></span><br><span class="line">}             <span class="comment">// if optimization is disabled, the move constructor is called</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">g</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Noisy&gt; arg)</span></span><br><span class="line"></span>{</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;arg.size() = &quot;</span> &lt;&lt; arg.size() &lt;&lt; <span class="string">&apos;\n&apos;</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>{</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Noisy&gt; v = f(); <span class="comment">// copy elision in initialization of v</span></span><br><span class="line">				<span class="comment">// from the temporary returned by f() (until C++17)</span></span><br><span class="line">				<span class="comment">// from the prvalue f() (since C++17)</span></span><br><span class="line">    g(f());                     <span class="comment">// copy elision in initialization of the parameter of g()</span></span><br><span class="line">				<span class="comment">// from the temporary returned by f() (until C++17)</span></span><br><span class="line">				<span class="comment">// from the prvalue f() (since C++17)</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x53EF;&#x80FD;&#x7684;&#x8F93;&#x51FA;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">constructed</span><br><span class="line">constructed</span><br><span class="line">constructed</span><br><span class="line">constructed</span><br><span class="line">constructed</span><br><span class="line">constructed</span><br><span class="line">arg.size() = <span class="number">3</span></span><br><span class="line">destructed</span><br><span class="line">destructed</span><br><span class="line">destructed</span><br><span class="line">destructed</span><br><span class="line">destructed</span><br><span class="line">destructed</span><br></pre></td></tr></table></figure>
</div>
</div>
</div>

<div id="outline-container-org7254e44" class="outline-2">
<h2 id="&#x7F3A;&#x9677;"><a id="org7254e44"></a>&#x7F3A;&#x9677;</h2>
<div class="outline-text-2" id="text-&#x7F3A;&#x9677;">
<p>
&#x4EE5;&#x4E0B;&#x7F3A;&#x9677;&#x62A5;&#x8868;(defect reports)&#x8FFD;&#x6EAF;&#x5230;&#x4E4B;&#x524D;&#x7684;C++&#x6807;&#x51C6;&#x3002;
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col class="org-left">

<col class="org-left">

<col class="org-left">

<col class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">DR</th>
<th scope="col" class="org-left">Applied to</th>
<th scope="col" class="org-left">Behavior as published</th>
<th scope="col" class="org-left">Correct behavior</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left"><a href="http://open-std.org/JTC1/SC22/WG21/docs/cwg_defects.html#2022" target="_blank" rel="external">CWG 2022</a></td>
<td class="org-left">C++14</td>
<td class="org-left">copy elision was optional in constant expressions</td>
<td class="org-left">copy elision mandatory</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-org6107599" class="outline-2">
<h2 id="&#x53C2;&#x9605;"><a id="org6107599"></a>&#x53C2;&#x9605;</h2>
<div class="outline-text-2" id="text-&#x53C2;&#x9605;">
<ul class="org-ul">
<li><a href="http://en.cppreference.com/w/cpp/language/copy_initialization" target="_blank" rel="external">copy initialization</a></li>
<li><a href="http://en.cppreference.com/w/cpp/language/copy_constructor" target="_blank" rel="external">copy constructor</a></li>
<li><a href="http://en.cppreference.com/w/cpp/language/move_constructor" target="_blank" rel="external">move constructor</a></li>
</ul>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
automatic storage duration
</p></div></div>


</div>
</div></div>
<div id="postamble" class="status">
<div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;">Last Updated 2017-08-07 Mon 04:12. <br><a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 9.0.9)</div>
</div>
]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
&amp;#x7FFB;&amp;#x8BD1;&amp;#x81F3;&lt;a href=&quot;http://en.cppreference.com/w/cpp/language/copy_elision&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cppreference&lt;/a&gt;&amp;#x3002;
&lt;/p&gt;

&lt;p&gt;
&amp;#x4F18;&amp;#x5316;&amp;#x4E86;&amp;#x62F7;&amp;#x8D1D;&amp;#x53CA;&amp;#x79FB;&amp;#x52A8;(since C++11)&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63D0;&amp;#x4F9B;&amp;#x503C;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x96F6;&amp;#x62F7;&amp;#x8D1D;&amp;#x8BED;&amp;#x4E49;&amp;#x3002;
&lt;/p&gt;

&lt;div id=&quot;outline-container-org3d5e3eb&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;&amp;#x89E3;&amp;#x91CA;&quot;&gt;&lt;a id=&quot;org3d5e3eb&quot;&gt;&lt;/a&gt;&amp;#x89E3;&amp;#x91CA;&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-&amp;#x89E3;&amp;#x91CA;&quot;&gt;
&lt;p&gt;
&amp;#x5728;&amp;#x4EE5;&amp;#x4E0B;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x5FC5;&amp;#x987B;&amp;#x7701;&amp;#x7565;&amp;#x62F7;&amp;#x8D1D;&amp;#x53CA;&amp;#x590D;&amp;#x5236;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x5373;&amp;#x4FBF;&amp;#x8BE5;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x62F7;&amp;#x8D1D;/&amp;#x590D;&amp;#x5236;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x6790;&amp;#x6784;&amp;#x51FD;&amp;#x6570;&amp;#x6709;&amp;#x660E;&amp;#x663E;&amp;#x7684;&amp;#x526F;&amp;#x4F5C;&amp;#x7528;&amp;#x3002;
&lt;/p&gt;
    
    </summary>
    
      <category term="Translation" scheme="http://paruka.me/categories/Translation/"/>
    
      <category term="cppreference" scheme="http://paruka.me/categories/Translation/cppreference/"/>
    
    
      <category term="cppreference" scheme="http://paruka.me/tags/cppreference/"/>
    
  </entry>
  
  <entry>
    <title>条款23：理解std::move和std::forward</title>
    <link href="http://paruka.me/translation/effective_modern_cpp/item23.html"/>
    <id>http://paruka.me/translation/effective_modern_cpp/item23.html</id>
    <published>2017-03-05T17:17:00.000Z</published>
    <updated>2017-08-06T18:41:31.058Z</updated>
    
    <content type="html"><![CDATA[<div id="content">

<div id="outline-container-org3573098" class="outline-2">
<h2 id="&#x7B2C;&#x4E94;&#x7AE0;-&#x53F3;&#x503C;&#x5F15;&#x7528;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x53CA;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;"><a id="org3573098"></a>&#x7B2C;&#x4E94;&#x7AE0; &#x53F3;&#x503C;&#x5F15;&#x7528;&#x3001;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x53CA;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;</h2>
<div class="outline-text-2" id="text-&#x7B2C;&#x4E94;&#x7AE0;-&#x53F3;&#x503C;&#x5F15;&#x7528;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x53CA;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;">
<p>
&#x5F53;&#x4F60;&#x521D;&#x6B21;&#x5B66;&#x4E60;&#x5B83;&#x4EEC;&#x65F6;&#xFF0C;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x548C;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;&#x770B;&#x8D77;&#x6765;&#x975E;&#x5E38;&#x76F4;&#x767D;&#xFF1A;
</p>
<ul class="org-ul">
<li><b>&#x79FB;&#x52A8;&#x8BED;&#x4E49;</b> &#x8BA9;&#x7F16;&#x8BD1;&#x5668;&#x5C06;&#x4EE3;&#x4EF7;&#x9AD8;&#x6602;&#x7684;&#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#x66FF;&#x6362;&#x4E3A;&#x76F8;&#x5BF9;&#x4F4E;&#x5EC9;&#x7684;&#x79FB;&#x52A8;&#x64CD;&#x4F5C;&#x3002;&#x6B63;&#x5982;&#x5176;&#x540D;&#xFF0C;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#x53CA;&#x62F7;&#x8D1D;&#x8D4B;&#x503C;&#x51FD;&#x6570;&#x7ED9;&#x4E88;&#x4F60;&#x63A7;&#x5236;&#x5BF9;&#x8C61;&#x590D;&#x5236;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x4E0E;&#x6B64;&#x7C7B;&#x4F3C;&#xFF0C;&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#x548C;&#x79FB;&#x52A8;&#x8D4B;&#x503C;&#x51FD;&#x6570;&#x5219;&#x7ED9;&#x4E88;&#x4F60;&#x63A7;&#x5236;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x7684;&#x80FD;&#x529B;&#x3002;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x8FD8;&#x5141;&#x8BB8;&#x4F60;&#x521B;&#x5EFA;move-only&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <b>std::unique_ptr</b> &#x3001; <b>std::future</b> &#x548C; <b>std::thread</b> &#x3002;</li>
<li><b>&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;</b> &#x4F7F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x53C2;&#xFF08;&#x4EFB;&#x610F;&#x4FEE;&#x9970;&#x7B26;&#x7684;&#x5B9E;&#x53C2;&#xFF09;&#x8F6C;&#x53D1;&#x7ED9;&#x53E6;&#x4E00;&#x51FD;&#x6570;&#x3002;</li>
</ul>
<p>
&#x53F3;&#x503C;&#x5F15;&#x7528;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x8FE5;&#x5F02;&#x7279;&#x6027;&#x7684;&#x7C98;&#x5408;&#x5242;&#x3002;&#x5B83;&#x4EEC;&#x662F;&#x6784;&#x6210;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x53CA;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;&#x7684;&#x57FA;&#x77F3;&#x3002;
</p>
<a id="more"></a>

<p>
&#x968F;&#x7740;&#x5BF9;&#x8FD9;&#x4E9B;&#x7279;&#x6027;&#x7684;&#x6DF1;&#x5165;&#x7406;&#x89E3;&#xFF0C;&#x4F60;&#x5C06;&#x66F4;&#x52A0;&#x610F;&#x8BC6;&#x5230;&#xFF0C;&#x4F60;&#x5BF9;&#x5B83;&#x4EEC;&#x4E00;&#x5F00;&#x59CB;&#x7684;&#x5370;&#x8C61;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x51B0;&#x5C71;&#x4E00;&#x89D2;&#x3002;&#x5B83;&#x4EEC;&#xFF08;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x3001;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;&#x548C;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF09;&#x6BD4;&#x5448;&#x73B0;&#x51FA;&#x6765;&#x7684;&#xFF08;&#x6837;&#x5B50;&#xFF09;&#x66F4;&#x52A0;&#x5FAE;&#x5999;&#x3002;&#x6BD4;&#x5982;&#xFF1A; <b>std::move</b> &#x5E76;&#x4E0D;&#x79FB;&#x52A8;&#x4EFB;&#x4F55;&#x4E1C;&#x897F;&#xFF0C;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;&#x4E5F;&#x5E76;&#x4E0D;&#x5B8C;&#x7F8E;&#x3002;&#x79FB;&#x52A8;&#x64CD;&#x4F5C;&#x5E76;&#x975E;&#x90FD;&#x6BD4;&#x62F7;&#x8D1D;&#x5EC9;&#x4EF7;&#x3001;&#x5E76;&#x975E;&#x4E00;&#x76F4;&#x5982;&#x4F60;&#x671F;&#x76FC;&#x7684;&#x5EC9;&#x4EF7;&#x3001;&#x4E5F;&#x5E76;&#x975E;&#x5728;&#x6BCF;&#x4E2A;&#x5177;&#x6709;&#x6709;&#x6548;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x7684;&#x5730;&#x65B9;&#x88AB;&#x8C03;&#x7528;&#x3002; <b>type&amp;&amp;</b> &#x4E5F;&#x5E76;&#x975E;&#x4E00;&#x76F4;&#x4EE3;&#x8868;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x3002;
</p>

<p>
&#x65E0;&#x8BBA;&#x4F60;&#x5BF9;&#x90A3;&#x4E9B;&#x7279;&#x6027;&#x8FDB;&#x884C;&#x591A;&#x4E48;&#x6DF1;&#x5165;&#x7684;&#x7814;&#x7A76;&#xFF0C;&#x5B83;&#x4EEC;&#x770B;&#x4E0A;&#x53BB;&#x4F3C;&#x4E4E;&#x603B;&#x662F;&#x9690;&#x85CF;&#x7740;&#x66F4;&#x591A;&#x7684;&#x79D8;&#x5BC6;&#x3002;&#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x5B83;&#x4EEC;&#x5E76;&#x975E;&#x6DF1;&#x4E0D;&#x53EF;&#x6D4B;&#x3002;&#x672C;&#x7AE0;&#x5C06;&#x52A9;&#x4F60;&#x6253;&#x5F00;&#x8FD9;&#x6247;&#x795E;&#x79D8;&#x7684;&#x5927;&#x95E8;&#xFF0C;&#x8DE8;&#x8FC7;&#x5927;&#x95E8;&#xFF0C;&#x4F60;&#x5C06;&#x5BF9;C++11&#x4E2D;&#x7684;&#x8FD9;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#x6709;&#x66F4;&#x6DF1;&#x5165;&#x7684;&#x7406;&#x89E3;&#x3002;&#x4F60;&#x5C06;&#x638C;&#x63E1; <b>std::move</b> &#x548C; <b>std::forward</b> &#x7684;&#x4F7F;&#x7528;&#x8BED;&#x5883;&#xFF0C;&#x5E76;&#x5BF9;&#x90A3;&#x6B67;&#x4E49;&#x6027;&#x5341;&#x8DB3;&#x7684;&quot;type&amp;&amp;&quot;&#x6709;&#x66F4;&#x672C;&#x8D28;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x4F60;&#x4E5F;&#x5C06;&#x9886;&#x609F;&#x5230;&#x4E3A;&#x4F55;&#x79FB;&#x52A8;&#x64CD;&#x4F5C;(move operation)&#x4F1A;&#x8868;&#x73B0;&#x51FA;&#x4EE4;&#x4EBA;&#x60CA;&#x5947;&#x7684;&#x591A;&#x6837;&#x6027;&#x884C;&#x4E3A;&#x3002;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53C8;&#x56DE;&#x5230;&#x4E86;&#x539F;&#x70B9;&#xFF0C;&#x56E0;&#x4E3A;&#x79FB;&#x52A8;&#x8BED;&#x4E49;&#x3001;&#x5B8C;&#x7F8E;&#x8F6C;&#x53D1;&#x548C;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x770B;&#x8D77;&#x6765;&#x4F3C;&#x4E4E;&#x518D;&#x6B21;&#x53D8;&#x5F97;&#x975E;&#x5E38;&#x76F4;&#x767D;&#x3002;&#x4F46;&#x73B0;&#x5728;&#xFF0C;&#x5B83;&#x4EEC;&#x5DF2;&#x4E0D;&#x518D;&#x795E;&#x79D8;&#x3002;
</p>

<p>
&#x5728;&#x672C;&#x7AE0;&#x7684;&#x6240;&#x6709;&#x6761;&#x6B3E;&#x4E2D;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x8BB0;&#x4F4F;&#xFF0C;&#x5B9E;&#x53C2;&#x6C38;&#x8FDC;&#x662F;&#x5DE6;&#x503C;&#xFF0C;&#x5373;&#x4FBF;&#x5F62;&#x53C2;&#x7C7B;&#x578B;&#x4E3A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF01;&#x8FD9;&#x70B9;&#x5C24;&#x4E3A;&#x91CD;&#x8981;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x7ED9;&#x5B9A;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(Widget&amp;&amp; w)</span></span>;</span><br></pre></td></tr></table></figure>
</div>

<p>
w&#x662F;&#x4E00;&#x4E2A;&#x5DE6;&#x503C;&#xFF0C;&#x5C3D;&#x7BA1;&#x5B83;&#x7684;&#x7C7B;&#x578B;&#x4E3A;Widget&#x7684;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x3002;&#xFF08;&#x5982;&#x679C;&#x4F60;&#x611F;&#x5230;&#x60CA;&#x8BB6;&#xFF0C;&#x8BF7;&#x590D;&#x4E60;&#x672C;&#x4E66;&#x7B2C;&#x4E8C;&#x9875;&#x4E2D;&#x5DE6;&#x503C;&#x4E0E;&#x53F3;&#x503C;&#x76F8;&#x5173;&#x7684;&#x5185;&#x5BB9;&#x3002;&#xFF09;
</p>
</div>

<div id="outline-container-org4cc6800" class="outline-3">
<h3 id="&#x6761;&#x6B3E;23&#x7406;&#x89E3;stdmove&#x548C;stdforward."><a id="org4cc6800"></a>&#x6761;&#x6B3E;23&#xFF1A;&#x7406;&#x89E3;std::move&#x548C;std::forward.</h3>
<div class="outline-text-3" id="text-&#x6761;&#x6B3E;23&#x7406;&#x89E3;stdmove&#x548C;stdforward.">
<p>
&#x4E86;&#x89E3; <b>std::move</b> &#x548C; <b>std::forward</b> &#x4E0D;&#x4F1A;&#x505A;&#x4E9B;&#x4EC0;&#x4E48;&#x975E;&#x5E38;&#x6709;&#x7528;&#x3002; <b>std::move</b> &#x4E0D;&#x4F1A;&#x79FB;&#x52A8;&#x4EFB;&#x4F55;&#x4E1C;&#x897F;&#x3002; <b>std::forward</b> &#x4E5F;&#x4E0D;&#x4F1A;&#x8F6C;&#x53D1;&#x4EFB;&#x4F55;&#x4E1C;&#x897F;&#x3002;&#x5B83;&#x4EEC;&#x4E0D;&#x4F1A;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x505A;&#x4EFB;&#x4F55;&#x4E8B;&#x60C5;&#xFF0C;&#x4E0D;&#x4F1A;&#x751F;&#x6210;&#x54EA;&#x6015;&#x662F;&#x4E00;&#x6BD4;&#x7279;&#x7684;&#x53EF;&#x6267;&#x884C;&#x4EE3;&#x7801;&#x3002;
</p>

<p>
<b>std::move</b> &#x548C; <b>std::forward</b> &#x4EC5;&#x4EC5;&#x662F;&#x4E24;&#x4E2A;&#x8F6C;&#x6362;&#x51FD;&#x6570;&#xFF08;&#x5176;&#x5B9E;&#x662F;&#x51FD;&#x6570;&#x6A21;&#x677F;&#xFF09;&#x3002; <b>std::move</b> &#x65E0;&#x6761;&#x4EF6;&#x7684;&#x5C06;&#x5B83;&#x7684;&#x5B9E;&#x53C2;&#x8F6C;&#x6362;&#x4E3A;&#x53F3;&#x503C;&#xFF0C;&#x800C; <b>std::forward</b> &#x4EC5;&#x5728;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x624D;&#x6267;&#x884C;&#x8FD9;&#x4E00;&#x8F6C;&#x6362;&#xFF08;&#x8F6C;&#x6362;&#x4E3A;&#x53F3;&#x503C;&#xFF09;&#x3002;&#x8FD9;&#x4E00;&#x89E3;&#x91CA;&#x867D;&#x89E6;&#x53D1;&#x4E86;&#x4E00;&#x8FDE;&#x4E32;&#x7684;&#x7591;&#x95EE;&#xFF0C;&#x4F46;&#x8FD9;&#x5374;&#x662F;&#x4E8B;&#x5B9E;&#x3002;
</p>

<p>
&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x8BE0;&#x91CA;&#x8FD9;&#x4E00;&#x4E8B;&#x5B9E;&#xFF0C;&#x6211;&#x4EEC;&#x590D;&#x523B;&#x4E86;C++11&#x4E2D; <b>std::move</b> &#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x867D;&#x672A;&#x5B8C;&#x5168;&#x7B26;&#x5408;&#x6807;&#x51C6;&#xFF08;C++&#x6807;&#x51C6;&#xFF09;&#xFF0C;&#x4F46;&#x5DF2;&#x975E;&#x5E38;&#x63A5;&#x8FD1;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">typename</span> remove_reference&lt;T&gt;::type&amp;&amp;           <span class="comment">// in namespace std</span></span><br><span class="line">move(T&amp;&amp; param)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">using</span> ReturnType =                         <span class="comment">// alias declaration;</span></span><br><span class="line">	<span class="keyword">typename</span> remove_reference&lt;T&gt;::type&amp;&amp;;  <span class="comment">// see Item 9</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">static_cast</span>&lt;ReturnType&gt;(param);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6211;&#x4E3A;&#x4F60;&#x9AD8;&#x4EAE;&#x6807;&#x8BC6;&#x4E86;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#xFF1A;&#x51FD;&#x6570;&#x540D;&#x53CA;&#x8F6C;&#x6362;&#x8BED;&#x53E5;&#x3002;&#x6807;&#x8BC6;&#x51FD;&#x6570;&#x540D;&#x662F;&#x56E0;&#x4E3A;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x8FC7;&#x4E8E;&#x590D;&#x6742;&#xFF0C;&#x6211;&#x4E0D;&#x5E0C;&#x671B;&#x4F60;&#x8FF7;&#x5931;&#x5176;&#x4E2D;&#x5931;&#x53BB;&#x8010;&#x5FC3;&#xFF0C;&#x800C;&#x90A3;&#x6761;&#x8F6C;&#x6362;&#x8BED;&#x53E5;&#xFF0C;&#x5219;&#x5305;&#x542B;&#x4E86;&#x6B64;&#x51FD;&#x6570;&#x7684;&#x7CBE;&#x9AD3;&#x3002;&#x6B63;&#x5982;&#x4F60;&#x6240;&#x89C1;&#xFF0C; <b>std::move</b> &#x63A5;&#x6536;&#x4E00;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#xFF08;&#x901A;&#x7528;&#x5F15;&#x7528;: universal reference&#xFF0C;&#x8BE6;&#x60C5;&#x53C2;&#x9605;<a href="./item24.html">&#x6761;&#x6B3E;24</a>&#xFF09;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x3002;
</p>




<p>
&#x8FD4;&#x56DE;&#x503C;&#x4E2D;&#x7684;&quot;&amp;&amp;&quot;&#x6697;&#x793A;&#x6211;&#x4EEC;&#xFF0C; <b>std::move</b> &#x8FD4;&#x56DE;&#x4E00;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x4F46;&#x6B63;&#x5982;<a href="./item28.html">&#x6761;&#x6B3E;28</a>&#x6240;&#x8FF0;&#xFF0C;&#x5982;&#x679C; <b>T</b> &#x6070;&#x5DE7;&#x662F;&#x4E00;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#xFF0C; <b>T&amp;&amp;</b> &#x5C06;&#x540C;&#x4E3A;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x3002;&#x4E3A;&#x907F;&#x514D;&#x8FD9;&#x4E00;&#x60C5;&#x51B5;&#xFF0C;&#x578B;&#x522B;&#x7C7B;&#x578B;&#x5224;&#x5B9A;&#x6280;&#x6CD5;&#xFF08;type trait&#xFF0C;&#x53C2;&#x7167;<a href="./item9.html">&#x6761;&#x6B3E;9</a>&#xFF09;&#x4E2D;&#x7684; <b>std::remove_reference</b> &#x4FBF;&#x6D3E;&#x4E0A;&#x4E86;&#x7528;&#x573A;&#xFF0C;&#x5B83;&#x4F5C;&#x7528;&#x4E0E; <b>T</b> &#xFF0C;&#x4EE5;&#x786E;&#x4FDD;&quot;&amp;&amp;&quot;&#x88AB;&#x5E94;&#x7528;&#x4E0E;&#x4E00;&#x4E2A;&#x578B;&#x522B;&#xFF08;a type&#xFF09;&#x800C;&#x4E0D;&#x662F;&#x5F15;&#x7528;&#x3002;&#x8FD9;&#x5BF9;&#x786E;&#x4FDD; <b>std::move</b> &#x8FD4;&#x56DE;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x56E0;&#x4E3A;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x662F;&#x53F3;&#x503C;&#x3002;&#x56E0;&#x6B64; <b>std::move</b> &#x5C06;&#x4F20;&#x9012;&#x7ED9;&#x5B83;&#x7684;&#x53C2;&#x6570;&#x8F6C;&#x6362;&#x4E3A;&#x53F3;&#x503C;&#xFF0C;&#x8FD9;&#x4FBF;&#x662F;&#x5B83;&#x6240;&#x505A;&#x7684;&#x4E00;&#x5207;&#x3002;
</p>

<p>
&#x5F53;&#x7136;&#xFF0C;&#x7528;C++14&#x5B9E;&#x73B0; <b>std::move</b> &#x5C06;&#x66F4;&#x52A0;&#x4F18;&#x96C5;&#x3002;&#x8FD9;&#x5F52;&#x529F;&#x4E8E;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#xFF08;&#x53C2;&#x7167;<a href="./item3.html">&#x6761;&#x6B3E;3</a>&#xFF09;&#x53CA;&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x7684;&#x6A21;&#x677F;&#x522B;&#x540D; <b>std::remove_reference_t</b> &#xFF08;&#x53C2;&#x7167;<a href="./item9.html">&#x6761;&#x6B3E;9</a>&#xFF09;&#xFF0C;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;                <span class="comment">// C++14; still in</span></span><br><span class="line"><span class="keyword">decltype</span>(<span class="keyword">auto</span>) move(T&amp;&amp; param)      <span class="comment">// namespace std</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">using</span> ReturnType = <span class="keyword">remove_reference_t</span>&lt;T&gt;&amp;&amp;;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">static_cast</span>&lt;ReturnType&gt;(param);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x770B;&#x8D77;&#x6765;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#xFF1F;
</p>

<p>
&#x6B63;&#x56E0;&#x5982;&#x4E0A;&#x6240;&#x8BC9;&#xFF08; <b>std::move</b> &#x53EA;&#x662F;&#x5C06;&#x4F20;&#x9012;&#x7ED9;&#x5B83;&#x7684;&#x53C2;&#x6570;&#x8F6C;&#x6362;&#x4E3A;&#x53F3;&#x503C;&#xFF09;&#xFF0C;&#x8BB8;&#x591A;&#x4EBA;&#x5EFA;&#x8BAE;&#x5C06;&#x5B83;&#x547D;&#x540D;&#x4E3A; <b>rvalue_cast</b> &#x4E4B;&#x7C7B;&#x7684;&#x4E1C;&#x897F;&#x3002;&#x5C3D;&#x7BA1;&#x5982;&#x6B64;&#xFF0C;&#x5B83;&#x4ECD;&#x88AB;&#x547D;&#x540D;&#x4E3A; <b>std::move</b> &#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x8981;&#x8BB0;&#x4F4F;&#xFF1A; <b>std::move</b> &#x4EC5;&#x8F6C;&#x6362;&#x4E0D;&#x79FB;&#x52A8;&#x3002;
</p>

<p>
&#x5F53;&#x7136;&#xFF0C;&#x53F3;&#x503C;&#x53EF;&#x4EE5;&#x88AB;&#x79FB;&#x52A8;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x5BF9;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x8C03;&#x7528; <b>std::move</b> &#x5C06;&#x544A;&#x8BC9;&#x7F16;&#x8BD1;&#x5668;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x79FB;&#x52A8;&#x3002;&#x8FD9;&#x4FBF;&#x662F;&#x8FD9;&#x4E00;&#x547D;&#x540D;&#x7684;&#x7528;&#x610F;&#xFF1A;&#x4E00;&#x773C;&#x4FBF;&#x53EF;&#x770B;&#x51FA;&#x8BE5;&#x5BF9;&#x8C61;&#x53EF;&#x4EE5;&#x88AB;&#x79FB;&#x52A8;&#x3002;
</p>

<p>
&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x53EA;&#x6709;&#x53F3;&#x503C;&#x80FD;&#x88AB;&#x79FB;&#x52A8;&#x3002;&#x5047;&#x8BBE;&#x4F60;&#x6B63;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x5907;&#x6CE8;&#x7C7B;&#xFF0C;&#x5B83;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x7528;&#x4EE5;&#x63CF;&#x8FF0;&#x5907;&#x6CE8;&#x5185;&#x5BB9;&#x7684; <b>std::string</b> &#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x62F7;&#x8D1D;&#x81F3;&#x8BE5;&#x7C7B;&#x7684;&#x6570;&#x636E;&#x6210;&#x5458;&#x4E2D;&#x3002;&#x9075;&#x5FAA;<a href="./item24.html">&#x6761;&#x6B3E;24</a>&#x7684;&#x5EFA;&#x8BAE;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x8BE5;&#x53C2;&#x6570;&#x4EE5;&#x503C;&#x4F20;&#x9012;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Annotation {</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">Annotation</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">string</span> text)</span></span>; <span class="comment">// param to be copied,</span></span><br><span class="line">    ...                                    <span class="comment">// so per Item 41,</span></span><br><span class="line">};                                         <span class="comment">// pass by value</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x53EF;&#x662F;&#xFF0C; <b>Annotation</b> &#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x53EA;&#x9700;&#x8981;&#x8BFB;&#x53D6; <b>text</b> &#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x5BF9;&#x5B83;&#x505A;&#x4EFB;&#x4F55;&#x4FEE;&#x6539;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x57FA;&#x4E8E; <b>&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x4F7F;&#x7528;const</b> &#x8FD9;&#x4E00;&#x53E4;&#x8001;&#x4F20;&#x7EDF;&#xFF0C;&#x4F60;&#x5C06;&#x4F60;&#x7684;&#x7533;&#x660E;&#x7A0D;&#x4F5C;&#x6539;&#x8FDB;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Annotation {</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">Annotation</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> text)</span></span>;</span><br><span class="line">    ...</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6700;&#x540E;&#xFF0C;&#x4E3A;&#x51CF;&#x5C11; <b>text</b> &#x81F3;&#x6570;&#x636E;&#x6210;&#x5458;&#x7684;&#x4E00;&#x6B21;&#x62F7;&#x8D1D;&#x5F00;&#x9500;&#xFF0C;&#x4F60;&#x9075;&#x5FAA;<a href="./item41.html">&#x6761;&#x6B3E;41</a>&#x7684;&#x5EFA;&#x8BAE;&#xFF0C;&#x5BF9; <b>text</b> &#x4F7F;&#x7528; <b>std::move</b> &#xFF0C;&#x4EE5;&#x4FBF;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x53F3;&#x503C;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Annotation {</span><br><span class="line">public:</span><br><span class="line">    explicit Annotation(const std::string text)</span><br><span class="line">    : value(std::move(text))  // &quot;move&quot; text into value; this code</span><br><span class="line">    {...}                     // doesn&apos;t do what it seems to!</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    std::string value;</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x7F16;&#x8BD1;&#x3001;&#x94FE;&#x63A5;&#x3001;&#x8FD0;&#x884C;&#xFF0C;&#x5B83;&#x8FD0;&#x884C;&#x7684;&#x5982;&#x4F60;&#x6240;&#x613F;&#xFF0C;&#x5374;&#x4E0E;&#x4F60;&#x8FFD;&#x6C42;&#x7684;&#x5B8C;&#x7F8E;&#x76F8;&#x5DEE;&#x751A;&#x8FDC;&#xFF0C;&#x53EA;&#x56E0; <b>text</b> &#x672A;&#x88AB;&#x79FB;&#x52A8;&#xFF0C;&#x800C;&#x662F;&#x62F7;&#x8D1D;&#x3002; <b>text</b> &#x867D;&#x88AB; <b>std::move</b> &#x8F6C;&#x6362;&#x4E3A;&#x4E86;&#x53F3;&#x503C;&#xFF0C;&#x4F46;&#x5B83;&#x5374;&#x88AB;&#x7533;&#x660E;&#x4E3A; <b>const std::string</b> &#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x88AB;&#x8F6C;&#x6362;&#x524D;&#xFF0C; <b>text</b> &#x662F;&#x4E00; <b>const std::string</b> &#x7C7B;&#x578B;&#x7684;&#x5DE6;&#x503C;&#xFF0C;&#x5728;&#x8F6C;&#x6362;&#x540E;&#xFF0C;&#x5E38;&#x5C5E;&#x6027;&#x5F97;&#x4EE5;&#x4FDD;&#x7559;&#xFF0C;&#x53D8;&#x6210;&#x4E00; <b>const std::string</b> &#x7C7B;&#x578B;&#x7684;&#x53F3;&#x503C;&#x3002;
</p>

<p>
&#x601D;&#x8003;&#x4E00;&#x4E0B;&#x7F16;&#x8BD1;&#x5668;&#x9009;&#x62E9;&#x8C03;&#x7528; <b>std::string</b> &#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x60C5;&#x5F62;&#xFF0C;&#x5B83;&#x6709;&#x4E24;&#x79CD;&#x53EF;&#x80FD;&#x6027;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="built_in">string</span> {               <span class="comment">// std::string is actually a</span></span><br><span class="line"><span class="keyword">public</span>:                      <span class="comment">// typedef of std::basic_string&lt;char&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">string</span>(<span class="keyword">const</span> <span class="built_in">string</span>&amp; rhs); <span class="comment">// copy ctor</span></span><br><span class="line">    <span class="built_in">string</span>(<span class="built_in">string</span>&amp;&amp; rhs);      <span class="comment">// move ctor</span></span><br><span class="line">};</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5728; <b>Annotation</b> &#x7C7B;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x4E2D;&#xFF0C; <b>std::move(text)</b> &#x7684;&#x7ED3;&#x679C;&#x662F;&#x4E00;&#x4E2A; <b>const std::string</b> &#x7C7B;&#x578B;&#x7684;&#x53F3;&#x503C;&#x3002;&#x5B83;&#x4E0D;&#x80FD;&#x88AB;&#x4F20;&#x9012;&#x81F3; <b>std::string</b> &#x7684;&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#xFF08;&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF09;&#x63A5;&#x6536;&#x4E00;&#x975E;&#x5E38;&#x91CF; <b>std::string</b> &#x7684;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002;&#x4F46;&#x5B83;&#x5374;&#x53EF;&#x4EE5;&#x88AB;&#x4F20;&#x9012;&#x7ED9;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x5E38;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x53EF;&#x4EE5;&#x7ED1;&#x5B9A;&#x81F3;&#x5E38;&#x53F3;&#x503C;&#x3002;&#x56E0;&#x6B64;&#xFF0C; <b>value</b> &#x7684;&#x521D;&#x59CB;&#x5316;&#x4FBF;&#x8C03;&#x7528;&#x4E86; <b>std::string</b> &#x7684;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x5C3D;&#x7BA1; <b>text</b> &#x5DF2;&#x7ECF;&#x88AB;&#x8F6C;&#x6362;&#x4E3A;&#x53F3;&#x503C;&#xFF01;&#x8FD9;&#x4E00;&#x884C;&#x4E3A;&#x5BF9;&#x7EF4;&#x6301;&#x5E38;&#x91CF;&#x6B63;&#x786E;&#x6027;&#xFF08;&#x5E38;&#x91CF;&#x5C5E;&#x6027;&#x7684;&#x6B63;&#x786E;&#x6027;&#xFF1A;const-correctness&#xFF09;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x6BD5;&#x7ADF;&#x5C06;&#x5BF9;&#x8C61;&#x7684;&#x503C;&#x79FB;&#x51FA;&#x8BE5;&#x5BF9;&#x8C61;&#x4FBF;&#x610F;&#x5473;&#x7740;&#x4FEE;&#x6539;&#x4E86;&#x8BE5;&#x5BF9;&#x8C61;<sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup>&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x8BED;&#x6CD5;&#x5C42;&#x9762;&#x4E0A;&#x5E94;&#x7981;&#x6B62;&#x5C06;const&#x5BF9;&#x8C61;&#x4F20;&#x9012;&#x81F3;&#x90A3;&#x4E9B;&#x4F1A;&#x5BF9;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x7684;&#x51FD;&#x6570;&#xFF08;&#x6B63;&#x5982;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF09;&#x3002;
</p>

<p>
&#x4ECE;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5F97;&#x51FA;&#x4E24;&#x6761;&#x7ED3;&#x8BBA;&#x3002;&#x7B2C;&#x4E00;&#xFF0C;&#x4E0D;&#x8981;&#x5C06;&#x6709;&#x53EF;&#x80FD;&#x8FDB;&#x884C;&#x79FB;&#x52A8;&#x64CD;&#x4F5C;&#x7684;&#x5BF9;&#x8C61;&#x7533;&#x660E;&#x4E3A; <b>const</b> &#xFF0C;&#x56E0;&#x4E3A;&#x5BF9;&#x5E38;&#x91CF;&#x5BF9;&#x8C61;&#x7684;&#x79FB;&#x52A8;&#x64CD;&#x4F5C;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x7684;&#x8F6C;&#x6362;&#x4E3A;&#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#x3002;&#x7B2C;&#x4E8C;&#xFF0C; <b>std::move</b> &#x5E76;&#x4E0D;&#x4F1A;&#x79FB;&#x52A8;&#x4EFB;&#x4F55;&#x4E1C;&#x897F;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x5176;&#x8F6C;&#x6362;&#x51FA;&#x7684;&#x5BF9;&#x8C61;&#x80FD;&#x88AB;&#x79FB;&#x52A8;&#x3002;&#x552F;&#x4E00;&#x80FD;&#x786E;&#x5B9A;&#x7684;&#x662F; <b>std::move</b> &#x5904;&#x7406;&#x540E;&#x7684;&#x5BF9;&#x8C61;&#x662F;&#x4E00;&#x4E2A;&#x53F3;&#x503C;&#x3002;
</p>

<p>
<b>std::forward</b> &#x4E0E; <b>std::move</b> &#x7C7B;&#x4F3C;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7; <b>std::move</b> &#x4F1A;&#x65E0;&#x6761;&#x4EF6;&#x7684;&#x5C06;&#x5176;&#x53C2;&#x6570;&#x8F6C;&#x6362;&#x4E3A;&#x53F3;&#x503C;&#xFF0C;&#x800C; <b>std::forward</b> &#x53EA;&#x4F1A;&#x5728;&#x7279;&#x5B9A;&#x7684;&#x60C5;&#x5F62;&#x4E0B;&#x624D;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#x3002;&#x56E0;&#x6B64;&#xFF0C; <b>std::forward</b> &#x662F;&#x6709;&#x6761;&#x4EF6;&#x7684;&#x8F6C;&#x6362;&#x3002;&#x8981;&#x7406;&#x89E3;&#x5B83;&#x7684;&#x8F6C;&#x6362;&#x6761;&#x4EF6;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x56DE;&#x5FC6;&#x4E00;&#x4E0B; <b>std::forward</b> &#x7684;&#x4F7F;&#x7528;&#x60C5;&#x666F;&#x3002;&#x6700;&#x5E38;&#x7528;&#x7684;&#x4F7F;&#x7528;&#x60C5;&#x666F;&#x4FBF;&#x662F;&#x5728;&#x4E00;&#x63A5;&#x6536;&#x901A;&#x7528;&#x5F15;&#x7528;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x5C06;&#x5176;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x7ED9;&#x53E6;&#x4E00;&#x51FD;&#x6570;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">process</span><span class="params">(<span class="keyword">const</span> Widget&amp; lvalArg)</span></span>;     <span class="comment">// process lvalues</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">process</span><span class="params">(Widget&amp;&amp; rvalArg)</span></span>;          <span class="comment">// process rvalues</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;                     <span class="comment">// template that passes</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">logAndProcess</span><span class="params">(T&amp;&amp; param)</span>            <span class="comment">// param to process</span></span><br><span class="line"></span>{</span><br><span class="line">    <span class="keyword">auto</span> now =                           <span class="comment">// get current time</span></span><br><span class="line">       <span class="built_in">std</span>::chrono::system_clock::now();</span><br><span class="line"></span><br><span class="line">    makeLogEntry(<span class="string">&quot;Calling &apos;process&apos;&quot;</span>, now);</span><br><span class="line">    process(<span class="built_in">std</span>::forward&lt;T&gt;(param));</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x8003;&#x8651;&#x5206;&#x522B;&#x7528;&#x5DE6;&#x503C;&#x548C;&#x53F3;&#x503C;&#x8C03;&#x7528; <b>logAndProcess</b> &#x65B9;&#x6CD5;&#x7684;&#x60C5;&#x5F62;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Widget w;</span><br><span class="line"></span><br><span class="line">logAndProcess(w);             <span class="comment">// call with lvalue</span></span><br><span class="line">logAndProcess(<span class="built_in">std</span>::move(w));  <span class="comment">// call with rvalue</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5728;&#x51FD;&#x6570; <b>logAndProcess</b> &#x4E2D;&#xFF0C;&#x53C2;&#x6570; <b>param</b> &#x88AB;&#x4F20;&#x9012;&#x7ED9; <b>process</b> &#x51FD;&#x6570;&#xFF0C; <b>process</b> &#x51FD;&#x6570;&#x6709;&#x9488;&#x5BF9;&#x5DE6;&#x503C;&#x53CA;&#x53F3;&#x503C;&#x53C2;&#x6570;&#x7684;&#x91CD;&#x8F7D;&#x3002;&#x6211;&#x4EEC;&#x81EA;&#x7136;&#x5E0C;&#x671B;&#xFF0C;&#x5728;&#x4F7F;&#x7528;&#x5DE6;&#x503C;&#x8C03;&#x7528; <b>process</b> &#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x8BE5;&#x5DE6;&#x503C;&#x4F1A;&#x88AB;&#x8F6C;&#x53D1;&#x7ED9; <b>process</b> &#xFF0C;&#x800C;&#x5728;&#x4F7F;&#x7528;&#x53F3;&#x503C;&#x8C03;&#x7528; <b>logAndProcess</b> &#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x5219;&#x4F1A;&#x8C03;&#x7528;&#x76F8;&#x5E94;&#x7684;&#x53F3;&#x503C;&#x91CD;&#x8F7D;&#x7248;&#x672C;&#x3002;
</p>

<p>
&#x53EF;&#x662F;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x53C2;&#x6570;&#xFF08;&#x6B63;&#x5982;&#x6240;&#x6709;&#x7684;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x4E00;&#x6837;&#xFF09;&#xFF0C;&#x90FD;&#x662F;&#x5DE6;&#x503C;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x51FD;&#x6570; <b>logAndProcess</b> &#x4E2D;&#x5BF9; <b>process</b> &#x7684;&#x8C03;&#x7528;&#xFF0C;&#x90FD;&#x4F1A;&#x89E6;&#x53D1;&#x5DE6;&#x503C;&#x91CD;&#x8F7D;&#x7248;&#x672C;&#x7684; <b>process</b> &#x51FD;&#x6570;&#x3002;&#x4E3A;&#x963B;&#x6B62;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x53D1;&#x751F;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x79CD;&#x673A;&#x5236;&#xFF0C;&#x5B83;&#x80FD;&#x5728;&#x9002;&#x5F53;&#x7684;&#x65F6;&#x5019; &#x2500;&#x2500;&#x5F53;&#x4F20;&#x9012;&#x7ED9; <b>logAndProcsss</b> &#x7684;&#x53C2;&#x6570;&#x662F;&#x53F3;&#x503C;&#x7684;&#x65F6;&#x5019;&#x2500;&#x2500; &#x5C06;&#x53C2;&#x6570;&#x8F6C;&#x6362;&#x4E3A;&#x53F3;&#x503C;&#x3002;&#x8FD9;&#x4FBF;&#x662F; <b>std::forward</b> &#x6240;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x56E0;&#x6B64;&#xFF0C; <b>std::forward</b> &#x88AB;&#x79F0;&#x4E3A;&#x6761;&#x4EF6;&#x8F6C;&#x6362;&#xFF1A;&#x5B83;&#x4EC5;&#x5728;&#x5176;&#x53C2;&#x6570;&#x7531;&#x53F3;&#x503C;&#x521D;&#x59CB;&#x5316;&#x65F6;&#xFF0C;&#x624D;&#x5C06;&#x5176;&#x8F6C;&#x6362;&#x4E3A;&#x53F3;&#x503C;&#x3002;
</p>

<p>
&#x4F60;&#x4E5F;&#x8BB8;&#x4F1A;&#x60F3;&#x77E5;&#x9053;&#xFF0C; <b>std::forward</b> &#x662F;&#x5982;&#x4F55;&#x77E5;&#x9053;&#x5176;&#x53C2;&#x6570;&#x662F;&#x7531;&#x53F3;&#x503C;&#x521D;&#x59CB;&#x5316;&#x800C;&#x6765;&#x7684;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x5982;&#x4E0A;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C; <b>std::forward</b> &#x662F;&#x5982;&#x4F55;&#x77E5;&#x9053;&#x521D;&#x59CB;&#x5316;&#x5176;&#x53C2;&#x6570;&#x7684;&#x662F;&#x5DE6;&#x503C;&#x8FD8;&#x662F;&#x53F3;&#x503C;&#xFF1F;&#x8981;&#x70B9;&#x5728;&#x4E8E; <b>logAndProcess</b> &#x7684;&#x6A21;&#x677F;&#x53C2;&#x6570;T&#xFF0C;&#x53C2;&#x6570;&#x7684;&#x5DE6;&#x3001;&#x53F3;&#x503C;&#x4FE1;&#x606F;&#x4FBF;&#x9690;&#x85CF;&#x5176;&#x4E2D;&#xFF0C;&#x501F;&#x7531; <b>std::forward</b> &#x5C06;&#x5176;&#x8FD8;&#x539F;&#x3002;&#x8BE6;&#x7EC6;&#x60C5;&#x51B5;&#x6211;&#x5C06;&#x4E0E;<a href="./item28.html">&#x6761;&#x6B3E;28</a>&#x4E2D;&#x4E3A;&#x4F60;&#x8BB2;&#x8FF0;&#x3002;
</p>

<p>
<b>std::move</b> &#x548C; <b>std::forward</b> &#x90FD;&#x88AB;&#x5F52;&#x7ED3;&#x4E3A;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x552F;&#x4E00;&#x533A;&#x522B;&#x662F; <b>std::move</b> &#x603B;&#x662F;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#xFF0C;&#x800C; <b>std::forward</b> &#x5219;&#x53EA;&#x4F1A;&#x5728;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#xFF0C;&#x4F60;&#x4E5F;&#x8BB8;&#x4F1A;&#x95EE;&#xFF0C;&#x6211;&#x4EEC;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x6452;&#x5F03; <b>std::move</b> &#xFF0C;&#x53EA;&#x4F7F;&#x7528; <b>std::forward</b> &#xFF1F;&#x4ECE;&#x6280;&#x672F;&#x5C42;&#x9762;&#x6765;&#x8BF4;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x90A3;&#x4E48;&#x505A;&#xFF0C; <b>std::move</b> &#x4E0D;&#x662F;&#x5FC5;&#x987B;&#x7684;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x5B83;&#x4EEC;&#x4E24;&#x90FD;&#x4E0D;&#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x4F55;&#x9700;&#x8981;&#x8F6C;&#x6362;&#x7684;&#x5730;&#x65B9;&#x624B;&#x52A8;&#x7F16;&#x5199;&#x8F6C;&#x6362;&#x4EE3;&#x7801;&#xFF0C;&#x4F46;&#x6211;&#x8FD8;&#x662F;&#x5E0C;&#x671B;&#x5927;&#x5BB6;&#x5C3D;&#x91CF;&#x4F7F;&#x7528;&#x5B83;&#x4EEC;&#xFF0C;&#x6BD5;&#x7ADF;&#x968F;&#x5904;&#x53EF;&#x89C1;&#x7684;&#x76F8;&#x4F3C;&#x4EE3;&#x7801;&#xFF08;&#x624B;&#x52A8;&#x7F16;&#x5199;&#x7684;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x4EE3;&#x7801;&#xFF09;&#xFF0C;&#x5E76;&#x4E0D;&#x7B26;&#x5408;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x7684;&#x54F2;&#x5B66;&#x3002;
</p>

<p>
<b>std::move</b> &#x7684;&#x5438;&#x5F15;&#x529B;&#x5728;&#x4E8E;&#x65B9;&#x4FBF;&#x3001;&#x51CF;&#x5C11;&#x53EF;&#x80FD;&#x7684;&#x9519;&#x8BEF;&#x4EE5;&#x53CA;&#x8BED;&#x4E49;&#x6E05;&#x6670;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7EDF;&#x8BA1;&#x67D0;&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x6B21;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5B9A;&#x4E49;&#x4E00;&#x9759;&#x6001;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x5C06;&#x5176;&#x4E8E;&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x81EA;&#x589E;&#xFF0C;&#x5047;&#x4F7F;&#x8BE5;&#x7C7B;&#x4EC5;&#x6709;&#x4E00;&#x4E2A; <b>std::string</b> &#x7C7B;&#x578B;&#x7684;&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x4FBF;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF08;&#x4F7F;&#x7528; <b>std::move</b> &#xFF09;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Widget {</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Widget(Widget&amp;&amp; rhs)</span><br><span class="line">	: s(<span class="built_in">std</span>::move(rhs.s))</span><br><span class="line">    { ++moveCtorCalls; }</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">std</span>::<span class="keyword">size_t</span> moveCtorCalls;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> s;</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5F53;&#x7136;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; <b>std::forward</b> &#x5B9E;&#x73B0;&#x8BE5;&#x51FD;&#x6570;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Widget {</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Widget(Widget&amp;&amp; rhs)                         <span class="comment">// unconventional,</span></span><br><span class="line">	: s(<span class="built_in">std</span>::forward&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;(rhs.s))    <span class="comment">// undesirable</span></span><br><span class="line">    { ++moveCtorCalls; }                         <span class="comment">// implementation</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6CE8;&#x610F;&#xFF0C;&#x5728;&#x4F7F;&#x7528; <b>std::move</b> &#x65F6;&#xFF0C;&#x4F60;&#x53EA;&#x9700;&#x5411;&#x5B83;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF08;rhs.s&#xFF09;&#x5373;&#x53EF;&#xFF0C;&#x800C; <b>std::forward</b> &#x8FD8;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#xFF08; <b>std::string</b> &#xFF09;&#xFF0C;&#x4F60;&#x4E0D;&#x9700;&#x8981;&#x4E3A;&#x5B83;&#xFF08;&#x6A21;&#x677F;&#x53C2;&#x6570;&#xFF09;&#x6307;&#x5B9A;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#xFF08;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x53F3;&#x503C;&#xFF09;&#x5DF2;&#x7ECF;&#x662F;&#x7EA6;&#x5B9A;&#x4FD7;&#x6210;&#x7684;&#x4E1C;&#x897F;&#x4E86;&#xFF08;&#x53C2;&#x9605;<a href="./item28.html">&#x6761;&#x6B3E;28</a>&#xFF09;&#x3002;&#x56E0;&#x6B64;&#x4F7F;&#x7528; <b>std::move</b> &#x6BD4; <b>std::forward</b> &#x66F4;&#x65B9;&#x4FBF;&#xFF0C;&#x8FD8;&#x80FD;&#x907F;&#x514D;&#x9519;&#x8BEF;&#x7684;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x5BFC;&#x81F4;&#x7684;&#x884C;&#x4E3A;&#x5F02;&#x5E38;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;&#x4F20;&#x5165; <b>std::string&amp;</b> &#x5C06;&#x5BFC;&#x81F4;&#x6210;&#x5458;&#x53D8;&#x91CF; <b>s</b> &#x88AB;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x79FB;&#x52A8;&#x6784;&#x9020;&#xFF09;&#x3002;
</p>

<p>
&#x66F4;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C; <b>std::move</b> &#x7684;&#x4F7F;&#x7528;&#x7ED9;&#x6211;&#x4EEC;&#x4F20;&#x9012;&#x4E86;&#x65E0;&#x6761;&#x4EF6;&#x53F3;&#x503C;&#x8F6C;&#x6362;&#x7684;&#x8BED;&#x4E49;&#xFF0C;&#x800C; <b>std::forward</b> &#x5219;&#x8868;&#x660E;&#x4EC5;&#x4F1A;&#x5BF9;&#x7ED1;&#x5B9A;&#x81F3;&#x53F3;&#x503C;&#x7684;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#xFF0C;&#x8FD9;&#x662F;&#x4E24;&#x79CD;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x524D;&#x8005;&#x662F;&#x5178;&#x578B;&#x7684;&#x79FB;&#x52A8;&#xFF0C;&#x540E;&#x8005;&#x53EA;&#x662F;&#x5C06;&#x5BF9;&#x8C61;&#x2500;&#x2500; <b>&#x8F6C;&#x53D1;</b> &#x2500;&#x2500;&#x7ED9;&#x53E6;&#x4E00;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4FDD;&#x7559;&#x5B83;&#x7684;&#x5DE6;&#x3001;&#x53F3;&#x503C;&#x5C5E;&#x6027;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x8BBE;&#x8BA1;&#x4E24;&#x4E2A;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x7684;&#x51FD;&#x6570;&#xFF08;&#x53CA;&#x51FD;&#x6570;&#x540D;&#xFF09;&#x533A;&#x5206;&#x5B83;&#x4EEC;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x51B3;&#x8BAE;&#x3002;
</p>
</div>

<div id="outline-container-orgde28b4e" class="outline-4">
<h4 id="&#x8BB0;&#x4F4F;"><a id="orgde28b4e"></a>&#x8BB0;&#x4F4F;&#xFF1A;</h4>
<div class="outline-text-4" id="text-&#x8BB0;&#x4F4F;">
<ul class="org-ul">
<li><b>std::move</b> &#x65E0;&#x6761;&#x4EF6;&#x7684;&#x5C06;&#x5176;&#x53C2;&#x6570;&#x8F6C;&#x6362;&#x4E3A;&#x53F3;&#x503C;&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x8FDB;&#x884C;&#x4EFB;&#x4F55;&#x79FB;&#x52A8;&#x3002;</li>
<li><b>std::forward</b> &#x53EA;&#x4F1A;&#x5728;&#x5176;&#x53C2;&#x6570;&#x4E3A;&#x53F3;&#x503C;&#x65F6;&#xFF0C;&#x624D;&#x4F1A;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#x3002;</li>
<li><b>std::move</b> &#x4E0E; <b>std::forward</b> &#x5747;&#x65E0;&#x8FD0;&#x884C;&#x65F6;&#x5F00;&#x9500;&#x3002;</li>
</ul>
</div>
</div>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
Moving a value out of an object generally modifies the object.&#x610F;&#x4E3A;&#x5BF9;&#x8BE5;&#x5BF9;&#x8C61;&#x8C03;&#x7528; <b>std::move</b> &#x540E;&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x53D8;&#x6210;&#x4E86;&#x53F3;&#x503C;&#xFF0C;&#x5176;&#x5B9E;&#x4FBF;&#x662F;&#x4FEE;&#x6539;&#x4E86;&#x8BE5;&#x5BF9;&#x8C61;&#xFF0C;&#x4E0E;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;const&#x5C5E;&#x6027;&#x76F8;&#x77DB;&#x76FE;&#x3002;
</p></div></div>


</div>
</div></div>
<div id="postamble" class="status">
<div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;">Last Updated 2017-08-07 Mon 04:12. <br><a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 9.0.9)</div>
</div>
]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;content&quot;&gt;

&lt;div id=&quot;outline-container-org3573098&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;&amp;#x7B2C;&amp;#x4E94;&amp;#x7AE0;-&amp;#x53F3;&amp;#x503C;&amp;#x5F15;&amp;#x7528;&amp;#x79FB;&amp;#x52A8;&amp;#x8BED;&amp;#x4E49;&amp;#x53CA;&amp;#x5B8C;&amp;#x7F8E;&amp;#x8F6C;&amp;#x53D1;&quot;&gt;&lt;a id=&quot;org3573098&quot;&gt;&lt;/a&gt;&amp;#x7B2C;&amp;#x4E94;&amp;#x7AE0; &amp;#x53F3;&amp;#x503C;&amp;#x5F15;&amp;#x7528;&amp;#x3001;&amp;#x79FB;&amp;#x52A8;&amp;#x8BED;&amp;#x4E49;&amp;#x53CA;&amp;#x5B8C;&amp;#x7F8E;&amp;#x8F6C;&amp;#x53D1;&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-&amp;#x7B2C;&amp;#x4E94;&amp;#x7AE0;-&amp;#x53F3;&amp;#x503C;&amp;#x5F15;&amp;#x7528;&amp;#x79FB;&amp;#x52A8;&amp;#x8BED;&amp;#x4E49;&amp;#x53CA;&amp;#x5B8C;&amp;#x7F8E;&amp;#x8F6C;&amp;#x53D1;&quot;&gt;
&lt;p&gt;
&amp;#x5F53;&amp;#x4F60;&amp;#x521D;&amp;#x6B21;&amp;#x5B66;&amp;#x4E60;&amp;#x5B83;&amp;#x4EEC;&amp;#x65F6;&amp;#xFF0C;&amp;#x79FB;&amp;#x52A8;&amp;#x8BED;&amp;#x4E49;&amp;#x548C;&amp;#x5B8C;&amp;#x7F8E;&amp;#x8F6C;&amp;#x53D1;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x975E;&amp;#x5E38;&amp;#x76F4;&amp;#x767D;&amp;#xFF1A;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;b&gt;&amp;#x79FB;&amp;#x52A8;&amp;#x8BED;&amp;#x4E49;&lt;/b&gt; &amp;#x8BA9;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x5C06;&amp;#x4EE3;&amp;#x4EF7;&amp;#x9AD8;&amp;#x6602;&amp;#x7684;&amp;#x62F7;&amp;#x8D1D;&amp;#x64CD;&amp;#x4F5C;&amp;#x66FF;&amp;#x6362;&amp;#x4E3A;&amp;#x76F8;&amp;#x5BF9;&amp;#x4F4E;&amp;#x5EC9;&amp;#x7684;&amp;#x79FB;&amp;#x52A8;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x6B63;&amp;#x5982;&amp;#x5176;&amp;#x540D;&amp;#xFF0C;&amp;#x62F7;&amp;#x8D1D;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#x53CA;&amp;#x62F7;&amp;#x8D1D;&amp;#x8D4B;&amp;#x503C;&amp;#x51FD;&amp;#x6570;&amp;#x7ED9;&amp;#x4E88;&amp;#x4F60;&amp;#x63A7;&amp;#x5236;&amp;#x5BF9;&amp;#x8C61;&amp;#x590D;&amp;#x5236;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#xFF0C;&amp;#x4E0E;&amp;#x6B64;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x79FB;&amp;#x52A8;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x79FB;&amp;#x52A8;&amp;#x8D4B;&amp;#x503C;&amp;#x51FD;&amp;#x6570;&amp;#x5219;&amp;#x7ED9;&amp;#x4E88;&amp;#x4F60;&amp;#x63A7;&amp;#x5236;&amp;#x79FB;&amp;#x52A8;&amp;#x8BED;&amp;#x4E49;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#x3002;&amp;#x79FB;&amp;#x52A8;&amp;#x8BED;&amp;#x4E49;&amp;#x8FD8;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x521B;&amp;#x5EFA;move-only&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x4F8B;&amp;#x5982;&amp;#xFF1A; &lt;b&gt;std::unique_ptr&lt;/b&gt; &amp;#x3001; &lt;b&gt;std::future&lt;/b&gt; &amp;#x548C; &lt;b&gt;std::thread&lt;/b&gt; &amp;#x3002;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;&amp;#x5B8C;&amp;#x7F8E;&amp;#x8F6C;&amp;#x53D1;&lt;/b&gt; &amp;#x4F7F;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x5C06;&amp;#x6A21;&amp;#x677F;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x5B9E;&amp;#x53C2;&amp;#xFF08;&amp;#x4EFB;&amp;#x610F;&amp;#x4FEE;&amp;#x9970;&amp;#x7B26;&amp;#x7684;&amp;#x5B9E;&amp;#x53C2;&amp;#xFF09;&amp;#x8F6C;&amp;#x53D1;&amp;#x7ED9;&amp;#x53E6;&amp;#x4E00;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&amp;#x53F3;&amp;#x503C;&amp;#x5F15;&amp;#x7528;&amp;#x662F;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FE5;&amp;#x5F02;&amp;#x7279;&amp;#x6027;&amp;#x7684;&amp;#x7C98;&amp;#x5408;&amp;#x5242;&amp;#x3002;&amp;#x5B83;&amp;#x4EEC;&amp;#x662F;&amp;#x6784;&amp;#x6210;&amp;#x79FB;&amp;#x52A8;&amp;#x8BED;&amp;#x4E49;&amp;#x53CA;&amp;#x5B8C;&amp;#x7F8E;&amp;#x8F6C;&amp;#x53D1;&amp;#x7684;&amp;#x57FA;&amp;#x77F3;&amp;#x3002;
&lt;/p&gt;
    
    </summary>
    
      <category term="Translation" scheme="http://paruka.me/categories/Translation/"/>
    
      <category term="Effective Modern C++" scheme="http://paruka.me/categories/Translation/Effective-Modern-C/"/>
    
    
      <category term="Effective Modern C++" scheme="http://paruka.me/tags/Effective-Modern-C/"/>
    
      <category term="Press Ban" scheme="http://paruka.me/tags/Press-Ban/"/>
    
      <category term="禁止转载" scheme="http://paruka.me/tags/%E7%A6%81%E6%AD%A2%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Value categories</title>
    <link href="http://paruka.me/translation/cppreference/value-categories.html"/>
    <id>http://paruka.me/translation/cppreference/value-categories.html</id>
    <published>2016-12-29T17:42:00.000Z</published>
    <updated>2017-08-06T18:40:49.011Z</updated>
    
    <content type="html"><![CDATA[<div id="content">
<p>
&#x7FFB;&#x8BD1;&#x81F3;<a href="http://en.cppreference.com/w/cpp/language/value_category" target="_blank" rel="external">cppreference</a>&#x3001;<a href="http://en.cppreference.com/mwiki/index.php?title=cpp/language/value_category&amp;oldid=85137" target="_blank" rel="external">cppreference</a>&#xFF0C;&#x5E76;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x4E86;&#x6574;&#x5408;&#x3002;(&#x867D;&#x7136;&#x6211;&#x5E76;&#x4E0D;&#x660E;&#x767D;&#x8FD9;&#x4E24;&#x4E2A;&#x7F51;&#x7AD9;&#x7684;&#x533A;&#x522B;&#x2026;)
</p>

<p>
&#x6BCF;&#x4E00;&#x4E2A;C++<a href="http://en.cppreference.com/w/cpp/language/expressions" target="_blank" rel="external">&#x8868;&#x8FBE;&#x5F0F;</a>&#xFF08;&#x6709;&#x64CD;&#x4F5C;&#x6570;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x3001;&#x5B57;&#x9762;&#x503C;&#x3001;&#x53D8;&#x91CF;&#x540D;&#x7B49;&#xFF09;&#x90FD;&#x88AB;&#x8D4B;&#x4E88;&#x4E24;&#x79CD;&#x72EC;&#x7ACB;&#x7684;&#x5C5E;&#x6027;&#xFF1A;&#x578B;&#x522B;&#x548C;&#x503C;&#x7C7B;&#x578B;&#xFF08;value categories&#xFF09;&#x3002;&#x6BCF;&#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x90FD;&#x6709;&#x4E00;&#x4E9B;&#x975E;&#x5F15;&#x7528;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x4E14;&#x5F52;&#x5C5E;&#x4E0E;&#x4EE5;&#x4E0B;&#x4E09;&#x79CD;&#x503C;&#x7C7B;&#x578B;&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#xFF1A;prvalue&#x3001;xvalue&#x3001;lvalue&#x3002;&#x5B83;&#x4EEC;&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;
</p>
<a id="more"></a>

<ul class="org-ul">
<li>glvalue<sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup>&#x662F;&#x4E00;&#x4E2A;&#x5176;&#x503C;&#xFF08;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#xFF09;&#x80FD;&#x6807;&#x8BC6;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x3001;&#x4F4D;&#x57DF;&#x6216;&#x51FD;&#x6570;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x3002;</li>
<li>prvalue<sup><a id="fnr.2" class="footref" href="#fn.2">2</a></sup>&#x8868;&#x8FBE;&#x5F0F;&#x65E2;
<ul class="org-ul">
<li><b>&#x662F;&#x4E00;&#x4E2A;&#x8FD0;&#x7B97;&#x7B26;&#xFF08;&#x4F7F;&#x7528;&#x67D0;&#x4E9B;&#x64CD;&#x4F5C;&#x6570;&#x8FD0;&#x7B97;&#x540E;&#xFF09;&#x7684;&#x503C;&#xFF08;&#x8FD9;&#x6837;&#x7684;prvalue&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x5BF9;&#x8C61;&#xFF09;&#xFF0C;&#x4E5F;&#x80FD;</b></li>
<li><b>&#xFF08;&#x7528;&#x5176;&#x503C;&#xFF09;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x6216;&#x4F4D;&#x57DF;&#xFF08;&#x8FD9;&#x6837;&#x7684;prvalue&#x6211;&#x4EEC;&#x79F0;&#x5176;&#x62E5;&#x6709;&#x8FD4;&#x56DE;&#x5BF9;&#x8C61;&#xFF09;&#x3002;&#x6240;&#x6709;&#x7C7B;&#x3001;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#x7684;prvalue&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x54EA;&#x6015;&#x5B83;&#x4F1A;&#x88AB;&#x629B;&#x5F03;&#x3002;</b></li>
</ul></li>
<li>xvalue<sup><a id="fnr.3" class="footref" href="#fn.3">3</a></sup>&#x662F;&#x4E00;&#x4E2A;&#xFF08;&#x5176;&#x5BF9;&#x8C61;&#x6216;&#x4F4D;&#x57DF;&#xFF09;&#x53EF;&#x88AB;&#x590D;&#x7528;&#x7684;glvalue&#x3002;</li>
<li>lvalue&#x662F;&#x90A3;&#x4E9B;&#x4E0D;&#x5C5E;&#x4E8E;xvalue&#x7684;glvalue&#x3002;</li>
<li>rvalue&#x662F;&#x4E00;&#x4E2A;prvalue&#x6216;xvalue&#x3002;</li>
</ul>

<p>
&#x6CE8;&#x610F;: &#x8FD9;&#x4E00;&#x5206;&#x7C7B;&#x65B9;&#x5F0F;&#x4E0E;&#x4E4B;&#x524D;&#x7684;C++&#x6807;&#x51C6;&#x76F8;&#x6BD4;&#x6709;&#x5DE8;&#x5927;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x8BE6;&#x60C5;&#x8BF7;&#x770B;<a href="http://en.cppreference.com/w/cpp/language/value_category#History" target="_blank" rel="external">&#x5386;&#x53F2;</a>&#x3002;
</p>

<div id="outline-container-orgddbfd2e" class="outline-2">
<h2 id="primary-categories"><a id="orgddbfd2e"></a>Primary categories</h2>
<div class="outline-text-2" id="text-primary-categories">
<p>
&#x4E3B;&#x7C7B;&#x578B;&#x5BF9;&#x5E94;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A;
</p>
<ul class="org-ul">
<li><i>&#x6709;&#x8EAB;&#x4EFD;</i> : &#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x5404;&#x8868;&#x8FBE;&#x5F0F;&#x6807;&#x8BC6;&#x7684;&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x4E3A;&#x540C;&#x4E00;&#x5BF9;&#x8C61;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x6BD4;&#x8F83;&#x5B83;&#x4EEC;&#x7684;&#x5730;&#x5740;&#x6216;&#x8005;&#x8C03;&#x7528;&#x5B83;&#x4EEC;&#x7684;&#x6807;&#x8BC6;&#x51FD;&#x6570;&#x3002;</li>
<li><i>&#x53EF;&#x88AB;&#x79FB;&#x52A8;</i> : &#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#x3001;&#x79FB;&#x52A8;&#x8D4B;&#x503C;&#x51FD;&#x6570;&#x6216;&#x5176;&#x5B83;&#x5B9E;&#x73B0;&#x4E86;&#x79FB;&#x52A8;&#x8BED;&#x610F;&#x7684;&#x51FD;&#x6570;&#x662F;&#x5426;&#x53EF;&#x7ED1;&#x5B9A;&#x81F3;&#x8BE5;&#x8868;&#x8FBE;&#x5F0F;&#x3002;</li>
</ul>

<p>
&#x56E0;&#x6B64;&#xFF1A;
</p>
<ul class="org-ul">
<li>&#x6709;&#x8EAB;&#x4EFD;&#x4E14;&#x4E0D;&#x80FD;&#x88AB;&#x79FB;&#x52A8;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x4E3A; <i>lvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li>&#x6709;&#x8EAB;&#x4EFD;&#x4E14;&#x80FD;&#x88AB;&#x79FB;&#x52A8;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x4E3A; <i>xvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li>&#x65E0;&#x8EAB;&#x4EFD;&#x4E14;&#x80FD;&#x88AB;&#x79FB;&#x52A8;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x4E3A; <i>prvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li>&#x65E0;&#x8EAB;&#x4EFD;&#x4E14;&#x4E0D;&#x80FD;&#x88AB;&#x79FB;&#x52A8;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x5E76;&#x4E0D;&#x5B58;&#x5728;&#x3002;</li>
</ul>
</div>

<div id="outline-container-org8373261" class="outline-3">
<h3 id="lvalue"><a id="org8373261"></a><b>lvalue</b></h3>
<div class="outline-text-3" id="text-lvalue">
<p>
<i>lvalue</i> (&quot;left value&quot;)&#x8868;&#x8FBE;&#x5F0F;&#x6709;&#x8EAB;&#x4EFD;&#x4E14;&#x4E0D;&#x80FD;&#x88AB;&#x79FB;&#x52A8;&#x3002;&quot;&#x5DE6;&#x503C;&quot;&#x8FD9;&#x4E2A;&#x540D;&#x5B57;&#x5177;&#x6709;&#x5386;&#x53F2;&#x6027;&#x7684;&#x610F;&#x4E49;&#xFF0C;&#x5B83;&#x5B8C;&#x7F8E;&#x7684;&#x6807;&#x8BC6;&#x4E86;&#x5B83;&#x5728;CPL&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x4F5C;&#x7528;&#xFF1A;&#x8D4B;&#x503C;&#x8FD0;&#x7B97;&#x7B26;&#x7684;&#x5DE6;&#x64CD;&#x4F5C;&#x6570;&#x3002;
</p>

<p>
&#x4EE5;&#x4E0B;&#x8868;&#x8FBE;&#x5F0F;&#x5747;&#x4E3A;lvalue&#xFF08;&#x5DE6;&#x503C;&#xFF09;&#x8868;&#x8FBE;&#x5F0F;:
</p>
<ul class="org-ul">
<li>&#x4F5C;&#x7528;&#x57DF;&#x5185;&#x7684;&#x3001;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x540D;&#x6216;&#x51FD;&#x6570;&#x540D;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>std::cin</code> &#x3001; <code>std::endl</code> &#x3002;&#x5373;&#x4FBF;&#x53D8;&#x91CF;&#x7684;&#x7C7B;&#x578B;&#x662F;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x7531;&#x5B83;&#x7684;&#x540D;&#x5B57;&#x7EC4;&#x6210;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x5DE6;&#x503C;&#x8868;&#x8FBE;&#x5F0F;&#x3002;</li>
<li>&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x7684;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x6216;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x91CD;&#x8F7D;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>std::getline(std::cin, str)</code> &#x3001; <code>std::cout &lt;&lt; 1</code> &#x3001; <code>str1 = str2</code> &#x3001; <code>++it</code> &#x3002;</li>
<li><code>a=b</code> &#x3001; <code>a+=b</code> &#x3001; <code>a%=b</code> &#xFF0C;&#x53CA;&#x5176;&#x5B83;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_assignment" target="_blank" rel="external">&#x8D4B;&#x503C;&#x3001;&#x590D;&#x5408;&#x8D4B;&#x503C;</a>&#x8868;&#x8FBE;&#x5F0F;&#x3002;</li>
<li><code>++a</code> &#x548C; <code>--a</code> &#xFF1A;&#x3000;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_incdec#Built-in_prefix_operators" target="_blank" rel="external">&#x524D;&#x7F6E;&#x81EA;&#x589E;&#x3001;&#x524D;&#x7F6E;&#x81EA;&#x51CF;</a>&#x8868;&#x8FBE;&#x5F0F;&#x3002;</li>
<li><code>*p</code> &#xFF1A;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_indirection_operator" target="_blank" rel="external">&#x6307;&#x9488;&#x53D6;&#x503C;</a>&#x8868;&#x8FBE;&#x5F0F;&#x3002;</li>
<li><code>a[n]</code> &#x548C; <code>p[n]</code> &#xFF1A;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_subscript_operator" target="_blank" rel="external">&#x53D6;&#x4E0B;&#x6807;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C; <code>a&#x4E0D;&#x80FD;&#x4E3A;&#x53F3;&#x503C;&#x6570;&#x7EC4;&#x3002;(since c++11)</code> &#x3002;</li>
<li><code>a.m</code> &#xFF1A;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_member_access_operators" target="_blank" rel="external">&#x5BF9;&#x8C61;&#x6210;&#x5458;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x9664;&#x975E;m&#x662F;&#x679A;&#x4E3E;&#x6216;&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;&#xFF0C;&#x53C8;&#x6216;&#x8005;a&#x662F;&#x53F3;&#x503C;&#x4E14;m&#x4E3A;&#x975E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;&#x3002;</li>
<li><code>p-&gt;m</code> &#xFF1A;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_member_access_operators" target="_blank" rel="external">&#x6307;&#x9488;&#x6240;&#x6307;&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x5458;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;m&#x4E0D;&#x80FD;&#x4E3A;&#x679A;&#x4E3E;&#x6216;&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;&#x3002;</li>
<li><code>a.*mp</code>: <a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_pointer-to-member_access_operators" target="_blank" rel="external">&#x5BF9;&#x8C61;&#x6210;&#x5458;&#x6307;&#x9488;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;a&#x5FC5;&#x987B;&#x4E3A;&#x5DE6;&#x503C;&#x4E14;mp&#x5FC5;&#x987B;&#x6307;&#x5411;&#x6570;&#x636E;&#x6210;&#x5458;&#x3002;</li>
<li><code>p-&gt;*mp</code> &#xFF1A;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_pointer-to-member_access_operators" target="_blank" rel="external">&#x6307;&#x5411;&#x6210;&#x5458;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;mp&#x5FC5;&#x987B;&#x6307;&#x5411;&#x6570;&#x636E;&#x6210;&#x5458;&#x3002;</li>
<li><code>a, b</code>: &#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_other#Built-in_comma_operator" target="_blank" rel="external">&#x9017;&#x53F7;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;b&#x5FC5;&#x987B;&#x4E3A;&#x5DE6;&#x503C;&#x3002;</li>
<li><code>a ? b : c</code> &#xFF1A;&#x67D0;&#x4E9B;<a href="http://en.cppreference.com/w/cpp/language/operator_other#Conditional_operator" target="_blank" rel="external">&#x4E09;&#x5143;&#x6761;&#x4EF6;</a>&#x8868;&#x8FBE;&#x5F0F;&#x3002;</li>
<li><a href="http://en.cppreference.com/w/cpp/language/string_literal" target="_blank" rel="external">&#x5B57;&#x7B26;&#x4E32;&#x5B57;&#x9762;&#x503C;</a>&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>&quot;Hello World!&quot;</code> &#x3002;</li>
<li>&#x8F6C;&#x6362;&#x4E3A;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x7684;&#x8F6C;&#x6362;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F8B;&#x5982;: <code>static_cast&lt;int&amp;&gt;(x)</code> &#x3002;</li>
<li>&#x5BF9;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x6216;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x91CD;&#x8F7D;&#x8868;&#x8FBE;&#x5F0F;(since c++11)&#x3002;</li>
<li>&#x8F6C;&#x6362;&#x4E3A;&#x51FD;&#x6570;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7684;&#x8F6C;&#x6362;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>static_cast&lt;void (&amp;&amp;)(int)&gt;(x)</code> (since c++11)&#x3002;</li>
</ul>
</div>

<div id="outline-container-org9cfe59f" class="outline-4">
<h4 id="org9cfe59f">&#x5C5E;&#x6027;:</h4>
<div class="outline-text-4" id="text-org9cfe59f">
<ul class="org-ul">
<li>&#x62E5;&#x6709;glvalue&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;(&#x7A0D;&#x540E;&#x4ECB;&#x7ECD;)&#x3002;</li>
<li>&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5DE6;&#x503C;&#x7684;&#x5730;&#x5740;&#xFF1A; <code>&amp;++i</code> <sup><a id="fnr.4" class="footref" href="#fn.4">4</a></sup>&#x548C; <code>&amp;std::endl</code> &#x90FD;&#x662F;&#x5408;&#x6CD5;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x3002;</li>
<li>&#x53EF;&#x4FEE;&#x6539;&#x7684;&#x5DE6;&#x503C;&#x53EF;&#x4EE5;&#x505A;&#x4E3A;&#x5185;&#x7F6E;&#x8D4B;&#x503C;&#x3001;&#x590D;&#x5408;&#x8D4B;&#x503C;&#x8FD0;&#x7B97;&#x7B26;&#x7684;&#x5DE6;&#x64CD;&#x4F5C;&#x6570;&#x3002;</li>
<li>&#x5DE6;&#x503C;&#x53EF;&#x4EE5;&#x7528;&#x6765;<a href="http://en.cppreference.com/w/cpp/language/reference_initialization" target="_blank" rel="external">&#x521D;&#x59CB;&#x5316;&#x5DE6;&#x503C;&#x5F15;&#x7528;</a>&#xFF1B;&#x6B64;&#x65F6;&#x8BE5;&#x8868;&#x8FBE;&#x5F0F;&#x6807;&#x8BC6;&#x7684;&#x5BF9;&#x8C61;&#x5C06;&#x88AB;&#x8D4B;&#x4E88;&#x4E00;&#x4E2A;&#x5168;&#x65B0;&#x7684;&#x522B;&#x540D;&#x3002;</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org5e185df" class="outline-3">
<h3 id="prvalue"><a id="org5e185df"></a><b>prvalue</b></h3>
<div class="outline-text-3" id="text-prvalue">
<p>
<i>prvalue(&quot;pure rvalue&quot;)</i> &#x8868;&#x8FBE;&#x5F0F;&#x662F;&#x90A3;&#x4E9B; <i>&#x6CA1;&#x6709;&#x8EAB;&#x4EFD;</i> &#x4E14; <i>&#x53EF;&#x4EE5;&#x88AB;&#x79FB;&#x52A8;</i> &#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x3002;
</p>

<p>
&#x4EE5;&#x4E0B;&#x8868;&#x8FBE;&#x5F0F;&#x5747;&#x4E3A;prvalue&#x8868;&#x8FBE;&#x5F0F;&#xFF1A;
</p>
<ul class="org-ul">
<li><a href="http://en.cppreference.com/w/cpp/language/expressions#Literals" target="_blank" rel="external">&#x5B57;&#x9762;&#x503C;</a>&#xFF08;&#x9664;<a href="http://en.cppreference.com/w/cpp/language/string_literal" target="_blank" rel="external">&#x5B57;&#x7B26;&#x4E32;&#x5B57;&#x9762;&#x503C;</a>&#xFF09;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>42</code> &#x3001; <code>true</code> &#x6216; <code>nullptr</code> &#xFF1B;</li>
<li>&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x975E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x6216;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x975E;&#x5F15;&#x7528;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x91CD;&#x8F7D;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>str.substr(1, 2)</code> &#x3001; <code>str1+str2</code> &#x3001; <code>it++</code> &#x3002;</li>
<li><code>a++</code> &#x53CA; <code>a--</code> &#xFF0C;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_incdec#Built-in_postfix_operators" target="_blank" rel="external">&#x540E;&#x7F6E;&#x81EA;&#x589E;&#x3001;&#x81EA;&#x51CF;&#x8FD0;&#x7B97;&#x7B26;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li><code>a+b</code> &#x3001; <code>a%b</code> &#x3001; <code>a&amp;b</code> &#x3001; <code>a&lt;&lt;b</code> &#x53CA;&#x5176;&#x5B83;&#x6240;&#x6709;&#x7684;&#x5185;&#x7F6E;<a href="http://en.cppreference.com/w/cpp/language/operator_arithmetic" target="_blank" rel="external">&#x7B97;&#x6570;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li><code>a&amp;&amp;b</code> &#x3001; <code>a||b</code> &#x3001; <code>~a</code> &#xFF0C;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_logical" target="_blank" rel="external">&#x903B;&#x8F91;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li><code>a&lt;b</code> &#x3001;a==b&#x3001;a&gt;=b &#x53CA;&#x5176;&#x5B83;&#x6240;&#x6709;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_comparison" target="_blank" rel="external">&#x6BD4;&#x8F83;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li><code>&amp;a</code> &#xFF0C;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_address-of_operator" target="_blank" rel="external">&#x53D6;&#x5730;&#x5740;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li><code>a.m</code> &#xFF0C;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_member_access_operators" target="_blank" rel="external">&#x5BF9;&#x8C61;&#x6210;&#x5458;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;m&#x5FC5;&#x987B;&#x4E3A;&#x679A;&#x4E3E;&#x6216;&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;<sup><a id="fnr.5" class="footref" href="#fn.5">5</a></sup>&#xFF0C;&#x6216; <code>a&#x4E3A;rvalue&#x4E14;m&#x4E3A;&#x975E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x975E;&#x9759;&#x6001;&#x6570;&#x636E;&#x6210;&#x5458;&#xFF08;until c++11&#xFF09;</code> &#xFF1B;</li>
<li><code>p-&gt;m</code> &#xFF0C;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_member_access_operators" target="_blank" rel="external">&#x6307;&#x9488;&#x6240;&#x6307;&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x5458;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;m&#x5FC5;&#x987B;&#x4E3A;&#x679A;&#x4E3E;&#x6216;&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;<sup><a id="fnr.6" class="footref" href="#fn.6">6</a></sup>&#xFF1B;</li>
<li><code>a.*mp</code> &#xFF0C;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_pointer-to-member_access_operators" target="_blank" rel="external">&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x5458;&#x6307;&#x9488;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;mp&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x6210;&#x5458;&#x51FD;&#x6570;&#x7684;&#x6307;&#x9488;<sup><a id="fnr.7" class="footref" href="#fn.7">7</a></sup>&#xFF0C;&#x6216; <code>a&#x662F;&#x4E00;&#x4E2A;&#x53F3;&#x503C;&#x4E14;mp&#x4E3A;&#x4E00;&#x6307;&#x5411;&#x6570;&#x636E;&#x6210;&#x5458;&#x7684;&#x6307;&#x9488;&#xFF08;until C++11&#xFF09;</code> &#xFF1B;</li>
<li><code>p-&gt;*mp</code> &#xFF0C;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_pointer-to-member_access_operators" target="_blank" rel="external">&#x6307;&#x5411;&#x6210;&#x5458;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;mp&#x4E3A;&#x6307;&#x5411;&#x6210;&#x5458;&#x51FD;&#x6570;&#x7684;&#x6307;&#x9488;<sup><a id="fnr.8" class="footref" href="#fn.8">8</a></sup>&#xFF1B;</li>
<li><code>a, b</code> &#xFF0C;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_other#Built-in_comma_operator" target="_blank" rel="external">&#x9017;&#x53F7;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;b&#x4E3A;&#x53F3;&#x503C;&#xFF1B;</li>
<li><code>a ? b : c</code> &#xFF0C;&#x67D0;&#x4E9B;<a href="http://en.cppreference.com/w/cpp/language/operator_other#Conditional_operator" target="_blank" rel="external">&#x4E09;&#x5143;&#x6761;&#x4EF6;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li>&#x81F3;&#x975E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x8F6C;&#x6362;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>static_cast&lt;double&gt;(x)</code> &#x3001; <code>std::string{}</code> &#x6216; <code>(int)42</code> &#xFF1B;</li>
<li><a href="http://en.cppreference.com/w/cpp/language/this" target="_blank" rel="external">this</a>&#x6307;&#x9488;&#xFF1B;</li>
<li><a href="http://en.cppreference.com/w/cpp/language/lambda" target="_blank" rel="external">lambda&#x8868;&#x8FBE;&#x5F0F;</a>&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>[](int x){ return x * x; }&#x3002;(since c++11)</code> &#x3002;</li>
</ul>
</div>
<div id="outline-container-org3eab394" class="outline-4">
<h4 id="org3eab394">&#x5C5E;&#x6027;</h4>
<div class="outline-text-4" id="text-org3eab394">
<ul class="org-ul">
<li>&#x62E5;&#x6709;rvalue&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;&#xFF08;&#x7A0D;&#x540E;&#x4ECB;&#x7ECD;&#xFF09;&#x3002;</li>
<li>prvalue&#x4E0D;&#x5177;&#x5907;<a href="http://en.cppreference.com/w/cpp/language/object#Polymorphic_objects" target="_blank" rel="external">&#x591A;&#x6001;&#x6027;</a>&#xFF1A;&#x5B83;&#x6240;&#x6807;&#x793A;&#x7684;&#x5BF9;&#x8C61;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/type#Dynamic_type" target="_blank" rel="external">&#x52A8;&#x6001;&#x578B;&#x522B;</a>&#x603B;&#x662F;&#x8868;&#x8FBE;&#x5F0F;&#x672C;&#x8EAB;&#x7684;&#x578B;&#x522B;&#x3002;</li>
<li>&#x975E;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x975E;&#x6570;&#x7EC4;&#xFF08;non-class non-array&#xFF09;&#x7684;prvalue&#x4E0D;&#x80FD;&#x88AB;<a href="http://en.cppreference.com/w/cpp/language/cv" target="_blank" rel="external">cv-qualified</a>&#xFF08;&#x4E0D;&#x80FD;&#x5177;&#x5907;const&#x6216;volatile&#x5C5E;&#x6027;&#xFF09;&#x3002;</li>
<li>prvalue&#x4E0D;&#x80FD;&#x4E3A;<a href="http://en.cppreference.com/w/cpp/language/type#Incomplete_type" target="_blank" rel="external">&#x4E0D;&#x5B8C;&#x6574;&#x7684;&#x7C7B;&#x578B;</a>&#xFF08;&#x9664;&#x975E;&#x5B83;&#x662F;void&#x7C7B;&#x578B;&#x6216;&#x51FA;&#x73B0;&#x5728;<a href="http://en.cppreference.com/w/cpp/language/decltype" target="_blank" rel="external">decltype</a>&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#xFF09;&#x3002;</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org83e4bb0" class="outline-3">
<h3 id="xvalue"><a id="org83e4bb0"></a><b>xvalue</b></h3>
<div class="outline-text-3" id="text-xvalue">
<p>
<i>xvalue</i> (&quot;expiring value&quot;)&#x8868;&#x8FBE;&#x5F0F;&#x662F;&#x90A3;&#x4E9B; <i>&#x6709;&#x8EAB;&#x4EFD;</i> &#x4E14; <i>&#x53EF;&#x4EE5;&#x88AB;&#x79FB;&#x52A8;</i> &#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x3002;
</p>

<p>
&#x4EE5;&#x4E0B;&#x8868;&#x8FBE;&#x5F0F;&#x5747;&#x4E3A;xvalue&#x8868;&#x8FBE;&#x5F0F;&#xFF1A;
</p>
<ul class="org-ul">
<li>&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7684;&#x51FD;&#x6570;&#xFF08;&#x7684;&#x8C03;&#x7528;&#xFF09;&#x6216;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x91CD;&#x8F7D;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>std::move(x)</code> &#xFF1B;</li>
<li><code>a[n]</code> &#xFF0C;&#x5185;&#x7F6E;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_subscript_operator" target="_blank" rel="external">&#x53D6;&#x4E0B;&#x6807;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;a&#x4E3A;&#x4E00;&#x4E2A; <code>&#x53F3;&#x503C;&#x6570;&#x7EC4;(until C++17)</code> &#x6216; <code>xvalue&#x6570;&#x7EC4;(since C++17)</code> &#xFF1B;</li>
<li><code>a.m</code> &#xFF0C;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_member_access_operators" target="_blank" rel="external">&#x5BF9;&#x8C61;&#x6210;&#x5458;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;a&#x662F;&#x4E00;&#x4E2A;&#x53F3;&#x503C;&#x4E14;m&#x4E3A;&#x975E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x975E;&#x9759;&#x6001;&#x6570;&#x636E;&#x6210;&#x5458;&#xFF1B;</li>
<li><code>a.*mp</code> &#xFF0C;<a href="http://en.cppreference.com/w/cpp/language/operator_member_access#Built-in_pointer-to-member_access_operators" target="_blank" rel="external">&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x5458;&#x6307;&#x9488;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;a&#x4E3A;&#x53F3;&#x503C;&#xFF08;rvalue&#xFF09;&#x4E14;mp&#x4E3A;&#x6307;&#x5411;&#x6570;&#x636E;&#x6210;&#x5458;&#x7684;&#x6307;&#x9488;&#xFF1B;</li>
<li><code>a ? b : c</code> &#xFF0C;&#x67D0;&#x4E9B;<a href="http://en.cppreference.com/w/cpp/language/operator_other#Conditional_operator" target="_blank" rel="external">&#x4E09;&#x5143;&#x6761;&#x4EF6;</a>&#x8868;&#x8FBE;&#x5F0F;&#xFF1B;</li>
<li>&#x81F3;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7684;&#x8F6C;&#x6362;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; <code>static_cast&lt;char&amp;&amp;&gt;(x)</code> &#x3002;</li>
</ul>
</div>
<div id="outline-container-org299b2d1" class="outline-4">
<h4 id="&#x5C5E;&#x6027;"><a id="org299b2d1"></a>&#x5C5E;&#x6027;</h4>
<div class="outline-text-4" id="text-&#x5C5E;&#x6027;">
<ul class="org-ul">
<li>&#x62E5;&#x6709;rvalue&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;&#xFF08;&#x7A0D;&#x540E;&#x4ECB;&#x7ECD;&#xFF09;&#x3002;</li>
<li>&#x62E5;&#x6709;glvalue&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;&#xFF08;&#x7A0D;&#x540E;&#x4ECB;&#x7ECD;&#xFF09;&#x3002;</li>
</ul>

<p>
&#x6CE8;&#x610F;&#xFF1A;xvalue&#x4E0E;rvalue&#x7C7B;&#x4F3C;&#xFF0C;&#x5B83;&#x7ED1;&#x5B9A;&#x81F3;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x4F46;xvalue&#x4E5F;&#x62E5;&#x6709;glvalue&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x5B83;&#x80FD;&#x88AB;<a href="http://en.cppreference.com/w/cpp/language/object#Polymorphic_objects" target="_blank" rel="external">&#x591A;&#x6001;&#x5316;(polymorphic)</a>&#xFF0C;&#x4E14;&#x975E;&#x5BF9;&#x8C61;&#x7C7B;&#x578B;&#x7684;xvalue&#x4E5F;&#x80FD;&#x88AB;<a href="http://en.cppreference.com/w/cpp/language/cv" target="_blank" rel="external">cv-qualified</a>&#x3002;
</p>
</div>
</div>
</div>
</div>

<div id="outline-container-orgd20cb94" class="outline-2">
<h2 id="mixed-categories"><a id="orgd20cb94"></a>Mixed categories</h2>
<div class="outline-text-2" id="text-mixed-categories">
</div>

<div id="outline-container-orged13b3c" class="outline-3">
<h3 id="glvalue"><a id="orged13b3c"></a><b>glvalue</b></h3>
<div class="outline-text-3" id="text-glvalue">
<p>
<i>glvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#x662F; <i>lvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#x4E0E; <i>xvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x603B;&#x79F0;&#xFF08;&#x5B83;&#x662F;&#x4E00;&#x4E2A; <i>lvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#x6216; <i>xvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#xFF09;&#x3002;&#x5B83; <i>&#x6709;&#x8EAB;&#x4EFD;</i> &#xFF0C;&#x4F46;&#x5728; <i>&#x53EF;&#x79FB;&#x52A8;&#x6027;</i> &#x4E0A;&#x6CA1;&#x6709;&#x786C;&#x6027;&#x89C4;&#x5B9A;&#x3002;
</p>
</div>
<div id="outline-container-org9b28eb3" class="outline-4">
<h4 id="org9b28eb3">&#x5C5E;&#x6027;</h4>
<div class="outline-text-4" id="text-org9b28eb3">
<ul class="org-ul">
<li>glvalue&#x53EF;&#x4EE5;&#x88AB;&#x9690;&#x5F0F;&#x8F6C;&#x6362;&#x4E3A;prvalue&#xFF0C;&#x8FD9;&#x5F52;&#x529F;&#x4E8E;&#x5DE6;&#x503C;&#x81F3;&#x53F3;&#x503C;&#xFF08;lvalue-to-rvalue&#xFF09;&#x3001;&#x6570;&#x7EC4;&#x81F3;&#x6307;&#x9488;&#x3001;&#x51FD;&#x6570;&#x81F3;&#x6307;&#x9488;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/implicit_conversion" target="_blank" rel="external">&#x9690;&#x5F62;&#x8F6C;&#x5316;&#x89C4;&#x5219;</a>&#x3002;</li>
<li>glvalue&#x53EF;&#x4EE5;&#x88AB;<a href="http://en.cppreference.com/w/cpp/language/object#Polymorphic_objects" target="_blank" rel="external">&#x591A;&#x6001;&#x5316;(polymorphic)</a>&#xFF1A; &#x8868;&#x8FBE;&#x5F0F;&#x6807;&#x8BC6;&#x5BF9;&#x8C61;&#x7684;<a href="http://en.cppreference.com/w/cpp/language/type#Dynamic_type" target="_blank" rel="external">&#x52A8;&#x6001;&#x7C7B;&#x578B;&#x6807;&#x8BC6;&#x7B26;</a>&#x5E76;&#x4E0D;&#x603B;&#x662F;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x9759;&#x6001;&#x7C7B;&#x578B;&#x3002;</li>
<li>&#x5728;&#x8868;&#x8FBE;&#x5F0F;&#x5408;&#x6CD5;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;glvalue&#x53EF;&#x4EE5;&#x4E3A;<a href="http://en.cppreference.com/w/cpp/language/type#Incomplete_type" target="_blank" rel="external">&#x4E0D;&#x5B8C;&#x6574;&#x7684;&#x7C7B;&#x578B;</a>&#x3002;</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org3e224a8" class="outline-3">
<h3 id="rvalue"><a id="org3e224a8"></a><b>rvalue</b></h3>
<div class="outline-text-3" id="text-rvalue">
<p>
<i>rvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#x662F; <i>prvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#x548C; <i>xvalue</i> &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x603B;&#x79F0;&#x3002;&#x5B83; <i>&#x80FD;&#x88AB;&#x79FB;&#x52A8;</i> &#xFF0C;&#x4F46;&#x5BF9; <i>&#x8EAB;&#x4EFD;</i> &#x6CA1;&#x6709;&#x786C;&#x6027;&#x89C4;&#x5B9A;&#x3002;&quot;&#x53F3;&#x503C;&quot;&#x8FD9;&#x4E2A;&#x540D;&#x5B57;&#x5177;&#x6709;&#x5386;&#x53F2;&#x6027;&#x7684;&#x610F;&#x4E49;&#xFF0C;&#x5B83;&#x5B8C;&#x7F8E;&#x7684;&#x6807;&#x8BC6;&#x4E86;&#x5B83;&#x5728;CPL&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x4F5C;&#x7528;&#xFF1A;&#x8D4B;&#x503C;&#x8FD0;&#x7B97;&#x7B26;&#x7684;&#x53F3;&#x64CD;&#x4F5C;&#x6570;&#x3002;
</p>
</div>
<div id="outline-container-org20a933f" class="outline-4">
<h4 id="org20a933f">&#x5C5E;&#x6027;</h4>
<div class="outline-text-4" id="text-org20a933f">
<ul class="org-ul">
<li>&#x4E0D;&#x80FD;&#x83B7;&#x53D6;&#x53F3;&#x503C;&#x7684;&#x5730;&#x5740;&#xFF1A; <code>&amp;int()</code> &#x3001; <code>&amp;i++</code> &#x3001; <code>&amp;42</code> &#x548C; <code>&amp;std::move(x)</code> &#x90FD;&#x662F;&#x4E0D;&#x5408;&#x6CD5;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x3002;</li>
<li>&#x4E0D;&#x80FD;&#x88AB;&#x7528;&#x4F5C;&#x5185;&#x7F6E;&#x8D4B;&#x503C;&#x8FD0;&#x7B97;&#x7B26;&#x548C;&#x5185;&#x7F6E;&#x590D;&#x5408;&#x8D4B;&#x503C;&#x8FD0;&#x7B97;&#x7B26;&#x7684;&#x5DE6;&#x64CD;&#x4F5C;&#x6570;&#x3002;</li>
<li>&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;<a href="http://en.cppreference.com/w/cpp/language/reference_initialization" target="_blank" rel="external">&#x521D;&#x59CB;&#x5316;&#x5E38;&#x5DE6;&#x503C;&#x5F15;&#x7528;</a>&#xFF0C;&#x6B64;&#x65F6;&#x8BE5;&#x53F3;&#x503C;&#x6240;&#x6807;&#x8BC6;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x671F;&#x5C06;&#x88AB;&#x5EF6;&#x7EED;&#x81F3;&#x8BE5;&#x5E38;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x7ED3;&#x675F;&#x3002;</li>
<li>&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;<a href="http://en.cppreference.com/w/cpp/language/reference_initialization" target="_blank" rel="external">&#x521D;&#x59CB;&#x5316;&#x53F3;&#x503C;&#x5F15;&#x7528;</a>&#xFF0C;&#x6B64;&#x65F6;&#x8BE5;&#x53F3;&#x503C;&#x6240;&#x6807;&#x8BC6;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x671F;&#x5C06;&#x88AB;&#x5EF6;&#x7EED;&#x81F3;&#x8BE5;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7ED3;&#x675F;&#x3002;(since c++11)</li>
<li>&#x7528;&#x4F5C;&#x51FD;&#x6570;&#x5B9E;&#x53C2;&#x65F6;(arguments)&#xFF0C;&#x82E5;&#x51FD;&#x6570;&#x62E5;&#x6709;<a href="http://en.cppreference.com/w/cpp/language/overload_resolution" target="_blank" rel="external">&#x4E24;&#x4E2A;&#x91CD;&#x8F7D;</a>&#x7248;&#x672C;&#xFF08;&#x4E00;&#x4E2A;&#x4F7F;&#x7528;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x5F62;&#x53C2;&#xFF0C;&#x4E00;&#x4E2A;&#x4F7F;&#x7528;&#x5E38;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x5F62;&#x53C2;&#xFF09;&#xFF0C;&#x8BE5;&#x53F3;&#x503C;&#x5C06;&#x7ED1;&#x5B9A;&#x81F3;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7248;&#x672C;&#x7684;&#x91CD;&#x8F7D;&#x51FD;&#x6570;&#xFF08;&#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x679C;&#x540C;&#x65F6;&#x62E5;&#x6709;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#x53CA;<a href="http://en.cppreference.com/w/cpp/language/move_constructor" target="_blank" rel="external">&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;</a>&#xFF0C;&#x53F3;&#x503C;&#x5B9E;&#x53C2;&#x5C06;&#x4F1A;&#x8C03;&#x7528;&#x79FB;&#x52A8;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x62F7;&#x8D1D;&#x8D4B;&#x503C;&#x51FD;&#x6570;&#x53CA;&#x79FB;&#x52A8;&#x8D4B;&#x503C;&#x51FD;&#x6570;&#x4EA6;&#x662F;&#x5982;&#x6B64;&#xFF09;(since c++11)&#x3002;</li>
</ul>
</div>
</div>
</div>
</div>

<div id="outline-container-org8cf0062" class="outline-2">
<h2 id="special-categories"><a id="org8cf0062"></a>Special categories</h2>
<div class="outline-text-2" id="text-special-categories">
</div>

<div id="outline-container-orgdbca840" class="outline-3">
<h3 id="pending-member-function-call"><a id="orgdbca840"></a><b>Pending member function call</b></h3>
<div class="outline-text-3" id="text-pending-member-function-call">
<p>
&#x4EE5;&#x4E0B;&#x4E24;&#x7EC4;&#x8868;&#x8FBE;&#x5F0F;&#xFF1A; <code>a.mf</code> &#x3001; <code>p-&gt;mf</code> (mf&#x4E3A;<a href="http://en.cppreference.com/w/cpp/language/member_functions" target="_blank" rel="external">&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;</a>) &#x53CA; <code>a.*mfp</code> &#x3001; <code>p-&gt;*mfp</code> (mfp&#x4E3A;<a href="http://en.cppreference.com/w/cpp/language/pointer#Pointers_to_member_functions" target="_blank" rel="external">&#x6307;&#x5411;&#x6210;&#x5458;&#x51FD;&#x6570;&#x7684;&#x6307;&#x9488;</a>)&#x5747;&#x88AB;&#x6807;&#x8BC6;&#x4E3A;prvalue&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F46;&#x5B83;&#x4EEC;&#x4E0D;&#x80FD;&#x88AB;&#x7528;&#x6765;&#x521D;&#x59CB;&#x5316;&#x5F15;&#x7528;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x88AB;&#x7528;&#x4F5C;&#x51FD;&#x6570;&#x5B9E;&#x53C2;&#x6216;&#x5176;&#x5B83;&#x4EFB;&#x4F55;&#x610F;&#x56FE;&#xFF0C;&#x5B83;&#x4EEC;&#x53EA;&#x80FD;&#x88AB;&#x7528;&#x4F5C;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x64CD;&#x4F5C;&#x7B26;&#x7684;&#x5DE6;&#x64CD;&#x4F5C;&#x6570;&#xFF1A; <code>(p-&gt;*mfp)(args)</code> &#x3002;
</p>
</div>
</div>
<div id="outline-container-org9d48dc0" class="outline-3">
<h3 id="void-expressions"><a id="org9d48dc0"></a><b>Void expressions</b></h3>
<div class="outline-text-3" id="text-void-expressions">
<p>
&#x8FD4;&#x56DE;&#x503C;&#x4E3A; <code>void</code> &#x7684;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x8868;&#x8FBE;&#x5F0F;&#x3001;&#x81F3; <code>void</code> &#x7684;&#x8F6C;&#x6362;&#x8868;&#x8FBE;&#x5F0F;&#x53CA;<a href="http://en.cppreference.com/w/cpp/language/throw" target="_blank" rel="external">&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x8868;&#x8FBE;&#x5F0F;</a>&#x5747;&#x88AB;&#x6807;&#x8BC6;&#x4E3A;prvalue&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F46;&#x5B83;&#x4EEC;&#x4E0D;&#x80FD;&#x521D;&#x59CB;&#x5316;&#x5F15;&#x7528;&#x53CA;&#x51FD;&#x6570;&#x5B9E;&#x53C2;&#x3002;&#x5B83;&#x4EEC;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x67D0;&#x4E9B;&#x7A7A;&#x503C;(discarded-value)&#x5185;&#x5BB9;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;&#x4EC5;&#x6709;&#x8BE5;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x3001;&#x9017;&#x53F7;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x5DE6;&#x64CD;&#x4F5C;&#x6570;&#x7B49;&#xFF09;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x4F5C; <code>&#x8FD4;&#x56DE;&#x503C;&#x4E3A;void&#x7684;&#x51FD;&#x6570;</code> &#x7684;&#x8FD4;&#x56DE;&#x503C;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x8868;&#x8FBE;&#x5F0F;&#x4E5F;&#x53EF;&#x4F5C;&#x4E3A;<a href="http://en.cppreference.com/w/cpp/language/operator_other" target="_blank" rel="external">&#x95EE;&#x53F7;&#x6761;&#x4EF6;&#x64CD;&#x4F5C;&#x7B26;&#xFF08; <b>?</b> &#xFF09;</a>&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x6216;&#x7B2C;&#x4E09;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x3002;
</p>
</div>
</div>

<div id="outline-container-org2e166ba" class="outline-3">
<h3 id="bit-fields"><a id="org2e166ba"></a><b>Bit fields</b></h3>
<div class="outline-text-3" id="text-bit-fields">
<p>
<a href="http://en.cppreference.com/w/cpp/language/bit_field" target="_blank" rel="external">&#x4F4D;&#x57DF;</a>&#x64CD;&#x4F5C;&#x8868;&#x8FBE;&#x5F0F;&#xFF08;&#x4F8B;&#x5982;&#xFF1A; <code>a.m</code> &#xFF0C;&#x5F53;a&#x4E3A; <code>struct A { int m: 3;}</code> &#x7684;&#x5DE6;&#x503C;&#x65F6;&#xFF09;&#x4E3A;lvalue&#x8868;&#x8FBE;&#x5F0F;&#xFF1A;&#x5B83;&#x53EF;&#x4EE5;&#x7528;&#x4F5C;&#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#x7B26;&#x7684;&#x5DE6;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x4F46;&#x5B83;&#x4E0D;&#x80FD;&#x88AB;&#x53D6;&#x5730;&#x5740;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x88AB;&#x7ED1;&#x5B9A;&#x81F3;&#x975E;&#x5E38;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x3002;&#x5E38;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x867D;&#x7136;&#x53EF;&#x4EE5;&#x88AB;&#x4F4D;&#x57DF;&#x5DE6;&#x503C;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x4F46;&#x5B83;&#x53EA;&#x662F;&#x7ED1;&#x5B9A;&#x4E86;&#x8BE5;&#x4F4D;&#x57DF;&#x7684;&#x4E34;&#x65F6;&#x62F7;&#x8D1D;&#x5BF9;&#x8C61;&#xFF0C;&#x4F60;&#x65E0;&#x6CD5;&#x5C06;&#x4F4D;&#x57DF;&#x76F4;&#x63A5;&#x7ED1;&#x5B9A;&#x81F3;&#x5F15;&#x7528;&#x3002;
</p>
</div>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
general lvalue
</p></div></div>

<div class="footdef"><sup><a id="fn.2" class="footnum" href="#fnr.2">2</a></sup> <div class="footpara"><p class="footpara">
pure rvalue
</p></div></div>

<div class="footdef"><sup><a id="fn.3" class="footnum" href="#fnr.3">3</a></sup> <div class="footpara"><p class="footpara">
expiring value
</p></div></div>

<div class="footdef"><sup><a id="fn.4" class="footnum" href="#fnr.4">4</a></sup> <div class="footpara"><p class="footpara">
i&#x662F;&#x5185;&#x7F6E;&#x7C7B;&#x578B;&#x6216;&#x91CD;&#x8F7D;&#x7684;&#x524D;&#x7F6E;&#x81EA;&#x589E;&#x8FD0;&#x7B97;&#x7B26;&#x8FD4;&#x56DE;&#x5DE6;&#x503C;&#x5F15;&#x7528;
</p></div></div>

<div class="footdef"><sup><a id="fn.5" class="footnum" href="#fnr.5">5</a></sup> <div class="footpara"><p class="footpara">
special rvalue category, see pending member function call
</p></div></div>

<div class="footdef"><sup><a id="fn.6" class="footnum" href="#fnr.6">6</a></sup> <div class="footpara"><p class="footpara">
special rvalue category, see pending member function call
</p></div></div>

<div class="footdef"><sup><a id="fn.7" class="footnum" href="#fnr.7">7</a></sup> <div class="footpara"><p class="footpara">
special rvalue category, see pending member function call
</p></div></div>

<div class="footdef"><sup><a id="fn.8" class="footnum" href="#fnr.8">8</a></sup> <div class="footpara"><p class="footpara">
special rvalue category, see pending member function call
</p></div></div>


</div>
</div></div>
<div id="postamble" class="status">
<div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;">Last Updated 2017-08-07 Mon 04:12. <br><a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 9.0.9)</div>
</div>
]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
&amp;#x7FFB;&amp;#x8BD1;&amp;#x81F3;&lt;a href=&quot;http://en.cppreference.com/w/cpp/language/value_category&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cppreference&lt;/a&gt;&amp;#x3001;&lt;a href=&quot;http://en.cppreference.com/mwiki/index.php?title=cpp/language/value_category&amp;amp;oldid=85137&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cppreference&lt;/a&gt;&amp;#xFF0C;&amp;#x5E76;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x4E86;&amp;#x6574;&amp;#x5408;&amp;#x3002;(&amp;#x867D;&amp;#x7136;&amp;#x6211;&amp;#x5E76;&amp;#x4E0D;&amp;#x660E;&amp;#x767D;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x7F51;&amp;#x7AD9;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#x2026;)
&lt;/p&gt;

&lt;p&gt;
&amp;#x6BCF;&amp;#x4E00;&amp;#x4E2A;C++&lt;a href=&quot;http://en.cppreference.com/w/cpp/language/expressions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&lt;/a&gt;&amp;#xFF08;&amp;#x6709;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x7684;&amp;#x8FD0;&amp;#x7B97;&amp;#x7B26;&amp;#x3001;&amp;#x5B57;&amp;#x9762;&amp;#x503C;&amp;#x3001;&amp;#x53D8;&amp;#x91CF;&amp;#x540D;&amp;#x7B49;&amp;#xFF09;&amp;#x90FD;&amp;#x88AB;&amp;#x8D4B;&amp;#x4E88;&amp;#x4E24;&amp;#x79CD;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#xFF1A;&amp;#x578B;&amp;#x522B;&amp;#x548C;&amp;#x503C;&amp;#x7C7B;&amp;#x578B;&amp;#xFF08;value categories&amp;#xFF09;&amp;#x3002;&amp;#x6BCF;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x90FD;&amp;#x6709;&amp;#x4E00;&amp;#x4E9B;&amp;#x975E;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x4E14;&amp;#x5F52;&amp;#x5C5E;&amp;#x4E0E;&amp;#x4EE5;&amp;#x4E0B;&amp;#x4E09;&amp;#x79CD;&amp;#x503C;&amp;#x7C7B;&amp;#x578B;&amp;#x4E2D;&amp;#x7684;&amp;#x4E00;&amp;#x79CD;&amp;#xFF1A;prvalue&amp;#x3001;xvalue&amp;#x3001;lvalue&amp;#x3002;&amp;#x5B83;&amp;#x4EEC;&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;
&lt;/p&gt;
    
    </summary>
    
      <category term="Translation" scheme="http://paruka.me/categories/Translation/"/>
    
      <category term="cppreference" scheme="http://paruka.me/categories/Translation/cppreference/"/>
    
    
      <category term="cppreference" scheme="http://paruka.me/tags/cppreference/"/>
    
  </entry>
  
  <entry>
    <title>条款2：理解auto类型推导</title>
    <link href="http://paruka.me/translation/effective_modern_cpp/item2.html"/>
    <id>http://paruka.me/translation/effective_modern_cpp/item2.html</id>
    <published>2016-10-17T14:02:00.000Z</published>
    <updated>2017-08-06T18:42:09.625Z</updated>
    
    <content type="html"><![CDATA[<div id="content">
<p>
&#x5982;&#x679C;&#x4F60;&#x5DF2;&#x7ECF;&#x9605;&#x8BFB;&#x4E86;<a href="./item1.html">&#x6761;&#x6B3E;1</a>&#x4E2D;&#x5173;&#x4E8E;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x76F8;&#x5173;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4F60;&#x5E94;&#x8BE5;&#x5DF2;&#x7ECF;&#x638C;&#x63E1;&#x4E86;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;&#x5173;&#x4E8E;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x76F8;&#x5173;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0E;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x76F8;&#x6BD4;&#xFF0C;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x4F8B;&#x5916;&#x3002;&#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x6D89;&#x53CA;&#x4E86;&#x6A21;&#x677F;&#x3001;&#x51FD;&#x6570;&#x548C;&#x53C2;&#x6570;&#xFF0C;&#x4F46;auto&#x5E76;&#x4E0D;&#x5173;&#x5FC3;&#x90A3;&#x4E9B;&#x4E1C;&#x897F;&#x3002;
</p>

<p>
&#x662F;&#x7684;&#xFF0C;&#x4F46;&#x8FD9;&#x65E0;&#x6240;&#x8C13;&#x3002;&#x5728;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4E0E;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4E4B;&#x95F4;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x76F4;&#x63A5;&#x7684;&#x6620;&#x5C04;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x5C06;&#x4ED6;&#x4EEC;&#x4E92;&#x76F8;&#x8F6C;&#x5316;&#x3002;
</p>
<a id="more"></a>

<p>
&#x5728;<a href="./item1.html">&#x6761;&#x6B3E;1</a>&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x5BF9;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x8FDB;&#x884C;&#x8BB2;&#x89E3;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(ParamType param)</span></span>;</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5E76;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x65B9;&#x5F0F;&#x8C03;&#x7528;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(expr);                <span class="comment">// call f with some expression</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5BF9;&#x4E8E;&#x51FD;&#x6570;f&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F7F;&#x7528;expr&#x6765;&#x63A8;&#x5BFC;T&#x548C;ParamType&#x7684;&#x7C7B;&#x578B;&#x3002;
</p>

<p>
&#x5F53;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x88AB;&#x58F0;&#x660E;&#x4E3A;auto&#xFF0C;auto&#x4FBF;&#x76F8;&#x5F53;&#x4E0E;&#x6A21;&#x677F;&#x4E2D;&#x7684;T&#xFF0C;&#x800C;&#x53D8;&#x91CF;&#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x7B26;<sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup>&#x76F8;&#x5F53;&#x4E0E;ParamType&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x603B;&#x6BD4;&#x53E3;&#x5934;&#x63CF;&#x8FF0;&#x66F4;&#x4E3A;&#x6E05;&#x6670;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x4E3E;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> x = <span class="number">27</span>;</span><br></pre></td></tr></table></figure>
</div>

<p>
x&#x7684;&#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x7B26;&#x5C31;&#x662F;auto&#x672C;&#x8EAB;&#x3002;&#x800C;&#x5BF9;&#x4E8E;&#x5982;&#x4E0B;&#x58F0;&#x660E;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">auto</span> cx = x;</span><br></pre></td></tr></table></figure>
</div>

<p>
x&#x7684;&#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x7B26;&#x662F;const auto&#x3002;&#x82E5;&#x5C06;&#x58F0;&#x660E;&#x7A0D;&#x4F5C;&#x4FEE;&#x6539;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">auto</span>&amp; rx = x;</span><br></pre></td></tr></table></figure>
</div>

<p>
x&#x7684;&#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x7B26;&#x4FBF;&#x53D8;&#x6210;&#x4E86;const auto&amp;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x4E8E;&#x5982;&#x4E0A;&#x4F8B;&#x5B50;&#x4E2D;x&#xFF0C;cx&#x548C;rx&#x7684;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x8868;&#x73B0;&#x7684;&#x5C31;&#x50CF;&#x662F;&#x5728;&#x7528;&#x76F8;&#x5E94;&#x7684;&#x521D;&#x59CB;&#x5316;&#x8868;&#x8FBE;&#x5F0F;&#x5BF9;&#x67D0;&#x4E00;&#x51FD;&#x6570;&#x6A21;&#x677F;&#x8FDB;&#x884C;&#x8C03;&#x7528;&#x4E00;&#x6837;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">teamplate&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func_for_x</span><span class="params">(T param)</span></span>;   <span class="comment">// conceptual template for</span></span><br><span class="line">			    <span class="comment">// deducing x&apos;s type</span></span><br><span class="line"></span><br><span class="line">func_for_x(<span class="number">27</span>);             <span class="comment">// conceptual call: param&apos;s</span></span><br><span class="line">			    <span class="comment">// deduced type is x&apos;s type</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func_for_cx</span><span class="params">(<span class="keyword">const</span> T param)</span></span>;   <span class="comment">// conceptual template for</span></span><br><span class="line">				   <span class="comment">// deducing cx&apos;s type</span></span><br><span class="line"></span><br><span class="line">func_for_cx(x);                    <span class="comment">// conceptual call: param&apos;s</span></span><br><span class="line">				   <span class="comment">// deduced type is cx&apos;s type</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func_for_rx</span><span class="params">(<span class="keyword">const</span> T&amp; param)</span></span>;  <span class="comment">// conceptual template for</span></span><br><span class="line">				   <span class="comment">// deducing rx&apos;s type</span></span><br><span class="line"></span><br><span class="line">func_for_rx(x);                    <span class="comment">// conceptual call: param&apos;s</span></span><br><span class="line">				   <span class="comment">// deduced type is rx&apos;s type</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x8FD9;&#x6B63;&#x5982;&#x6211;&#x4E4B;&#x524D;&#x6240;&#x8BC9;&#xFF0C;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4E0E;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x53EA;&#x6709;&#x5728;&#x67D0;&#x4E00;&#x7279;&#x6B8A;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x663E;&#x4E0D;&#x540C;&#xFF08;&#x6211;&#x4EEC;&#x5373;&#x5C06;&#x8BA8;&#x8BBA;&#xFF09;&#x3002;
</p>

<p>
<a href="./item1.html">&#x6761;&#x6B3E;1</a>&#x5C06;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x4F9D;ParamType&#xFF08;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x5F62;&#x53C2;&#x7684;&#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x7B26;&#xFF09;&#x5206;&#x4E3A;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x3002;&#x800C;&#x5728;auto&#x53D8;&#x91CF;&#x58F0;&#x660E;&#x4E2D;&#xFF0C;&#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x7B26;&#x76F8;&#x5F53;&#x4E0E;ParamType&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x6709;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;
</p>

<ul class="org-ul">
<li>&#x60C5;&#x5F62;1&#xFF1A; &#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x7B26;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x6216;&#x5F15;&#x7528;&#xFF0C;&#x4F46;&#x4E0D;&#x662F;&#x901A;&#x7528;&#x5F15;&#x7528;<sup><a id="fnr.2" class="footref" href="#fn.2">2</a></sup>&#x3002;</li>
<li>&#x60C5;&#x5F62;2&#xFF1A; &#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x7B26;&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x3002;</li>
<li>&#x60C5;&#x5F62;3&#xFF1A; &#x7C7B;&#x578B;&#x63CF;&#x8FF0;&#x7B26;&#x4E0D;&#x662F;&#x5F15;&#x7528;&#x4E5F;&#x4E0D;&#x662F;&#x6307;&#x9488;&#x3002;</li>
</ul>

<p>
&#x6211;&#x4EEC;&#x4E4B;&#x524D;&#x5DF2;&#x7ECF;&#x770B;&#x8FC7;&#x60C5;&#x5F62;1&#x548C;&#x60C5;&#x5F62;3&#x7684;&#x4F8B;&#x5B50;&#x4E86;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> x = <span class="number">27</span>;            <span class="comment">// case 3 (x is neither ptr nor reference)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">auto</span> x = x;       <span class="comment">// case 3 (cx is&apos;t either)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">auto</span>&amp; rx = x;     <span class="comment">// cast 1 (rx is a non-universal ref.)</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5F53;&#x7136;&#xFF0C;&#x60C5;&#x5F62;2&#x4E5F;&#x5982;&#x4F60;&#x6240;&#x6599;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span>&amp;&amp; uref1 = x;       <span class="comment">// x is int and and lvalue,</span></span><br><span class="line">			<span class="comment">// so uref1&apos;s type is int&amp;.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span>&amp;&amp; uref2 = cx;      <span class="comment">// cx is const int and lvalue,</span></span><br><span class="line">			<span class="comment">// so uref2&apos;s type is const int&amp;.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span>&amp;&amp; uref3 = <span class="number">27</span>;      <span class="comment">// 27 is in and rvalue,</span></span><br><span class="line">			<span class="comment">// so uref3&apos;s type is int&amp;&amp;</span></span><br></pre></td></tr></table></figure>
</div>

<p>
<a href="./item1.html">&#x6761;&#x6B3E;1</a>&#x4E2D;&#x8BB2;&#x5230;&#xFF0C;&#x6570;&#x7EC4;&#x548C;&#x51FD;&#x6570;&#x5728;&#x4F20;&#x9012;&#x7ED9;&#x975E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x5F62;&#x53C2;&#x65F6;&#x4F1A;&#x9000;&#x5316;&#x4E3A;&#x76F8;&#x5E94;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x6B64;&#x89C4;&#x5219;&#x5BF9;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x540C;&#x6837;&#x9002;&#x7528;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> name[] = <span class="string">&quot;R. N. Briggs&quot;</span>;  <span class="comment">// name&apos;s type is const char[13]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> arr1 = name;       <span class="comment">// arr1&apos;s type is const* char</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span>&amp; arr2 = name;      <span class="comment">// arr2&apos;s type is const char (&amp;)[13]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">someFunc</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">double</span>)</span></span>;   <span class="comment">// someFunc is a function;</span></span><br><span class="line">			      <span class="comment">// type is void (int, double)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> func1 = someFunc;        <span class="comment">// func1&apos;s type is void (*)(int, double)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span>&amp; func2 = soneFunc;       <span class="comment">// func2&apos;s type is void(&amp;)(int, double)</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5982;&#x4F60;&#x6240;&#x89C1;&#xFF0C;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4E0E;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#xFF0C;&#x5B83;&#x4EEC;&#x6070;&#x5982;&#x4E00;&#x679A;&#x94F6;&#x5E01;&#x7684;&#x6B63;&#x53CD;&#x4E24;&#x9762;&#x3002;
</p>

<p>
&#x4F46;&#x6709;&#x4E00;&#x4E2A;&#x4F8B;&#x5916;&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x4ECE;&#x4EE5;&#x4E0B;&#x60C5;&#x51B5;&#x5F00;&#x59CB;&#x6162;&#x6162;&#x5206;&#x6790;&#xFF1A;&#x82E5;&#x7528;27&#x521D;&#x59CB;&#x5316;&#x58F0;&#x660E;&#x4E00;&#x4E2A;int&#x53D8;&#x91CF;&#xFF0C;C++98&#x6709;&#x4EE5;&#x4E0B;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x3 = <span class="number">27</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">x4</span><span class="params">(<span class="number">27</span>)</span></span>;</span><br></pre></td></tr></table></figure>
</div>

<p>
C++11&#x5219;&#x63D0;&#x4F9B;&#x4E86;&#x7EDF;&#x4E00;&#x521D;&#x59CB;&#x5316;<sup><a id="fnr.3" class="footref" href="#fn.3">3</a></sup>&#x652F;&#x6301;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x3 = { <span class="number">27</span> }:</span><br><span class="line"><span class="keyword">int</span> x4{ <span class="number">27</span> }:</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5F53;&#x7136;&#xFF0C;&#x8FD9;&#x56DB;&#x884C;&#x4EE3;&#x7801;&#x7ED3;&#x679C;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x58F0;&#x660E;&#x4E86;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x503C;&#x4E3A;27&#x7684;&#x6574;&#x6570;&#x3002;
</p>

<p>
&#x6B63;&#x5982;<a href="./item5.html">&#x6761;&#x6B3E;5</a>&#x6240;&#x8BC9;&#xFF0C;&#x7528;auto&#x58F0;&#x660E;&#x53D8;&#x91CF;&#x6BD4;&#x901A;&#x8FC7;&#x5199;&#x51FA;&#x786E;&#x5B9A;&#x7684;&#x7C7B;&#x578B;&#x6765;&#x58F0;&#x660E;&#x53D8;&#x91CF;&#x66F4;&#x5177;&#x4F18;&#x52BF;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x4EE5;&#x4E0A;&#x53D8;&#x91CF;&#x58F0;&#x660E;&#x4E2D;&#xFF0C;&#x5C06;int&#x66FF;&#x6362;&#x4E3A;auto&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x660E;&#x667A;&#x7684;&#x505A;&#x6CD5;&#x3002;&#x66FF;&#x6362;&#x540E;&#x7684;&#x58F0;&#x660E;&#x5982;&#x4E0B;&#xFF1A;
</p>

<pre class="example">
auto x1 = 27;
auto x2(x1);
auto x3 = { 27 };
auto x4{ 27 };</pre>

<p>
&#x53EF;&#x662F;&#xFF0C;&#x66FF;&#x6362;&#x540E;&#x7684;&#x58F0;&#x660E;&#x867D;&#x7136;&#x90FD;&#x80FD;&#x7F16;&#x8BD1;&#x901A;&#x8FC7;&#xFF0C;&#x5374;&#x62E5;&#x6709;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x542B;&#x4E49;&#x3002;&#x524D;&#x4E24;&#x6761;&#x8BED;&#x53E5;&#x4F9D;&#x65E7;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x503C;&#x4E3A;27&#x7684;&#x6574;&#x6570;&#xFF0C;&#x4F46;&#x540E;&#x4E24;&#x6761;&#x8BED;&#x53E5;&#x58F0;&#x660E;&#x7684;&#x5374;&#x662F;&#x4E00;&#x4E2A;&#x4EC5;&#x6709;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF08;27&#xFF09;&#x7684;std::initializer_list&lt;int&gt;&#xFF01;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> x1 = <span class="number">27</span>;           <span class="comment">// type is int, value is 27</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">auto</span> <span class="title">x2</span><span class="params">(<span class="number">27</span>)</span></span>;            <span class="comment">// ditto</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> x3 = { <span class="number">27</span> };       <span class="comment">// type is std::initializer_list&lt;int&gt;,</span></span><br><span class="line">			<span class="comment">// value is { 27 }</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> x4{ <span class="number">27</span> };         <span class="comment">// ditto</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x8FD9;&#x662F;&#x7531;auto&#x7684;&#x4E00;&#x6761;&#x7279;&#x6B8A;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x51B3;&#x5B9A;&#x7684;&#x3002;&#x5F53;&#x4E00;&#x4F7F;&#x7528;auto&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x4F7F;&#x7528;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#xFF08;&#x88AB;{}&#x5305;&#x56F4;&#xFF09;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#x65F6;&#xFF0C;&#x5B83;&#x5C06;&#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;std::initializer_list&#x3002;&#x5982;&#x679C;&#x8BE5;&#x7C7B;&#x578B;&#x4E0D;&#x80FD;&#x88AB;&#x63A8;&#x5BFC;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x91CC;&#x7684;&#x5143;&#x7D20;&#x62E5;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x7C7B;&#x578B;&#xFF09;&#xFF0C;&#x4EE3;&#x7801;&#x5C06;&#x4E0D;&#x80FD;&#x7F16;&#x8BD1;&#x901A;&#x8FC7;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> x5 = { <span class="number">1</span>, <span class="number">2</span>, <span class="number">3.0</span> };  <span class="comment">// error! can&apos;t deduce T for</span></span><br><span class="line">			  <span class="comment">// std::initializer_list&lt;T&gt;</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6B63;&#x5982;&#x6CE8;&#x91CA;&#x6240;&#x8BC9;&#xFF0C;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x5C06;&#x4F1A;&#x5931;&#x8D25;&#xFF0C;&#x4F46;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x610F;&#x8BC6;&#x5230;&#x5B83;&#x5176;&#x5B9E;&#x89E6;&#x53D1;&#x4E86;&#x4E24;&#x6761;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#xFF0C;&#x5176;&#x4E00;&#x662F;&#x7F18;&#x4E8E;auto&#x7684;&#x4F7F;&#x7528;&#xFF1A;&#x7531;&#x4E8E;x5&#x4F7F;&#x7528;&#x4E86;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#xFF0C;&#x5B83;&#x5FC5;&#x987B;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;std::initializer_list&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x4F46;std::initializer_list&lt;T&gt;&#x662F;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x7F16;&#x8BD1;&#x5668;&#x5FC5;&#x987B;&#x8981;&#x63A8;&#x5BFC;T&#x7684;&#x7C7B;&#x578B;&#x3002;&#x56E0;&#x6B64;&#x4FBF;&#x89E6;&#x53D1;&#x4E86;&#x7B2C;&#x4E8C;&#x6761;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x3002;&#x4F46;&#x7531;&#x4E8E;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x53D8;&#x91CF;&#x7C7B;&#x578B;&#x5E76;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x63A8;&#x5BFC;&#x5931;&#x8D25;&#x3002;
</p>

<p>
&#x5728;auto&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x4E2D;&#x4F7F;&#x7528;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#xFF0C;&#x662F;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4E0E;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x7684;&#x552F;&#x4E00;&#x4E0D;&#x540C;&#x3002;&#x6B64;&#x65F6;&#x8BE5;&#x53D8;&#x91CF;&#x5C06;&#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;std::initializer_list&#x3002;&#x4F46;&#x5C06;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x4F20;&#x7ED9;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x5374;&#x662F;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x7684;&#x884C;&#x4E3A;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> x = { <span class="number">11</span>, <span class="number">23</span>, <span class="number">9</span> };    <span class="comment">// x&apos;s type is</span></span><br><span class="line">			   <span class="comment">// std::initializer_list&lt;int&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;       <span class="comment">// template with parameter</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T param)</span></span>;           <span class="comment">// declaration equivalent to</span></span><br><span class="line">			   <span class="comment">// x&apos;s declaration</span></span><br><span class="line"></span><br><span class="line">f({ <span class="number">11</span>, <span class="number">23</span>, <span class="number">9</span>});           <span class="comment">// error! can&apos;t deduce type for T</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x7136;&#x800C;&#xFF0C;&#x5982;&#x679C;&#x5C06;&#x6A21;&#x677F;&#x7684;&#x53C2;&#x6570;&#x58F0;&#x660E;&#x4E3A;&#x67D0;&#x4E00;&#x7C7B;&#x578B;T&#x7684;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#xFF08;std::initializer_list&lt;T&gt;&#xFF09;&#xFF0C;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x5C06;&#x80FD;&#x6B63;&#x786E;&#x7684;&#x63A8;&#x5BFC;&#x51FA;T&#x7684;&#x7C7B;&#x578B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="built_in">std</span>::initialer_list&lt;T&gt; initList)</span></span>;</span><br><span class="line"></span><br><span class="line">f({ <span class="number">11</span>, <span class="number">23</span>, <span class="number">9</span>});           <span class="comment">// T deduced as int, and initList&apos;s</span></span><br><span class="line">			   <span class="comment">// type is std::initializer_list&lt;int&gt;</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6240;&#x4EE5;&#xFF0C;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x4E0E;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x552F;&#x4E00;&#x7684;&#x533A;&#x522B;&#x4FBF;&#x662F;&#xFF0C;auto&#x4F1A;&#x5C06;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x63A8;&#x5BFC;&#x4E3A;std::initializer_list&#xFF0C;&#x8FD9;&#x662F;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x6240;&#x4E0D;&#x5177;&#x5907;&#x7684;&#x80FD;&#x529B;&#x3002;
</p>

<p>
&#x4F60;&#x6216;&#x8BB8;&#x60F3;&#x77E5;&#x9053;&#x4E3A;&#x4F55;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4F1A;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x6761;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x6240;&#x6CA1;&#x6709;&#x7684;&#x7279;&#x6B8A;&#x89C4;&#x5219;&#x3002;&#x867D;&#x7136;&#x6211;&#x4E5F;&#x60F3;&#x77E5;&#x9053;&#xFF0C;&#x4F46;&#x9057;&#x61BE;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x81EA;&#x5DF1;&#x4E5F;&#x6CA1;&#x6709;&#x627E;&#x7684;&#x4E00;&#x4E2A;&#x4EE4;&#x4EBA;&#x4FE1;&#x670D;&#x7684;&#x89E3;&#x91CA;&#x3002;&#x4F46;&#x89C4;&#x5219;&#x5C31;&#x662F;&#x89C4;&#x5219;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x8981;&#x8BB0;&#x4F4F;&#xFF1A;
&#x5728;&#x7528;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;auto&#x53D8;&#x91CF;&#x65F6;&#xFF0C;&#x63A8;&#x5BFC;&#x51FA;&#x7684;&#x7C7B;&#x578B;&#x662F;std::initializer_list&#x3002;&#x7279;&#x522B;&#x662F;&#x5728;&#x4F60;&#x62E5;&#x62B1;&#x7EDF;&#x4E00;&#x521D;&#x59CB;&#x5316;&#x54F2;&#x5B66;&#xFF08;&#x5C06;&#x521D;&#x59CB;&#x503C;&#x7528;&#x5927;&#x62EC;&#x53F7;&#x6269;&#x8D77;&#x6765;&#xFF09;&#x65F6;&#xFF0C;&#x8FD9;&#x70B9;&#x5C24;&#x4E3A;&#x91CD;&#x8981;&#x3002;C++11&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x5E38;&#x89C1;&#x9519;&#x8BEF;&#x5C31;&#x662F;&#x610F;&#x5916;&#x7684;&#x58F0;&#x660E;&#x4E86;&#x4E00;&#x4E2A;std::initializer_list&#xFF0C;&#x8FD9;&#x4E00;&#x9677;&#x9631;&#x5BFC;&#x81F4;&#x8BB8;&#x591A;&#x7A0B;&#x5E8F;&#x5458;&#x53EA;&#x5728;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x5019;&#x624D;&#x4F1A;&#x4F7F;&#x7528;&#x5927;&#x62EC;&#x53F7;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#x3002;&#xFF08;&#x6211;&#x4EEC;&#x5C06;&#x5728;<a href="./item7.html">&#x6761;&#x6B3E;7</a>&#x4E2D;&#x8BA8;&#x8BBA;&#x4F55;&#x65F6;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x5927;&#x62EC;&#x53F7;&#xFF09;
</p>

<p>
&#x5BF9;&#x4E8E;C++11&#x7684;auto&#x6765;&#x8BF4;&#xFF0C;&#x5DF2;&#x7ECF;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x89C4;&#x5219;&#x53EF;&#x4EE5;&#x8BB2;&#x8FF0;&#x4E86;&#xFF0C;&#x4F46;&#x5728;&#x6700;&#x65B0;&#x7684;C++14&#x6807;&#x51C6;&#x4E2D;&#xFF0C;&#x5374;&#x8FD8;&#x6709;&#x5185;&#x5BB9;&#x9700;&#x8981;&#x8865;&#x5145;&#x3002;C++14&#x5141;&#x8BB8;&#x4F7F;&#x7528;auto&#x5173;&#x952E;&#x5B57;&#x6807;&#x660E;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#x9700;&#x8981;&#x88AB;&#x63A8;&#x5BFC;&#xFF08;&#x53C2;&#x8003;<a href="./item3.html">&#x6761;&#x6B3E;3</a>&#xFF09;&#xFF0C;&#x4E5F;&#x5141;&#x8BB8;&#x5728;lambda&#x51FD;&#x6570;&#x4E2D;&#x4F7F;&#x7528;auto&#x58F0;&#x660E;&#x53C2;&#x6570;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x8FD9;&#x4E9B;&#x5BF9;&#x4E8E;auto&#x7684;&#x7279;&#x6B8A;&#x4F7F;&#x7528;&#x6240;&#x89E6;&#x53D1;&#x7684;&#x90FD;&#x662F;&#x6A21;&#x677F;&#x7684;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#xFF0C;&#x800C;&#x4E0D;&#x662F;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5728;&#x4E00;&#x4E2A;&#x58F0;&#x660E;&#x4E3A;auto&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x51FD;&#x6570;&#x4E2D;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x5C06;&#x4F1A;&#x7F16;&#x8BD1;&#x5931;&#x8D25;&#xFF1A;
</p>

<pre class="example">
auto createInitList()
{
    return { 1, 2, 3 };     // error: can&apos;t deduce type
                            // for { 1, 2, 3 }
}</pre>

<p>
&#x5F53;&#x7136;&#xFF0C;&#x5411;lambda&#x51FD;&#x6570;&#x7684;auto&#x53C2;&#x6570;&#x4F20;&#x9012;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x7F16;&#x8BD1;&#x901A;&#x8FC7;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> resetV =</span><br><span class="line">    [&amp;v](<span class="keyword">const</span> <span class="keyword">auto</span>&amp; newValue) { v = newValue; }; <span class="comment">// C++14</span></span><br><span class="line"></span><br><span class="line">resetV({ <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> });       <span class="comment">// error! can&apos;t deduce type</span></span><br><span class="line">			   <span class="comment">// for { 1, 2, 3 }</span></span><br></pre></td></tr></table></figure>
</div>

<div id="outline-container-org99e5142" class="outline-2">
<h2 id="&#x8BB0;&#x4F4F;"><a id="org99e5142"></a>&#x8BB0;&#x4F4F;&#xFF1A;</h2>
<div class="outline-text-2" id="text-&#x8BB0;&#x4F4F;">
<ul class="org-ul">
<li>auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x901A;&#x5E38;&#x4E0E;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x5B83;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x6240;&#x4E0D;&#x5177;&#x5907;&#x7684;&#x80FD;&#x529B;&#xFF1A;&#x5C06;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x63A8;&#x5BFC;&#x4E3A;std::initializer_list&#x3002;</li>
<li>&#x5F53;auto&#x4F5C;&#x4E3A;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x6216;lambda&#x7684;&#x53C2;&#x6570;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#xFF0C;&#x800C;&#x4E0D;&#x662F;auto&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x3002;</li>
</ul>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
type specifier.
</p></div></div>

<div class="footdef"><sup><a id="fn.2" class="footnum" href="#fnr.2">2</a></sup> <div class="footpara"><p class="footpara">
universal reference.
</p></div></div>

<div class="footdef"><sup><a id="fn.3" class="footnum" href="#fnr.3">3</a></sup> <div class="footpara"><p class="footpara">
uniform initialization.
</p></div></div>


</div>
</div></div>
<div id="postamble" class="status">
<div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;">Last Updated 2017-08-07 Mon 04:12. <br><a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 9.0.9)</div>
</div>
]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x9605;&amp;#x8BFB;&amp;#x4E86;&lt;a href=&quot;./item1.html&quot;&gt;&amp;#x6761;&amp;#x6B3E;1&lt;/a&gt;&amp;#x4E2D;&amp;#x5173;&amp;#x4E8E;&amp;#x6A21;&amp;#x677F;&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#xFF0C;&amp;#x4F60;&amp;#x5E94;&amp;#x8BE5;&amp;#x5DF2;&amp;#x7ECF;&amp;#x638C;&amp;#x63E1;&amp;#x4E86;&amp;#x51E0;&amp;#x4E4E;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x5173;&amp;#x4E8E;auto&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x77E5;&amp;#x8BC6;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x4E0E;&amp;#x6A21;&amp;#x677F;&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&amp;#x89C4;&amp;#x5219;&amp;#x76F8;&amp;#x6BD4;&amp;#xFF0C;auto&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&amp;#x89C4;&amp;#x5219;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5916;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x5462;&amp;#xFF1F;&amp;#x56E0;&amp;#x4E3A;&amp;#x6A21;&amp;#x677F;&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&amp;#x6D89;&amp;#x53CA;&amp;#x4E86;&amp;#x6A21;&amp;#x677F;&amp;#x3001;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x4F46;auto&amp;#x5E76;&amp;#x4E0D;&amp;#x5173;&amp;#x5FC3;&amp;#x90A3;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;
&lt;/p&gt;

&lt;p&gt;
&amp;#x662F;&amp;#x7684;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x65E0;&amp;#x6240;&amp;#x8C13;&amp;#x3002;&amp;#x5728;&amp;#x6A21;&amp;#x677F;&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&amp;#x4E0E;auto&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&amp;#x4E4B;&amp;#x95F4;&amp;#xFF0C;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x76F4;&amp;#x63A5;&amp;#x7684;&amp;#x6620;&amp;#x5C04;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x4E00;&amp;#x79CD;&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E92;&amp;#x76F8;&amp;#x8F6C;&amp;#x5316;&amp;#x3002;
&lt;/p&gt;
    
    </summary>
    
      <category term="Translation" scheme="http://paruka.me/categories/Translation/"/>
    
      <category term="Effective Modern C++" scheme="http://paruka.me/categories/Translation/Effective-Modern-C/"/>
    
    
      <category term="Effective Modern C++" scheme="http://paruka.me/tags/Effective-Modern-C/"/>
    
      <category term="Press Ban" scheme="http://paruka.me/tags/Press-Ban/"/>
    
      <category term="禁止转载" scheme="http://paruka.me/tags/%E7%A6%81%E6%AD%A2%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>条款1：理解模板类型推导</title>
    <link href="http://paruka.me/translation/effective_modern_cpp/item1.html"/>
    <id>http://paruka.me/translation/effective_modern_cpp/item1.html</id>
    <published>2016-10-08T15:29:00.000Z</published>
    <updated>2017-08-06T19:17:25.811Z</updated>
    
    <content type="html"><![CDATA[<div id="content">

<div id="outline-container-org1ee874b" class="outline-2">
<h2 id="&#x7B2C;&#x4E00;&#x7AE0;-&#x7C7B;&#x578B;&#x63A8;&#x5BFC;"><a id="org1ee874b"></a>&#x7B2C;&#x4E00;&#x7AE0; &#x7C7B;&#x578B;&#x63A8;&#x5BFC;</h2>
<div class="outline-text-2" id="text-&#x7B2C;&#x4E00;&#x7AE0;-&#x7C7B;&#x578B;&#x63A8;&#x5BFC;">
<p>
C++98&#x6709;&#x4E00;&#x5957;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x7528;&#x4E8E;&#x51FD;&#x6570;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x7684;&#x63A8;&#x5BFC;&#x3002;C++11&#x5BF9;&#x5B83;&#x7A0D;&#x4F5C;&#x4FEE;&#x6539;&#xFF0C;&#x5E76;&#x589E;&#x52A0;&#x4E86;&#x4E24;&#x6761;&#xFF1A; <b>auto</b> &#x548C; <b>decltype</b> &#x3002;C++14&#x6269;&#x5C55;&#x4E86; <b>auto</b> &#x548C; <b>decltype</b> &#x7684;&#x4F7F;&#x7528;&#x8BED;&#x5883;&#x3002;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x7684;&#x666E;&#x904D;&#x5E94;&#x7528;&#xFF0C;&#x5C06;&#x4F60;&#x4ECE;&#x624B;&#x52A8;&#x62FC;&#x5199;&#x90A3;&#x4E9B;&#x591A;&#x4F59;&#x4E14;&#x660E;&#x663E;&#x7684;&#x7C7B;&#x578B;&#x7684;&#x7E41;&#x91CD;&#x4EFB;&#x52A1;&#x4E2D;&#x89E3;&#x653E;&#x51FA;&#x6765;&#xFF0C;&#x5B83;&#x8BA9;C++&#x4EE3;&#x7801;&#x66F4;&#x52A0;&#x901A;&#x7528;&#xFF0C;&#x5B83;&#x4F1A;&#x81EA;&#x52A8;&#x7684;&#xFF0C;&#x5C06;&#x4F60;&#x5BF9;&#x7C7B;&#x578B;&#x7684;&#x4FEE;&#x6539;&#x4F20;&#x64AD;&#x5230;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x5B83;&#x4E5F;&#x4F1A;&#x8BA9;&#x4EE3;&#x7801;&#x884C;&#x4E3A;&#x66F4;&#x96BE;&#x63A8;&#x6D4B;&#xFF0C;&#x6BD5;&#x7ADF;&#x7F16;&#x8BD1;&#x5668;&#x63A8;&#x5BFC;&#x51FA;&#x7684;&#x7C7B;&#x578B;&#x5E76;&#x4E0D;&#x662F;&#x4E00;&#x76F4;&#x90FD;&#x5982;&#x4F60;&#x6240;&#x6599;&#x3002;
</p>
<a id="more"></a>

<p>
&#x5982;&#x679C;&#x4E0D;&#x80FD;&#x5BF9;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x6709;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x5316;&#x7684;&#x4E86;&#x89E3;&#xFF0C;&#x5C31;&#x6CA1;&#x6CD5;&#x7528;&#x73B0;&#x4EE3;&#x7684;C++&#x7F16;&#x5199;&#x9AD8;&#x6548;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x51E0;&#x4E4E;&#x65E0;&#x5904;&#x4E0D;&#x5728;&#xFF1A;&#x51FD;&#x6570;&#x6A21;&#x677F;&#x8C03;&#x7528;&#x3001;&#x5927;&#x591A;&#x6570;auto&#x51FA;&#x73B0;&#x7684;&#x5730;&#x65B9;&#x3001;decltype&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4EE5;&#x53CA;C++14&#x4E2D;&#x90A3;&#x5947;&#x5999;&#x7684;decltype(auto)&#x6784;&#x9020;&#x51FD;&#x6570;&#x3002;
</p>

<p>
&#x8FD9;&#x4E00;&#x7AE0;&#x8282;&#x8BB2;&#x8FF0;&#x4E86;&#x4E00;&#x4E9B;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x77E5;&#x8BC6;&#xFF0C;&#x5B83;&#x4EEC;&#x662F;&#x6BCF;&#x4E00;&#x540D;C++&#x5F00;&#x53D1;&#x8005;&#x90FD;&#x5E94;&#x638C;&#x63E1;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5B83;&#x89E3;&#x91CA;&#x4E86;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#xFF0C;&#x5E76;&#x544A;&#x8BC9;&#x4F60;auto&#x548C;decltype&#x662F;&#x5982;&#x4F55;&#x57FA;&#x4E8E;&#x5B83;&#x6784;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x89C4;&#x5219;&#x7CFB;&#x7EDF;&#x7684;&#x3002;&#x5B83;&#x4E5F;&#x4F1A;&#x6559;&#x4F60;&#x5982;&#x4F55;&#x5F3A;&#x8FEB;&#x7F16;&#x8BD1;&#x5668;&#x63A8;&#x5BFC;&#x51FA;&#x4F60;&#x6240;&#x671F;&#x671B;&#x7684;&#x7C7B;&#x578B;&#x7ED3;&#x679C;&#x3002;
</p>
</div>

<div id="outline-container-org8d0668c" class="outline-3">
<h3 id="&#x6761;&#x6B3E;1&#xFF1A;&#x7406;&#x89E3;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;"><a id="org8d0668c"></a>&#x6761;&#x6B3E;1&#xFF1A;&#x7406;&#x89E3;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;</h3>
<div class="outline-text-3" id="text-&#x6761;&#x6B3E;1&#xFF1A;&#x7406;&#x89E3;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;">
<p>
&#x4E00;&#x4E9B;&#x7528;&#x6237;&#x867D;&#x5BF9;&#x67D0;&#x4E00;&#x590D;&#x6742;&#x7CFB;&#x7EDF;&#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x53CA;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x4E0D;&#x751A;&#x4E86;&#x89E3;&#xFF0C;&#x5374;&#x4ECD;&#x80FD;&#x6109;&#x5FEB;&#x7684;&#x7528;&#x5B83;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;&#x9075;&#x5FAA;&#x6B64;&#x9053;&#xFF0C;C++&#x4E2D;&#x7684;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4E0D;&#x6127;&#x4E3A;&#x4E00;&#x5DE8;&#x5927;&#x7684;&#x6210;&#x529F;&#xFF0C;&#x4E0D;&#x8BA1;&#x5176;&#x6570;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x90FD;&#x66FE;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x83B7;&#x5F97;&#x4E86;&#x6EE1;&#x610F;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5373;&#x4FBF;&#x4ED6;&#x4EEC;&#x5BF9;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x4E0D;&#x751A;&#x6E05;&#x695A;&#x3002;
</p>

<p>
&#x5982;&#x679C;&#x4F60;&#x4E5F;&#x662F;&#x4ED6;&#x4EEC;&#x4E2D;&#x7684;&#x4E00;&#x5458;&#xFF08;&#x66FE;&#x4ECE;&#x6A21;&#x677F;&#x51FD;&#x6570;&#x4E2D;&#x53D7;&#x76CA;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#xFF09;&#xFF0C;&#x90A3;&#x6211;&#x4FBF;&#x6709;&#x4E00;&#x597D;&#x4E00;&#x574F;&#x4E24;&#x4E2A;&#x6D88;&#x606F;&#x8981;&#x544A;&#x8BC9;&#x4F60;&#x3002;&#x597D;&#x6D88;&#x606F;&#x662F;&#xFF0C;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x662F;&#x6784;&#x6210;C++&#x4E2D;&#x6700;&#x5F15;&#x4EBA;&#x5165;&#x80DC;&#x7684;&#x65B0;&#x7279;&#x6027; <b>auto</b> &#x7684;&#x57FA;&#x7840;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5BF9;C++98&#x7684;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x8F83;&#x4E3A;&#x719F;&#x6089;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x4E5F;&#x5DF2;&#x7ECF;&#x5BF9;C++11&#x7684; <b>auto</b> &#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x6709;&#x4E86;&#x5927;&#x6982;&#x7684;&#x4E86;&#x89E3;&#xFF0C;&#x574F;&#x6D88;&#x606F;&#x662F;&#xFF0C; <b>auto</b> &#x4E2D;&#x7684;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#xFF0C;&#x5F88;&#x591A;&#x65F6;&#x5019;&#x5E76;&#x4E0D;&#x50CF;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x90A3;&#x4E48;&#x76F4;&#x767D;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x6709;&#x4E2A;&#x5168;&#x9762;&#x7EC6;&#x81F4;&#x7684;&#x4E86;&#x89E3;&#xFF0C;&#x5C31;&#x663E;&#x5F97;&#x5C24;&#x4E3A;&#x91CD;&#x8981;&#x3002;&#x8FD9;&#x6761;&#x6761;&#x6B3E;&#x5C06;&#x4E3A;&#x4F60;&#x8BE6;&#x7EC6;&#x53D9;&#x8FF0;&#x3002;
</p>

<p>
&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x4ECB;&#x610F;&#x4F7F;&#x7528;&#x90E8;&#x5206;&#x4F2A;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x4FBF;&#x53EF;&#x5C06;&#x4E00;&#x51FD;&#x6570;&#x6A21;&#x677F;&#x63CF;&#x8FF0;&#x5982;&#x4E0B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(ParamType param)</span></span>;</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5BF9;&#x5B83;&#x7684;&#x8C03;&#x7528;&#x770B;&#x8D77;&#x6765;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(expr); <span class="comment">// call f with some expression</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F7F;&#x7528; <i>expr</i> &#x6765;&#x63A8;&#x5BFC;&#x4E24;&#x4E2A;&#x7C7B;&#x578B;&#xFF1A; <b>T</b> &#x548C; <b>ParamType</b> <sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup>&#xFF0C;&#x5B83;&#x4EEC;&#x901A;&#x5E38;&#x5E76;&#x4E0D;&#x76F8;&#x540C;&#xFF0C; <b>ParamType</b> &#x7ECF;&#x5E38;&#x4F1A;&#x5305;&#x542B;&#x4E00;&#x4E9B;&#x7C7B;&#x4F3C;&#x4E8E;const&#x6216;&#x5F15;&#x7528;&#x9650;&#x5B9A;&#x4E4B;&#x7C7B;&#x7684;&#x4FEE;&#x9970;&#x7B26;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x4E00;&#x6A21;&#x677F;&#x58F0;&#x660E;&#x5982;&#x4E0B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">const</span> T&amp; param)</span></span>; <span class="comment">// ParamType is const T&amp;</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x8C03;&#x7528;&#x5982;&#x4E0B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">f(x); <span class="comment">// call f with an int</span></span><br></pre></td></tr></table></figure>
</div>

<p>
T&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;int&#xFF0C;&#x4F46;ParamType&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;const int&amp;&#x3002;
</p>

<p>
&#x6211;&#x4EEC;&#x5F88;&#x81EA;&#x7136;&#x7684;&#x4F1A;&#x8BA4;&#x4E3A;&#xFF0C;T&#x5E94;&#x8BE5;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;&#x4F20;&#x5165;&#x7684;&#x5B9E;&#x53C2;&#x7C7B;&#x578B;&#xFF0C;&#x5373;expr&#x7684;&#x7C7B;&#x578B;&#x3002;&#x4EE5;&#x4E0A;&#x4F8B;&#x5B50;&#x4FBF;&#x662F;&#x5982;&#x6B64;&#xFF1A;x&#x4E3A;int&#xFF0C;T&#x4E5F;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;int&#x3002;&#x4F46;&#x4E8B;&#x5B9E;&#x5374;&#x5E76;&#x975E;&#x5982;&#x6B64;&#xFF0C;T&#x7C7B;&#x578B;&#x7684;&#x63A8;&#x5BFC;&#xFF0C;&#x5E76;&#x4E0D;&#x5B8C;&#x5168;&#x53D6;&#x51B3;&#x4E8E;expr&#xFF0C;&#x5B83;&#x901A;&#x5E38;&#x4E5F;&#x8DDF;ParamType&#x6709;&#x5173;&#x3002;&#x53EF;&#x603B;&#x7ED3;&#x4E3A;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;
</p>

<ul class="org-ul">
<li><b>ParamType</b> &#x662F;&#x6307;&#x9488;&#x6216;&#x5F15;&#x7528;&#xFF0C;&#x4F46;&#x4E0D;&#x662F;&#x901A;&#x7528;&#x5F15;&#x7528;<sup><a id="fnr.2" class="footref" href="#fn.2">2</a></sup>(universal reference)&#x3002;&#xFF08;universal reference&#x5C06;&#x5728;<a href="./item24.html">&#x6761;&#x6B3E;24</a>&#x4E2D;&#x8BE6;&#x7EC6;&#x8BB2;&#x8FF0;&#x3002;&#x518D;&#x6B64;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053;&#x5B83;&#x786E;&#x5B9E;&#x5B58;&#x5728;&#xFF0C;&#x4E14;&#x4E0E;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x548C;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x4E0D;&#x540C;&#x5373;&#x53EF;&#x3002;&#xFF09;</li>
<li><b>ParamType</b> &#x662F;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;universal reference&#xFF09;&#x3002;</li>
<li><b>ParamType</b> &#x65E2;&#x4E0D;&#x662F;&#x6307;&#x9488;&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x5F15;&#x7528;&#x3002;</li>
</ul>

<p>
&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5BF9;&#x4E09;&#x79CD;&#x60C5;&#x5F62;&#x5206;&#x522B;&#x8FDB;&#x884C;&#x8BB2;&#x8FF0;&#xFF0C;&#x6BCF;&#x4E00;&#x60C5;&#x5F62;&#x90FD;&#x5C06;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x4F8B;&#x5B50;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(ParamType param)</span></span>;</span><br><span class="line"></span><br><span class="line">f(expr); <span class="comment">// deduce T and ParamType from expr</span></span><br></pre></td></tr></table></figure>
</div>
</div>

<div id="outline-container-orge5527b7" class="outline-4">
<h4 id="&#x60C5;&#x5F62;1-paramtype&#x662F;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x6216;&#x6307;&#x9488;&#x4F46;&#x4E0D;&#x662F;&#x901A;&#x7528;&#x5F15;&#x7528;universal-reference"><a id="orge5527b7"></a>&#x60C5;&#x5F62;1: ParamType&#x662F;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x6216;&#x6307;&#x9488;&#xFF0C;&#x4F46;&#x4E0D;&#x662F;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;universal reference&#xFF09;</h4>
<div class="outline-text-4" id="text-&#x60C5;&#x5F62;1-paramtype&#x662F;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x6216;&#x6307;&#x9488;&#x4F46;&#x4E0D;&#x662F;&#x901A;&#x7528;&#x5F15;&#x7528;universal-reference">
<p>
&#x6700;&#x7B80;&#x5355;&#x7684;&#x60C5;&#x51B5;&#x5C31;&#x662F;&#xFF0C; <b>ParamType</b> &#x662F;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x6216;&#x6307;&#x9488;&#xFF0C;&#x4F46;&#x4E0D;&#x662F;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;universal reference&#xFF09;&#x3002;&#x6B64;&#x65F6;&#x7684;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x5C06;&#x9075;&#x5FAA;&#x5982;&#x4E0B;&#x6B65;&#x9AA4;&#xFF1A;
</p>

<ol class="org-ol">
<li>&#x5982;&#x679C; <i>expr</i> &#x7684;&#x7C7B;&#x578B;&#x662F;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#xFF0C;&#x5FFD;&#x7565;&#x5F15;&#x7528;&#x90E8;&#x5206;&#x3002;</li>
<li>&#x7528; <i>expr</i> &#x7684;&#x7C7B;&#x578B;&#x6765;&#x5339;&#x914D;ParamType&#x5E76;&#x51B3;&#x5B9A;&#x51FA;T&#x7684;&#x7C7B;&#x578B;&#x3002;</li>
</ol>

<p>
&#x4F8B;&#x5982;&#xFF0C;&#x9488;&#x5BF9;&#x6A21;&#x677F;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T&amp; param)</span></span>; <span class="comment">// Param is a reference</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#x7C7B;&#x578B;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">27</span>;         <span class="comment">// x is an int</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> cx = x;   <span class="comment">// cx is a const int</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>&amp; rx = x;  <span class="comment">// rx is a reference to x as a const int</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5BF9;&#x4E8E;&#x4EE5;&#x4E0B;&#x8C03;&#x7528;&#xFF0C;param&#x53CA;T&#x7684;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x5982;&#x6CE8;&#x91CA;&#x6240;&#x8BC9;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">f(x);       <span class="comment">// T is int, Param&apos;s type is int&amp;</span></span><br><span class="line"></span><br><span class="line">f(cx);      <span class="comment">// T is const int,</span></span><br><span class="line">	    <span class="comment">// Param&apos;s type is const int&amp;</span></span><br><span class="line"></span><br><span class="line">f(rx);      <span class="comment">// T is const int,</span></span><br><span class="line">	    <span class="comment">// Param&apos;s type is const int&amp;</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5728;&#x7B2C;&#x4E8C;&#x3001;&#x4E09;&#x4E2A;&#x8C03;&#x7528;&#x4E2D;&#xFF0C;&#x7531;&#x4E8E;cx&#x548C;rx&#x90FD;&#x662F;const&#x53D8;&#x91CF;&#xFF0C;T&#x4FBF;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;const int&#xFF0C;&#x56E0;&#x6B64;ParamType&#x662F;const int&amp;&#x3002;&#x8FD9;&#x5BF9;&#x8C03;&#x7528;&#x8005;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x56E0;&#x4E3A;&#x5F53;&#x4E00;&#x4E2A;const&#x5BF9;&#x8C61;&#x88AB;&#x4F20;&#x9012;&#x7ED9;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x53C2;&#x6570;&#x65F6;&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x8005;&#x81EA;&#x7136;&#x4F1A;&#x671F;&#x671B;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x5728;&#x51FD;&#x6570;&#x5185;&#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#xFF0C;&#x8FD9;&#x4FBF;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x5E38;&#x91CF;&#x7684;&#x5F15;&#x7528;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5411;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x7684;T&amp;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x4E00;&#x4E2A;const&#x5BF9;&#x8C61;&#x662F;&#x5B89;&#x5168;&#x7684;&#xFF1A;&#x5BF9;&#x8C61;&#x7684;const&#x5C5E;&#x6027;&#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;T&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;
</p>

<p>
&#x5728;&#x7B2C;&#x4E09;&#x4E2A;&#x8C03;&#x7528;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x867D;&#x7136;rx&#x7684;&#x7C7B;&#x578B;&#x662F;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#xFF0C;T&#x4ECD;&#x7136;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;&#x975E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5728;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4E2D;&#xFF0C;rx&#x7684;&#x5F15;&#x7528;&#x5C5E;&#x6027;&#x88AB;&#x5FFD;&#x7565;&#x4E86;&#x3002;
</p>

<p>
&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x8BB2;&#x8BC9;&#x7684;&#x90FD;&#x662F;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x4E9B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x4E0E;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x3002;&#x867D;&#x7136;&#x53EA;&#x6709;&#x53F3;&#x503C;&#x624D;&#x80FD;&#x88AB;&#x4F20;&#x9012;&#x7ED9;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4F46;&#x8FD9;&#x4E00;&#x9650;&#x5236;&#x4E0E;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x6BEB;&#x4E0D;&#x76F8;&#x5173;&#x3002;
</p>

<p>
&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06;f&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x7531;T&amp;&#x4FEE;&#x6539;&#x4E3A;const T&amp;&#xFF0C;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x5C06;&#x4F1A;&#x53D1;&#x751F;&#x7EC6;&#x5FAE;&#x7684;&#x53D8;&#x5316;&#xFF0C;cx&#x548C;rx&#x7684;&#x5E38;&#x91CF;&#x6027;&#x4F9D;&#x65E7;&#x4FDD;&#x7559;&#xFF0C;&#x4F46;&#x56E0;&#x4E3A;Param&#x7684;&#x7C7B;&#x578B;&#x662F;&#x4E00;&#x4E2A;&#x5E38;&#x91CF;&#x5F15;&#x7528;&#xFF0C;T&#x7684;const&#x4FEE;&#x9970;&#x7B26;&#x4FBF;&#x4E0D;&#x518D;&#x9700;&#x8981;&#x4E86;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">const</span> T&amp; param)</span></span>; <span class="comment">// param is now a ref-to-const</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">27</span>;             <span class="comment">// as before</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> cx = x;       <span class="comment">// as before</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>&amp; rx = x;      <span class="comment">// as before</span></span><br><span class="line"></span><br><span class="line">f(x);                   <span class="comment">// T is int, param&apos;s type is const int&amp;</span></span><br><span class="line"></span><br><span class="line">f(cx);                  <span class="comment">// T is int, param&apos;s type is const int&amp;</span></span><br><span class="line"></span><br><span class="line">f(rx);                  <span class="comment">// T is int, param&apos;s type is const int&amp;</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x4E0E;&#x4E4B;&#x524D;&#x7684;&#x4F8B;&#x5B50;&#x4E00;&#x6837;&#xFF0C;rx&#x7684;&#x5F15;&#x7528;&#x5C5E;&#x6027;&#x5728;&#x63A8;&#x5BFC;&#x8FC7;&#x7A0B;&#x4E2D;&#x88AB;&#x5FFD;&#x7565;&#x4E86;&#x3002;
</p>

<p>
&#x5F53;param&#x4E3A;&#x6307;&#x9488;&#xFF08;&#x6216;&#x5E38;&#x91CF;&#x6307;&#x9488;&#xFF09;&#x65F6;&#xFF0C;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x4E0E;&#x5F15;&#x7528;&#x4E00;&#x81F4;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T* param)</span></span>;        <span class="comment">// param is now a pointer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">27</span>;              <span class="comment">// as before</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>* px = &amp;x;      <span class="comment">// px is a ptr to x as a const int</span></span><br><span class="line"></span><br><span class="line">f(&amp;x);                   <span class="comment">// T is int, param&apos;s type is int*</span></span><br><span class="line"></span><br><span class="line">f(px);                   <span class="comment">// T is const int,</span></span><br><span class="line">			 <span class="comment">// param&apos;s type is const int*</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x81F3;&#x6B64;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x611F;&#x5230;&#x6709;&#x70B9;&#x65E0;&#x804A;&#xFF0C;&#x56E0;&#x4E3A;C++&#x7684;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x5BF9;&#x5F15;&#x7528;&#x548C;&#x6307;&#x9488;&#x6765;&#x8BF4;&#x662F;&#x5982;&#x6B64;&#x7684;&#x81EA;&#x7136;&#xFF0C;&#x5B83;&#x4E0E;&#x4F60;&#x7684;&#x8BBE;&#x60F3;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x3002;
</p>
</div>
</div>

<div id="outline-container-org079ec08" class="outline-4">
<h4 id="&#x60C5;&#x5F62;2: ParamType&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;universal reference&#xFF09;"><a id="org079ec08"></a>&#x60C5;&#x5F62;2: ParamType&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;universal reference&#xFF09;</h4>
<div class="outline-text-4" id="text-&#x60C5;&#x5F62;2: ParamType&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;universal reference&#xFF09;">
<p>
&#x5F53;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E3A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x65F6;&#xFF0C;&#x89C4;&#x5219;&#x5C31;&#x53D8;&#x5F97;&#x6709;&#x70B9;&#x590D;&#x6742;&#x4E86;&#x3002;&#x901A;&#x7528;&#x5F15;&#x7528;&#x53C2;&#x6570;&#xFF08;universal reference parameters&#xFF09;&#x4EE5;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x7684;&#x5F62;&#x5F0F;&#x58F0;&#x660E;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;&#x5BF9;&#x4E8E;&#x7C7B;&#x578B;T&#xFF0C;&#x901A;&#x7528;&#x5F15;&#x7528;&#x88AB;&#x58F0;&#x660E;&#x4E3A;T&amp;&amp;&#xFF09;&#xFF0C;&#x5B83;&#x4EEC;&#x5728;&#x88AB;&#x4F20;&#x5165;&#x5DE6;&#x503C;&#x65F6;&#xFF0C;&#x4F1A;&#x6709;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x8868;&#x73B0;&#x3002;&#x8BE6;&#x7EC6;&#x60C5;&#x51B5;&#x6211;&#x4EEC;&#x4F1A;&#x5728;<a href="./item24.html">&#x6761;&#x6B3E;24</a>&#x4E2D;&#x8BB2;&#x8BC9;&#xFF0C;&#x5728;&#x6B64;&#x53EA;&#x505A;&#x7B80;&#x8981;&#x6982;&#x8FF0;&#xFF1A;
</p>

<ul class="org-ul">
<li>&#x5982;&#x679C; <i>expr</i> &#x4E3A;&#x5DE6;&#x503C;&#xFF0C;T&#x548C;ParamType&#x90FD;&#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x3002;&#x8FD9;&#x6709;&#x4E24;&#x4E2A;&#x4E0D;&#x5BFB;&#x5E38;&#x70B9;&#x3002;&#x7B2C;&#x4E00;&#xFF0C;&#x8FD9;&#x662F;&#x552F;&#x4E00;&#x4E00;&#x79CD;T&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;&#x5F15;&#x7528;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x7B2C;&#x4E8C;&#xFF0C;&#x867D;&#x7136;ParamType&#x88AB;&#x58F0;&#x660E;&#x4E3A;&#x53F3;&#x503C;&#x5F15;&#x7528;&#xFF0C;&#x5B83;&#x5374;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;&#x4E00;&#x4E2A;&#x5DE6;&#x503C;&#x5F15;&#x7528;&#x3002;</li>
<li>&#x5982;&#x679C; <i>expr</i> &#x4E3A;&#x53F3;&#x503C;&#xFF0C;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x5982;&#x60C5;&#x5F62;1&#x6240;&#x8BC9;&#x3002;</li>
</ul>

<p>
&#x4F8B;&#x5982;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T&amp;&amp; param)</span></span>;      <span class="comment">// param is now a universal reference</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">27</span>;             <span class="comment">// as before</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> cx = x;       <span class="comment">// as before</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>&amp; rx = x;      <span class="comment">// as before</span></span><br><span class="line"></span><br><span class="line">f(x);                   <span class="comment">// x is lvalue, so T is int&amp;,</span></span><br><span class="line">			<span class="comment">// param&apos;s type is also int&amp;</span></span><br><span class="line"></span><br><span class="line">f(cx);                  <span class="comment">// cx is lvalue, so T is const int&amp;,</span></span><br><span class="line">			<span class="comment">// param&apos;s type is also const int&amp;</span></span><br><span class="line"></span><br><span class="line">f(rx);                  <span class="comment">// rx is lvalue, so T is const int&amp;,</span></span><br><span class="line">			<span class="comment">// param&apos;s type is also const int&amp;&#x2D8;</span></span><br><span class="line"></span><br><span class="line">f(<span class="number">27</span>);                  <span class="comment">// 27 is rvalue, so T is int,</span></span><br><span class="line">			<span class="comment">// param&apos;s type is therefore int&amp;&amp;</span></span><br></pre></td></tr></table></figure>
</div>

<p>
<a href="./item24.html">&#x6761;&#x6B3E;24</a>&#x5C06;&#x5BF9;&#x4EE5;&#x4E0A;&#x4F8B;&#x5B50;&#x8FDB;&#x884C;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;&#xFF0C;&#x8FD9;&#x91CC;&#x53EA;&#x9700;&#x8981;&#x8BB0;&#x4F4F;&#xFF1A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x7684;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x4E0E;&#x5DE6;&#x3001;&#x53F3;&#x503C;&#x5F15;&#x7528;&#x5E76;&#x4E0D;&#x76F8;&#x540C;&#xFF0C;&#x5B83;&#x4E0E;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#xFF08;&#x662F;&#x5DE6;&#x503C;&#x6216;&#x53F3;&#x503C;&#xFF09;&#x6709;&#x5173;&#xFF0C;&#x8FD9;&#x4E0E;&#x975E;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;non-universal references&#xFF09;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x3002;
</p>
</div>
</div>

<div id="outline-container-org827a285" class="outline-4">
<h4 id="&#x60C5;&#x5F62;3: ParamType&#x65E2;&#x4E0D;&#x662F;&#x5F15;&#x7528;&#x4E5F;&#x4E0D;&#x662F;&#x6307;&#x9488;"><a id="org827a285"></a>&#x60C5;&#x5F62;3: ParamType&#x65E2;&#x4E0D;&#x662F;&#x5F15;&#x7528;&#x4E5F;&#x4E0D;&#x662F;&#x6307;&#x9488;</h4>
<div class="outline-text-4" id="text-&#x60C5;&#x5F62;3: ParamType&#x65E2;&#x4E0D;&#x662F;&#x5F15;&#x7528;&#x4E5F;&#x4E0D;&#x662F;&#x6307;&#x9488;">
<p>
&#x5F53;ParamType&#x65E2;&#x4E0D;&#x662F;&#x5F15;&#x7528;&#x4E5F;&#x4E0D;&#x662F;&#x6307;&#x9488;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5B83;&#x6309;&#x7167;&#x503C;&#x4F20;&#x9012;&#x7684;&#x65B9;&#x5F0F;&#x5904;&#x7406;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tamplate&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T param)</span></span>;        <span class="comment">// param is now passed by value</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x8FD9;&#x610F;&#x5473;&#x7740;Param&#x5C06;&#x4F1A;&#x662F;&#x5B9E;&#x53C2;&#x7684;&#x4E00;&#x4E2A;&#x62F7;&#x8D1D;&#xFF1A;&#x4E00;&#x4E2A;&#x5168;&#x65B0;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x4E5F;&#x6B63;&#x662F;&#x8FD9;&#x4E00;&#x73B0;&#x8C61;&#xFF08;param&#x5C06;&#x4F1A;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x65B0;&#x5BF9;&#x8C61;&#xFF09;&#x76F4;&#x63A5;&#x5BFC;&#x81F4;&#x4E86;T&#x7684;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#x5FC5;&#x987B;&#x9075;&#x5FAA;&#x5982;&#x4E0B;&#x89C4;&#x5B9A;&#xFF1A;
</p>

<ol class="org-ol">
<li>&#x4E0E;&#x4E4B;&#x524D;&#x4E00;&#x6837;&#xFF0C;&#x5982;&#x679C; <i>expr</i> &#x7684;&#x7C7B;&#x578B;&#x662F;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#xFF0C;&#x5219;&#x5FFD;&#x7565;&#x5F15;&#x7528;&#x5C5E;&#x6027;&#x3002;</li>
<li>&#x5FFD;&#x7565;&#x5F15;&#x7528;&#x5C5E;&#x6027;&#x540E;&#xFF0C;&#x5982;&#x679C; <i>expr</i> &#x5E26;&#x6709; <b>const</b> &#x6216; <b>volatile</b> &#x5C5E;&#x6027;&#xFF0C;&#x4E00;&#x5E76;&#x5FFD;&#x7565;&#x3002;&#xFF08;volatile&#x5C5E;&#x6027;&#x7684;&#x5BF9;&#x8C61;&#x5E76;&#x4E0D;&#x5E38;&#x89C1;&#xFF0C;&#x5B83;&#x4EEC;&#x901A;&#x5E38;&#x53EA;&#x4F1A;&#x5728;&#x5B9E;&#x73B0;&#x8BBE;&#x5907;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x65F6;&#x4F7F;&#x7528;&#x3002;&#x8BE6;&#x60C5;&#x53C2;&#x8003;<a href="./item40.html">&#x6761;&#x6B3E;40</a>&#x3002;&#xFF09;</li>
</ol>

<p>
&#x56E0;&#x6B64;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">27</span>;             <span class="comment">// as before</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> cx = x;       <span class="comment">// as before</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>&amp; rx= x;       <span class="comment">// as before</span></span><br><span class="line"></span><br><span class="line">f(x);                  <span class="comment">// T&apos;s and param&apos;s types are both int</span></span><br><span class="line">f(cx);                 <span class="comment">// T&apos;s and param&apos;s types are again both int</span></span><br><span class="line">f(rx);                 <span class="comment">// T&apos;s and param&apos;s types are still both int</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6CE8;&#x610F;&#xFF0C;&#x5373;&#x4FBF;cx&#x548C;rx&#x90FD;&#x662F;const&#x53D8;&#x91CF;&#xFF0C; <i>param</i> &#x7684;&#x7C7B;&#x578B;&#x5374;&#x4E0D;&#x662F;const&#x3002;&#x8FD9;&#x662F;&#x6709;&#x9053;&#x7406;&#x7684;&#xFF1A; <i>param</i> &#x662F;&#x4E0E;&#x5B83;&#x7684;&#x5B9E;&#x53C2;&#xFF08;cx&#x6216;rx&#xFF09;&#x5B8C;&#x5168;&#x72EC;&#x7ACB;&#x7684;&#x3001;&#x5168;&#x65B0;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x662F;&#x5B9E;&#x53C2;&#xFF08;cx&#x6216;rx&#xFF09;&#x7684;&#x62F7;&#x8D1D;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5B9E;&#x53C2;&#xFF08;cx&#x6216;rx&#xFF09;&#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#x8FD9;&#x6837;&#x7684;&#x9650;&#x5236;&#x5BF9;param&#x5B8C;&#x5168;&#x65E0;&#x6548;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48; <i>expr</i> &#x7684;const&#x5C5E;&#x6027;&#x5728;param&#x7684;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#xFF08;volatile&#x5C5E;&#x6027;&#x540C;&#x7406;&#xFF09;&#xFF1A; <i>expr</i> &#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#x5E76;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x5B83;&#x7684;&#x62F7;&#x8D1D;&#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#x3002;
</p>

<p>
const&#x548C;volatile&#x5C5E;&#x6027;&#x53EA;&#x6709;&#x5728;&#x503C;&#x4F20;&#x9012;&#x65F6;&#x624D;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#xFF0C;&#x8FD9;&#x70B9;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x3002;&#x6B63;&#x5982;&#x4E4B;&#x524D;&#x6240;&#x8BC9;&#xFF0C;&#x5728;&#x63A8;&#x5BFC;&#x5F62;&#x53C2;&#x4E3A;&#x6307;&#x5411;&#x5E38;&#x91CF;&#x7684;&#x5F15;&#x7528;&#x6216;&#x6307;&#x9488;&#x65F6;&#xFF0C; <i>expr</i> &#x7684;const&#x5C5E;&#x6027;&#x662F;&#x4E0D;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#x7684;&#x3002;&#x4F46;&#x5F53; <i>expr</i> &#x662F;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x5E38;&#x91CF;&#x7684;&#x5E38;&#x6307;&#x9488;&#x65F6;&#xFF0C;&#x5C06;&#x5B83;&#x4EE5;&#x503C;&#x4F20;&#x9012;&#x65B9;&#x5F0F;&#x4F20;&#x9012;&#x7ED9;&#x4EE5;&#x4E0B;&#x6A21;&#x677F;&#x4F1A;&#x600E;&#x6837;&#x5462;&#xFF1F;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T param)</span></span>;                              <span class="comment">// param is still passed by value</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* <span class="keyword">const</span> ptr = <span class="string">&quot;Fun with pointers&quot;</span>;  <span class="comment">// ptr is const pointer to const object</span></span><br><span class="line"></span><br><span class="line">f(ptr);                                       <span class="comment">// pass arg of type const char * const</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x661F;&#x53F7;&#x53F3;&#x8FB9;&#x7684;const&#x58F0;&#x660E;&#x4E86;ptr&#x662F;&#x4E00;&#x4E2A;const&#x53D8;&#x91CF;&#xFF1A;ptr&#x4E0D;&#x80FD;&#x88AB;&#x6307;&#x5411;&#x5176;&#x5B83;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x88AB;&#x8BBE;&#x7F6E;&#x4E3A;null&#x3002;&#xFF08;&#x661F;&#x53F7;&#x5DE6;&#x8FB9;&#x7684;const&#x8868;&#x660E;&#x6307;&#x5411;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5E38;&#x91CF;&#xFF0C;&#x8BE5;&#x5B57;&#x7B26;&#x4E32;&#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#x3002;&#xFF09;&#x5F53;ptr&#x88AB;&#x4F20;&#x9012;&#x7ED9;f&#x65F6;&#xFF0C;&#x5B83;&#x88AB;&#x6309;&#x4F4D;&#x62F7;&#x8D1D;&#x7ED9;param&#xFF0C;&#x56E0;&#x6B64;&#xFF0C; <i>&#x6307;&#x9488;&#x81EA;&#x5DF1;&#xFF08;ptr&#xFF09;&#x662F;&#x6309;&#x503C;&#x4F20;&#x9012;&#x7684;</i> &#x3002;&#x6839;&#x636E;&#x503C;&#x4F20;&#x9012;&#x7684;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#xFF0C;ptr&#x7684;const&#x5C5E;&#x6027;&#x5C06;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#xFF0C;param&#x7684;&#x7C7B;&#x578B;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;const char*&#xFF0C;&#x5373;&#x4E00;&#x4E2A;&#x53EF;&#x88AB;&#x4FEE;&#x6539;&#x7684;&#x6307;&#x5411;const&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6307;&#x9488;&#xFF08;&#x6307;&#x9488;&#x7684;&#x6307;&#x5411;&#x53EF;&#x88AB;&#x4FEE;&#x6539;&#xFF0C;&#x4F46;&#x5176;&#x6307;&#x5411;&#x7684;&#x5185;&#x5BB9;&#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#xFF09;&#x3002;ptr&#x6307;&#x5411;&#x7684;&#x5185;&#x5BB9;&#x7684;const&#x5C5E;&#x6027;&#x5728;&#x63A8;&#x5BFC;&#x8FC7;&#x7A0B;&#x4E2D;&#x88AB;&#x4FDD;&#x7559;&#x4E86;&#xFF0C;&#x4F46;ptr&#x81EA;&#x5DF1;&#x7684;const&#x5C5E;&#x6027;&#x5728;&#x62F7;&#x8D1D;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x6307;&#x9488;&#xFF08;param&#xFF09;&#x65F6;&#xFF0C;&#x88AB;&#x5FFD;&#x7565;&#x4E86;&#x3002;
</p>
</div>
</div>
<div id="outline-container-org4c3dc19" class="outline-4">
<h4 id="&#x6570;&#x7EC4;&#x5B9E;&#x53C2;"><a id="org4c3dc19"></a>&#x6570;&#x7EC4;&#x5B9E;&#x53C2;</h4>
<div class="outline-text-4" id="text-&#x6570;&#x7EC4;&#x5B9E;&#x53C2;">
<p>
&#x4E4B;&#x524D;&#x6240;&#x8BC9;&#x5DF2;&#x662F;&#x6A21;&#x677F;&#x63A8;&#x5BFC;&#x7684;&#x4E3B;&#x6D41;&#x60C5;&#x5F62;&#xFF0C;&#x4F46;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x8F83;&#x4E3A;&#x7F55;&#x89C1;&#x7684;&#x60C5;&#x5F62;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x4E86;&#x89E3;&#xFF1A;&#x6570;&#x7EC4;&#x4E0E;&#x6307;&#x9488;&#x5176;&#x5B9E;&#x662F;&#x4E0D;&#x540C;&#x7684;&#xFF0C;&#x5C3D;&#x7BA1;&#x5B83;&#x4EEC;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#x53EF;&#x4EE5;&#x76F8;&#x4E92;&#x66FF;&#x6362;&#x4F7F;&#x7528;&#x3002;&#x6570;&#x7EC4;&#x5728;&#x5F88;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#x4F1A;&#x9000;&#x5316;&#x4E3A;&#x6307;&#x5411;&#x5B83;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x5730;&#x5740;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x8FD9;&#x7ED9;&#x8BB8;&#x591A;&#x4EBA;&#x9020;&#x6210;&#x4E86;&quot;&#x6570;&#x7EC4;&#x4E0E;&#x6307;&#x9488;&#x662F;&#x4E00;&#x6837;&#x7684;&quot;&#x8FD9;&#x6837;&#x7684;&#x9519;&#x89C9;&#x3002;&#x8FD9;&#x79CD;&#x6570;&#x7EC4;&#x5230;&#x6307;&#x9488;&#x7684;&#x9000;&#x5316;&#xFF0C;&#x8BA9;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x53D8;&#x5F97;&#x5408;&#x6CD5;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> name[] = <span class="string">&quot;J. P. Briggs&quot;</span>;  <span class="comment">// name&apos;s type is</span></span><br><span class="line">				     <span class="comment">// const char[13]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ptrToName = name;        <span class="comment">// array decays to pointer</span></span><br></pre></td></tr></table></figure>
</div>

<p>
const char* &#x6307;&#x9488;ptrToName&#x88AB;const char[13]&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;name&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x7C7B;&#x578B;&#xFF08;const char* &#x548C;const char[13]&#xFF09;&#x5E76;&#x4E0D;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x56E0;&#x8FD9;&#x6761;&#x6570;&#x7EC4;&#x6307;&#x9488;&#x9000;&#x5316;&#x89C4;&#x5219;&#xFF08;array-to-pointer&#xFF09;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x7F16;&#x8BD1;&#x901A;&#x8FC7;&#x3002;
</p>

<p>
&#x4F46;&#x5F53;&#x6570;&#x7EC4;&#x4EE5;&#x503C;&#x4F20;&#x9012;&#x7684;&#x65B9;&#x5F0F;&#x88AB;&#x4F20;&#x7ED9;&#x6A21;&#x677F;&#x65F6;&#x53C8;&#x4F1A;&#x600E;&#x6837;&#x5462;&#xFF1F;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T param)</span></span>;        <span class="comment">// template with by-value parameter</span></span><br><span class="line"></span><br><span class="line">f(name);                <span class="comment">// what types are deduced for T and param?</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6211;&#x4EEC;&#x9996;&#x5148;&#x5E94;&#x8BE5;&#x6CE8;&#x610F;&#x5230;&#x51FD;&#x6570;&#x662F;&#x6CA1;&#x6709;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x7684;&#x3002;&#x662F;&#x7684;&#xFF0C;&#x662F;&#x7684;&#xFF0C;&#x4EE5;&#x4E0B;&#x8BED;&#x6CD5;&#x786E;&#x5B9E;&#x662F;&#x5408;&#x6CD5;&#x7684;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myFunc</span><span class="params">(<span class="keyword">int</span> param[])</span></span>;</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x4F46;&#x662F;&#xFF0C;&#x6570;&#x7EC4;&#x58F0;&#x660E;&#x88AB;&#x5F53;&#x6210;&#x4E86;&#x6307;&#x9488;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;myFunc&#x5176;&#x5B9E;&#x548C;&#x4EE5;&#x4E0B;&#x58F0;&#x660E;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myFunc</span><span class="params">(<span class="keyword">int</span>* param)</span></span>;  <span class="comment">// same function as above</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x8FD9;&#x79CD;&#x6570;&#x7EC4;&#x4E0E;&#x6307;&#x9488;&#x53C2;&#x6570;&#x7684;&#x7B49;&#x4EF7;&#x7EE7;&#x627F;&#x81EA;C++&#x7684;&#x7236;&#x4EB2;C&#xFF0C;&#x5B83;&#x7ED9;&#x4EBA;&#x4E00;&#x79CD;&#x6570;&#x7EC4;&#x4E0E;&#x6307;&#x9488;&#x76F8;&#x540C;&#x7684;&#x9519;&#x89C9;&#x3002;
</p>

<p>
&#x7531;&#x4E8E;&#x6570;&#x7EC4;&#x53C2;&#x6570;&#x88AB;&#x5F53;&#x6210;&#x6307;&#x9488;&#x53C2;&#x6570;&#x5BF9;&#x5F85;&#xFF0C;&#x4EE5;&#x503C;&#x65B9;&#x5F0F;&#x4F20;&#x5165;&#x6A21;&#x677F;&#x7684;&#x6570;&#x7EC4;&#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;&#x6307;&#x9488;&#xFF0C;&#x56E0;&#x6B64;&#x5BF9;&#x4E8E;&#x6A21;&#x677F;&#x51FD;&#x6570;f&#x7684;&#x8C03;&#x7528;&#xFF0C;T&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;const char*&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(name);                <span class="comment">// name is array, but T deduced as const char*</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x4F46;&#x51FA;&#x4E4E;&#x610F;&#x6599;&#x7684;&#x662F;&#xFF0C;&#x5C3D;&#x7BA1;&#x51FD;&#x6570;&#x4E0D;&#x80FD;&#x58F0;&#x660E;&#x771F;&#x6B63;&#x7684;&#x6570;&#x7EC4;&#x53C2;&#x6570;&#xFF0C;&#x5B83;&#x4EEC;&#x5374;&#x53EF;&#x4EE5;&#x58F0;&#x660E;&#x6307;&#x5411;&#x6570;&#x7EC4;&#x7684;&#x5F15;&#x7528;&#x4F5C;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x53C2;&#x6570;&#xFF01;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x628A;&#x6A21;&#x677F;f&#x4FEE;&#x6539;&#x4E3A;&#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T&amp; param)</span></span>;       <span class="comment">// template with by-reference parameter</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5E76;&#x5411;&#x5176;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(name);                <span class="comment">// pass array of f</span></span><br></pre></td></tr></table></figure>
</div>

<p>
T&#x771F;&#x7684;&#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#xFF01;&#x8BE5;&#x7C7B;&#x578B;&#x5305;&#x542B;&#x4E86;&#x88AB;&#x4F20;&#x5165;&#x7684;&#x6570;&#x7EC4;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x9488;&#x5BF9;&#x6B64;&#x4F8B;&#xFF0C;T&#x88AB;&#x63A8;&#x5BFC;&#x4E3A;const char[13]&#xFF0C;f&#x7684;&#x53C2;&#x6570;&#xFF08;&#x6307;&#x5411;&#x8FD9;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x5F15;&#x7528;&#xFF09;&#x7C7B;&#x578B;&#x4E3A;const char (&amp;)[13]&#x3002;&#x786E;&#x5B9E;&#xFF0C;&#x8FD9;&#x8BED;&#x6CD5;&#x96BE;&#x4EE5;&#x7406;&#x89E3;&#xFF0C;&#x4F46;&#x4E0E;&#x638C;&#x63E1;&#x5B83;&#x6240;&#x7ED9;&#x4E88;&#x4F60;&#x80FD;&#x529B;&#x7684;&#x63D0;&#x9AD8;&#x76F8;&#x6BD4;&#xFF0C;&#x6D88;&#x8017;&#x7684;&#x90A3;&#x70B9;&#x7CBE;&#x529B;&#x7B80;&#x76F4;&#x5FAE;&#x4E0D;&#x8DB3;&#x9053;&#xFF08;Yes, the syntax looks toxic&#xFF08;&#x8FD9;&#x8BED;&#x6CD5;&#x6709;&#x6BD2;&#xFF01;&#xFF09;, but knowing it will score you mondo points with those few souls who care.&#xFF09;&#x3002;
</p>

<p>
&#x6709;&#x8DA3;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4E00;&#x6280;&#x5DE7;&#xFF08;&#x58F0;&#x660E;&#x6307;&#x5411;&#x6570;&#x7EC4;&#x7684;&#x5F15;&#x7528;&#xFF09;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x6765;&#x63A8;&#x5BFC;&#x6570;&#x7EC4;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#x3002;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5728;&#x7F16;&#x8BD1;&#x671F;&#x8FD4;&#x56DE;&#x6307;&#x5B9A;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#x3002;</span></span><br><span class="line"><span class="comment">// &#xFF08;&#x6570;&#x7EC4;&#x5F62;&#x53C2;&#x662F;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x53C2;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x53EA;&#x5173;&#x5FC3;&#x5B83;&#x62E5;&#x6709;&#x7684;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#xFF09;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="built_in">std</span>::<span class="keyword">size_t</span> N&gt;</span><br><span class="line"><span class="keyword">constexpr</span> <span class="built_in">std</span>::<span class="keyword">size_t</span> arraySize(T (&amp;)[N]) noexpect</span><br><span class="line">{</span><br><span class="line">    <span class="comment">// see info below on constexpr and noexcept</span></span><br><span class="line">    <span class="keyword">return</span> N;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>

<p>
&#x6B63;&#x5982;<a href="./item15.html">&#x6761;&#x6B3E;15</a>&#x6240;&#x8BC9;&#xFF0C;&#x5C06;&#x6B64;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x4E3A;constexpr&#x5C06;&#x4F7F;&#x5176;&#x7ED3;&#x679C;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x88AB;&#x8BA1;&#x7B97;&#x3002;&#x8FD9;&#x4F7F;&#x5F97;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x5176;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x4E0E;&#x67D0;&#x4E00;&#x4F7F;&#x7528;&#x5927;&#x6269;&#x53F7;&#x65B9;&#x5F0F;&#x521D;&#x59CB;&#x5316;&#x7684;&#x6570;&#x7EC4;&#x7684;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x76F8;&#x540C;&#x7684;&#x6570;&#x7EC4;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> keyValues[] = {<span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">22</span>, <span class="number">35</span>};   <span class="comment">// keyValue has 7 elements</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mappedVals[arraySize(keyValue)];          <span class="comment">// so does mappedVals</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5F53;&#x7136;&#xFF0C;&#x4F5C;&#x4E3A;&#x4E00;&#x540D;&#x73B0;&#x4EE3;&#x5316;&#x7684;C++&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x4F60;&#x5E94;&#x5F53;&#x5F88;&#x81EA;&#x7136;&#x7684;&#x9009;&#x62E9;&#x4F7F;&#x7528;std:array&#x4EE3;&#x66FF;&#x5185;&#x7F6E;&#x7684;&#x6570;&#x7EC4;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">array</span>&lt;<span class="keyword">int</span>, arraySize(keyValue)&gt; mappedVals;  <span class="comment">// mappedVals&apos; size is 7</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5C06;arraySize&#x58F0;&#x660E;&#x4E3A;noexcept&#xFF0C;&#x5C06;&#x4F7F;&#x7F16;&#x8BD1;&#x5668;&#x66F4;&#x6613;&#x4E8E;&#x751F;&#x6210;&#x66F4;&#x597D;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x8BE6;&#x8BF7;&#x8BF7;&#x770B;<a href="./item14.html">&#x6761;&#x6B3E;14</a>&#x3002;
</p>
</div>
</div>

<div id="outline-container-orge9c0c76" class="outline-4">
<h4 id="&#x51FD;&#x6570;&#x5B9E;&#x53C2;"><a id="orge9c0c76"></a>&#x51FD;&#x6570;&#x5B9E;&#x53C2;</h4>
<div class="outline-text-4" id="text-&#x51FD;&#x6570;&#x5B9E;&#x53C2;">
<p>
&#x6570;&#x7EC4;&#x5E76;&#x4E0D;&#x662F;C++&#x4E2D;&#x552F;&#x4E00;&#x4E00;&#x79CD;&#x4F1A;&#x9000;&#x5316;&#x4E3A;&#x6307;&#x9488;&#x7684;&#x4E1C;&#x897F;&#x3002;&#x51FD;&#x6570;&#x4E5F;&#x4F1A;&#x9000;&#x5316;&#x4E3A;&#x51FD;&#x6570;&#x6307;&#x9488;&#xFF0C;&#x5E76;&#x4E14;&#x6211;&#x4EEC;&#x4E4B;&#x524D;&#x6240;&#x8BA8;&#x8BBA;&#x7684;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x7684;&#x89C4;&#x5219;&#x5BF9;&#x4E8E;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4F9D;&#x65E7;&#x9002;&#x7528;&#x3002;&#x56E0;&#x6B64;&#xFF1A;
</p>

<div class="org-src-container">
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">someFunc</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">double</span>)</span></span>;       <span class="comment">// someFunc is a function;</span></span><br><span class="line">				  <span class="comment">// type is void(int, double)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f1</span><span class="params">(T param)</span></span>;                <span class="comment">// in f1, param passed by value</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f2</span><span class="params">(T&amp; param)</span></span>;               <span class="comment">// in f2, param passed by ref</span></span><br><span class="line"></span><br><span class="line">f1(someFunc);                    <span class="comment">// param deduced as ptr-to-func;</span></span><br><span class="line">				 <span class="comment">// type is void (*)(int, double)</span></span><br><span class="line"></span><br><span class="line">f2(someFunc);                    <span class="comment">// param deduced as ref-to-func;</span></span><br><span class="line">				 <span class="comment">// type is void (&amp;)(int, double)</span></span><br></pre></td></tr></table></figure>
</div>

<p>
&#x5B83;&#x4EEC;&#xFF08;&#x63A8;&#x5BFC;&#x4E3A;&#x51FD;&#x6570;&#x6307;&#x9488;&#x4E0E;&#x63A8;&#x5BFC;&#x4E3A;&#x51FD;&#x6570;&#x5F15;&#x7528;&#xFF09;&#x5728;&#x4F7F;&#x7528;&#x4E2D;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x4E0D;&#x540C;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x4F60;&#x6B63;&#x5728;&#x5B66;&#x4E60;&#x6570;&#x7EC4;&#x5230;&#x6307;&#x9488;&#x7684;&#x9000;&#x5316;&#x89C4;&#x5219;&#xFF0C;&#x4F60;&#x5E94;&#x8BE5;&#x4E5F;&#x8981;&#x987A;&#x9053;&#x5B66;&#x4E60;&#x4EE5;&#x4E0B;&#x51FD;&#x6570;&#x5230;&#x6307;&#x9488;&#x7684;&#x9000;&#x5316;&#x89C4;&#x5219;&#x3002;
</p>

<p>
&#x73B0;&#x5728;&#x4F60;&#x5DF2;&#x7ECF;&#x77E5;&#x9053;&#x4E86;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x89C4;&#x5219;&#xFF0C;&#x6211;&#x5728;&#x6761;&#x6B3E;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x4FBF;&#x8BF4;&#xFF0C;&#x5B83;&#x6781;&#x5176;&#x7B80;&#x5355;&#xFF0C;&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x5B83;&#x5927;&#x591A;&#x6570;&#x65F6;&#x5019;&#x90FD;&#x5F88;&#x7B80;&#x5355;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x901A;&#x7528;&#x5F15;&#x7528;&#xFF08;universal reference&#xFF09;&#x4F20;&#x5165;&#x5DE6;&#x503C;&#x5B9E;&#x53C2;&#x65F6;&#x53EF;&#x80FD;&#x4F1A;&#x7565;&#x663E;&#x590D;&#x6742;&#xFF0C;&#x8FD8;&#x6709;&#x6570;&#x7EC4;&#x548C;&#x51FD;&#x6570;&#x5230;&#x6307;&#x9488;&#x7684;&#x9000;&#x5316;&#x8FD9;&#x6761;&#x89C4;&#x5219;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x8BA9;&#x4F60;&#x611F;&#x5230;&#x6DF7;&#x4E71;&#x3002;&#x8BB8;&#x591A;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x60F3;&#x201D;&#x6293;&#x4F4F;&#x7F16;&#x8BD1;&#x5668;&#x7684;&#x8863;&#x9886;&#x201C;&#x5411;&#x5B83;&#x67E5;&#x95EE;&#xFF0C;&quot;&#x544A;&#x8BC9;&#x6211;&#x4F60;&#x63A8;&#x5BFC;&#x51FA;&#x4EC0;&#x4E48;&#x7C7B;&#x578B;&#xFF01;&quot;&#xFF0C;&#x90A3;&#x65F6;&#x4F60;&#x5C31;&#x5E94;&#x8BE5;&#x8F6C;&#x5230;<a href="./item4.html">&#x6761;&#x6B3E;4</a>&#xFF0C;&#x5B83;&#x4F1A;&#x544A;&#x8BC9;&#x4F60;&#x5982;&#x4F55;&#x8BF1;&#x5BFC;&#x7F16;&#x8BD1;&#x5668;&#x8FD9;&#x4E48;&#x505A;&#x3002;
</p>
</div>
</div>

<div id="outline-container-org10cb287" class="outline-4">
<h4 id="&#x8BB0;&#x4F4F;"><a id="org10cb287"></a>&#x8BB0;&#x4F4F;&#xFF1A;</h4>
<div class="outline-text-4" id="text-&#x8BB0;&#x4F4F;">
<ul class="org-ul">
<li>&#x5728;&#x6A21;&#x677F;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5F15;&#x7528;&#x5B9E;&#x53C2;&#x4F1A;&#x88AB;&#x5F53;&#x6210;&#x975E;&#x5F15;&#x7528;&#x5B9E;&#x53C2;&#x5BF9;&#x5F85;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5B9E;&#x53C2;&#x7684;&#x5F15;&#x7528;&#x5C5E;&#x6027;&#x88AB;&#x5FFD;&#x7565;&#x4E86;&#x3002;</li>
<li>&#x5F53;&#x6A21;&#x677F;&#x53C2;&#x6570;&#xFF08;&#x5F62;&#x53C2;&#xFF09;&#x4E3A;&#x901A;&#x7528;&#x5F15;&#x7528;&#x65F6;&#xFF0C;&#x5DE6;&#x503C;&#x5B9E;&#x53C2;&#x9700;&#x8981;&#x7279;&#x6B8A;&#x5BF9;&#x5F85;&#x3002;</li>
<li>&#x5728;&#x63A8;&#x5BFC;&#x503C;&#x4F20;&#x9012;&#x5F62;&#x53C2;&#x7684;&#x6A21;&#x677F;&#x65F6;&#xFF0C;&#x5B9E;&#x53C2;&#x7684;const&#x548C;volatile&#x5C5E;&#x6027;&#x88AB;&#x79FB;&#x9664;&#x3002;</li>
<li>&#x5728;&#x63A8;&#x5BFC;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6570;&#x7EC4;&#x548C;&#x51FD;&#x6570;&#x5B9E;&#x53C2;&#x90FD;&#x4F1A;&#x88AB;&#x9000;&#x5316;&#x4E3A;&#x6307;&#x9488;&#xFF0C;&#x9664;&#x975E;&#x5B83;&#x4EEC;&#x88AB;&#x7528;&#x6765;&#x521D;&#x59CB;&#x5316;&#x5F15;&#x7528;&#xFF08;&#x5F62;&#x53C2;&#x4E3A;&#x5F15;&#x7528;&#x65F6;&#x4FBF;&#x662F;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF09;&#x3002;</li>
</ul>
</div>
</div>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
parameter&#x7FFB;&#x8BD1;&#x4E3A;&#x5F62;&#x53C2;&#xFF0C;argument&#x7FFB;&#x8BD1;&#x4E3A;&#x5B9E;&#x53C2;&#x3002;&#x672C;&#x6587;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x4E00;&#x6982;&#x6307;&#x5F62;&#x53C2;&#xFF0C;&#x5728;&#x6613;&#x6DF7;&#x6DC6;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4F1A;&#x6307;&#x660E;&#x662F;&#x5F62;&#x53C2;&#x6216;&#x5B9E;&#x53C2;&#x3002;
</p></div></div>

<div class="footdef"><sup><a id="fn.2" class="footnum" href="#fnr.2">2</a></sup> <div class="footpara"><p class="footpara">
universal reference&#x3002;
</p></div></div>


</div>
</div></div>
<div id="postamble" class="status">
<div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;">Last Updated 2017-08-07 Mon 04:12. <br><a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 9.0.9)</div>
</div>
]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;content&quot;&gt;

&lt;div id=&quot;outline-container-org1ee874b&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;&amp;#x7B2C;&amp;#x4E00;&amp;#x7AE0;-&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&quot;&gt;&lt;a id=&quot;org1ee874b&quot;&gt;&lt;/a&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x7AE0; &amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-&amp;#x7B2C;&amp;#x4E00;&amp;#x7AE0;-&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&quot;&gt;
&lt;p&gt;
C++98&amp;#x6709;&amp;#x4E00;&amp;#x5957;&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&amp;#x89C4;&amp;#x5219;&amp;#x7528;&amp;#x4E8E;&amp;#x51FD;&amp;#x6570;&amp;#x6A21;&amp;#x677F;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x63A8;&amp;#x5BFC;&amp;#x3002;C++11&amp;#x5BF9;&amp;#x5B83;&amp;#x7A0D;&amp;#x4F5C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5E76;&amp;#x589E;&amp;#x52A0;&amp;#x4E86;&amp;#x4E24;&amp;#x6761;&amp;#xFF1A; &lt;b&gt;auto&lt;/b&gt; &amp;#x548C; &lt;b&gt;decltype&lt;/b&gt; &amp;#x3002;C++14&amp;#x6269;&amp;#x5C55;&amp;#x4E86; &lt;b&gt;auto&lt;/b&gt; &amp;#x548C; &lt;b&gt;decltype&lt;/b&gt; &amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x5883;&amp;#x3002;&amp;#x7C7B;&amp;#x578B;&amp;#x63A8;&amp;#x5BFC;&amp;#x7684;&amp;#x666E;&amp;#x904D;&amp;#x5E94;&amp;#x7528;&amp;#xFF0C;&amp;#x5C06;&amp;#x4F60;&amp;#x4ECE;&amp;#x624B;&amp;#x52A8;&amp;#x62FC;&amp;#x5199;&amp;#x90A3;&amp;#x4E9B;&amp;#x591A;&amp;#x4F59;&amp;#x4E14;&amp;#x660E;&amp;#x663E;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x7E41;&amp;#x91CD;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E2D;&amp;#x89E3;&amp;#x653E;&amp;#x51FA;&amp;#x6765;&amp;#xFF0C;&amp;#x5B83;&amp;#x8BA9;C++&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x52A0;&amp;#x901A;&amp;#x7528;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x7684;&amp;#xFF0C;&amp;#x5C06;&amp;#x4F60;&amp;#x5BF9;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x4FEE;&amp;#x6539;&amp;#x4F20;&amp;#x64AD;&amp;#x5230;&amp;#x5176;&amp;#x4ED6;&amp;#x5730;&amp;#x65B9;&amp;#x3002;&amp;#x5F53;&amp;#x7136;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E5F;&amp;#x4F1A;&amp;#x8BA9;&amp;#x4EE3;&amp;#x7801;&amp;#x884C;&amp;#x4E3A;&amp;#x66F4;&amp;#x96BE;&amp;#x63A8;&amp;#x6D4B;&amp;#xFF0C;&amp;#x6BD5;&amp;#x7ADF;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x63A8;&amp;#x5BFC;&amp;#x51FA;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x5E76;&amp;#x4E0D;&amp;#x662F;&amp;#x4E00;&amp;#x76F4;&amp;#x90FD;&amp;#x5982;&amp;#x4F60;&amp;#x6240;&amp;#x6599;&amp;#x3002;
&lt;/p&gt;
    
    </summary>
    
      <category term="Translation" scheme="http://paruka.me/categories/Translation/"/>
    
      <category term="Effective Modern C++" scheme="http://paruka.me/categories/Translation/Effective-Modern-C/"/>
    
    
      <category term="Effective Modern C++" scheme="http://paruka.me/tags/Effective-Modern-C/"/>
    
      <category term="Press Ban" scheme="http://paruka.me/tags/Press-Ban/"/>
    
      <category term="禁止转载" scheme="http://paruka.me/tags/%E7%A6%81%E6%AD%A2%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
</feed>
